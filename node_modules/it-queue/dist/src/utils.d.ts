/**
 * A function with additional start/stop methods
 */
export interface DebouncedFunction {
    (): void;
    start(): void;
    stop(): void;
}
/**
 * Returns a function wrapper that will only call the passed function once
 *
 * Important - the passed function should not throw or reject
 */
export declare function debounce(func: () => void | Promise<void>, wait: number): DebouncedFunction;
//# sourceMappingURL=utils.d.ts.map