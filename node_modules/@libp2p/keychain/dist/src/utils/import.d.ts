import type { PrivateKey, RSAPrivateKey } from '@libp2p/interface';
/**
 * Converts an exported private key into its representative object.
 *
 * Supported formats are 'pem' (RSA only) and 'libp2p-key'.
 */
export declare function importPrivateKey(encryptedKey: string, password: string): Promise<PrivateKey>;
/**
 * Attempts to decrypt a base64 encoded PrivateKey string
 * with the given password. The privateKey must have been exported
 * using the same password and underlying cipher (aes-gcm)
 */
export declare function importer(privateKey: string, password: string): Promise<Uint8Array>;
export declare function importFromPem(pem: string, password: string): Promise<RSAPrivateKey>;
//# sourceMappingURL=import.d.ts.map