{
  "version": 3,
  "sources": ["../../../node_modules/reflect-metadata/Reflect.js", "../../../node_modules/pvtsutils/build/index.js", "../../../node_modules/tslib/tslib.js", "../src/index.ts", "../../interface/src/errors.ts", "../../interface/src/events.ts", "../../interface/src/peer-id.ts", "../../interface/src/transport.ts", "../../../node_modules/main-event/src/index.ts", "../../interface/src/index.ts", "../../../node_modules/multiformats/src/bases/base58.ts", "../../../node_modules/multiformats/src/bytes.ts", "../../../node_modules/multiformats/src/vendor/base-x.js", "../../../node_modules/multiformats/src/bases/base.ts", "../../../node_modules/multiformats/src/bases/base32.ts", "../../../node_modules/multiformats/src/bases/base36.ts", "../../../node_modules/multiformats/src/hashes/digest.ts", "../../../node_modules/multiformats/src/vendor/varint.js", "../../../node_modules/multiformats/src/varint.ts", "../../../node_modules/multiformats/src/cid.ts", "../../../node_modules/multiformats/src/hashes/identity.ts", "../../../node_modules/uint8arrays/src/equals.ts", "../../../node_modules/uint8arrays/src/alloc.ts", "../../../node_modules/uint8arrays/src/concat.ts", "../../../node_modules/uint8arraylist/src/index.ts", "../../../node_modules/multiformats/src/bases/base10.ts", "../../../node_modules/multiformats/src/bases/base16.ts", "../../../node_modules/multiformats/src/bases/base2.ts", "../../../node_modules/multiformats/src/bases/base256emoji.ts", "../../../node_modules/multiformats/src/bases/base64.ts", "../../../node_modules/multiformats/src/bases/base8.ts", "../../../node_modules/multiformats/src/bases/identity.ts", "../../../node_modules/multiformats/src/codecs/json.ts", "../../../node_modules/multiformats/src/hashes/sha2-browser.ts", "../../../node_modules/multiformats/src/hashes/hasher.ts", "../../../node_modules/multiformats/src/basics.ts", "../../../node_modules/uint8arrays/src/util/bases.ts", "../../../node_modules/uint8arrays/src/from-string.ts", "../../../node_modules/uint8arrays/src/to-string.ts", "../../crypto/src/keys/rsa/der.ts", "../../crypto/src/keys/ecdsa/index.ts", "../../crypto/src/keys/ecdsa/utils.ts", "../../crypto/src/keys/ecdsa/ecdsa.ts", "../../../node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/hashes/src/_md.ts", "../../../node_modules/@noble/hashes/src/_u64.ts", "../../../node_modules/@noble/hashes/src/sha2.ts", "../../../node_modules/@noble/curves/src/utils.ts", "../../../node_modules/@noble/curves/src/abstract/modular.ts", "../../../node_modules/@noble/curves/src/abstract/curve.ts", "../../../node_modules/@noble/curves/src/abstract/edwards.ts", "../../../node_modules/@noble/curves/src/abstract/montgomery.ts", "../../../node_modules/@noble/curves/src/ed25519.ts", "../../crypto/src/errors.ts", "../../crypto/src/webcrypto/webcrypto.browser.ts", "../../crypto/src/webcrypto/index.ts", "../../crypto/src/keys/ed25519/index.browser.ts", "../../crypto/src/util.ts", "../../crypto/src/keys/ed25519/ed25519.ts", "../../crypto/src/keys/ed25519/utils.ts", "../../../node_modules/uint8-varint/src/index.ts", "../../../node_modules/protons-runtime/src/utils/float.ts", "../../../node_modules/protons-runtime/src/utils/longbits.ts", "../../../node_modules/protons-runtime/src/utils/utf8.ts", "../../../node_modules/protons-runtime/src/utils/reader.ts", "../../../node_modules/protons-runtime/src/decode.ts", "../../../node_modules/protons-runtime/src/utils/pool.ts", "../../../node_modules/protons-runtime/src/utils/writer.ts", "../../../node_modules/protons-runtime/src/encode.ts", "../../../node_modules/protons-runtime/src/codec.ts", "../../../node_modules/protons-runtime/src/codecs/enum.ts", "../../../node_modules/protons-runtime/src/codecs/message.ts", "../../../node_modules/protons-runtime/src/index.ts", "../../crypto/src/keys/keys.ts", "../../crypto/src/keys/rsa/utils.ts", "../../crypto/src/keys/rsa/rsa.ts", "../../crypto/src/keys/rsa/index.browser.ts", "../../../node_modules/@noble/hashes/src/hmac.ts", "../../../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../../node_modules/@noble/curves/src/secp256k1.ts", "../../crypto/src/keys/secp256k1/index.browser.ts", "../../crypto/src/keys/secp256k1/secp256k1.ts", "../../crypto/src/keys/secp256k1/utils.ts", "../../crypto/src/keys/index.ts", "../../peer-id/src/peer-id.ts", "../../peer-id/src/index.ts", "../../../node_modules/@multiformats/multiaddr/src/errors.ts", "../../../node_modules/@chainsafe/is-ip/src/parser.ts", "../../../node_modules/@chainsafe/is-ip/src/parse.ts", "../../../node_modules/@chainsafe/is-ip/src/is-ip.ts", "../../../node_modules/@multiformats/multiaddr/src/utils.ts", "../../../node_modules/@multiformats/multiaddr/src/validation.ts", "../../../node_modules/@multiformats/multiaddr/src/registry.ts", "../../../node_modules/@multiformats/multiaddr/src/components.ts", "../../../node_modules/@multiformats/multiaddr/src/multiaddr.ts", "../../../node_modules/@multiformats/multiaddr/src/index.ts", "../../../node_modules/@multiformats/multiaddr-matcher/src/utils.ts", "../../../node_modules/@multiformats/multiaddr-matcher/src/index.ts", "../src/private-to-public/pb/message.ts", "../src/constants.ts", "../../utils/src/multiaddr/get-net-config.ts", "../../../node_modules/p-defer/index.js", "../../../node_modules/it-pushable/src/fifo.ts", "../../../node_modules/it-pushable/src/index.ts", "../../../node_modules/p-event/node_modules/p-timeout/index.js", "../../../node_modules/p-event/index.js", "../../utils/src/errors.ts", "../../../node_modules/race-signal/src/index.ts", "../../utils/src/abstract-message-stream.ts", "../../utils/src/abstract-multiaddr-connection.ts", "../../utils/src/is-promise.ts", "../../utils/src/abstract-stream-muxer.ts", "../../utils/src/abstract-stream.ts", "../../utils/src/stream-utils.ts", "../../utils/src/length-prefixed-decoder.ts", "../../../node_modules/it-length-prefixed/src/errors.ts", "../../../node_modules/it-length-prefixed/src/utils.ts", "../../../node_modules/it-length-prefixed/src/encode.ts", "../../../node_modules/it-length-prefixed/src/decode.ts", "../../../node_modules/detect-browser/es/index.js", "../src/util.ts", "../src/stream.ts", "../src/muxer.ts", "../src/rtcpeerconnection-to-conn.ts", "../src/webrtc/index.browser.ts", "../../../node_modules/progress-events/src/index.ts", "../src/error.ts", "../src/private-to-private/pb/message.ts", "../src/private-to-private/util.ts", "../src/private-to-private/initiate-connection.ts", "../src/private-to-private/listener.ts", "../src/private-to-private/signaling-stream-handler.ts", "../src/private-to-private/transport.ts", "../../../node_modules/@peculiar/x509/build/x509.es.js", "../../../node_modules/asn1js/build/index.es.js", "../../../node_modules/pvutils/build/utils.es.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/enums.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/types/bit_string.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/converters.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/helper.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/schema.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/storage.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/decorators.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/parser.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/serializer.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/objects.js", "../../../node_modules/@peculiar/asn1-schema/build/es2015/convert.js", "../../../node_modules/@peculiar/asn1-x509/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-x509/build/es2015/ip_converter.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/general_name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_information_access.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_key_identifier.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/basic_constraints.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/general_names.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_issuer.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_policies.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_number.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_delta_indicator.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_distribution_points.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_freshest.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_issuing_distribution_point.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_reason.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/extended_key_usage.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/inhibit_any_policy.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/invalidity_date.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/issuer_alternative_name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/key_usage.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/name_constraints.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_constraints.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_mappings.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_alternative_name.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/attribute.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_directory_attributes.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_key_identifier.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/private_key_usage_period.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/entrust_version_info.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_info_access.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/algorithm_identifier.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/subject_public_key_info.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/time.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/validity.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/extension.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/types.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/tbs_certificate.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/certificate.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/tbs_cert_list.js", "../../../node_modules/@peculiar/asn1-x509/build/es2015/certificate_list.js", "../../../node_modules/@peculiar/x509/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-cms/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-cms/build/es2015/issuer_and_serial_number.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/signer_identifier.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/types.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/attribute.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/signer_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/attributes.js", "../../../node_modules/@peculiar/asn1-x509-attr/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/aa_clear_attrs.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_spec.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/aa_controls.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/issuer_serial.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/object_digest_info.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/v2_form.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_cert_issuer.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_cert_validity_period.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/holder.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attribute_certificate_info.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attribute_certificate.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/class_list.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/security_category.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/clearance.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/ietf_attr_syntax.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/target.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/proxy_info.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/role_syntax.js", "../../../node_modules/@peculiar/asn1-x509-attr/build/es2015/svce_auth_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/certificate_choices.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/content_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/encapsulated_content_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/encrypted_content_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/other_key_attribute.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/key_agree_recipient_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/key_trans_recipient_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/kek_recipient_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/password_recipient_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/recipient_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/recipient_infos.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/revocation_info_choice.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/originator_info.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/enveloped_data.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-cms/build/es2015/signed_data.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/algorithms.js", "../../../node_modules/@peculiar/asn1-ecc/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/rfc3279.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_parameters.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_private_key.js", "../../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_signature_value.js", "../../../node_modules/@peculiar/asn1-rsa/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/algorithms.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsaes_oaep.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pss.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pkcs1_v1_5.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/other_prime_info.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/rsa_private_key.js", "../../../node_modules/@peculiar/asn1-rsa/build/es2015/rsa_public_key.js", "../../../node_modules/tsyringe/dist/esm5/types/lifecycle.js", "../../../node_modules/tslib/modules/index.js", "../../../node_modules/tsyringe/dist/esm5/reflection-helpers.js", "../../../node_modules/tsyringe/dist/esm5/providers/class-provider.js", "../../../node_modules/tsyringe/dist/esm5/providers/factory-provider.js", "../../../node_modules/tsyringe/dist/esm5/lazy-helpers.js", "../../../node_modules/tsyringe/dist/esm5/providers/injection-token.js", "../../../node_modules/tsyringe/dist/esm5/providers/token-provider.js", "../../../node_modules/tsyringe/dist/esm5/providers/value-provider.js", "../../../node_modules/tsyringe/dist/esm5/providers/provider.js", "../../../node_modules/tsyringe/dist/esm5/registry-base.js", "../../../node_modules/tsyringe/dist/esm5/registry.js", "../../../node_modules/tsyringe/dist/esm5/resolution-context.js", "../../../node_modules/tsyringe/dist/esm5/error-helpers.js", "../../../node_modules/tsyringe/dist/esm5/types/disposable.js", "../../../node_modules/tsyringe/dist/esm5/interceptors.js", "../../../node_modules/tsyringe/dist/esm5/dependency-container.js", "../../../node_modules/tsyringe/dist/esm5/decorators/injectable.js", "../../../node_modules/tsyringe/dist/esm5/index.js", "../../../node_modules/@peculiar/asn1-pkcs9/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-pfx/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/attribute.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/authenticated_safe.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/object_identifiers.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/types.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/cert_bag.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/crl_bag.js", "../../../node_modules/@peculiar/asn1-pkcs8/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-pkcs8/build/es2015/encrypted_private_key_info.js", "../../../node_modules/@peculiar/asn1-pkcs8/build/es2015/private_key_info.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/key_bag.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/pkcs8_shrouded_key_bag.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/secret_bag.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/mac_data.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/pfx.js", "../../../node_modules/@peculiar/asn1-pfx/build/es2015/safe_bag.js", "../../../node_modules/@peculiar/asn1-pkcs9/build/es2015/index.js", "../../../node_modules/@peculiar/asn1-csr/node_modules/tslib/tslib.es6.mjs", "../../../node_modules/@peculiar/asn1-csr/build/es2015/attributes.js", "../../../node_modules/@peculiar/asn1-csr/build/es2015/certification_request_info.js", "../../../node_modules/@peculiar/asn1-csr/build/es2015/certification_request.js", "../../../node_modules/interface-datastore/src/key.ts", "../src/private-to-public/listener.browser.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/constants.ts", "../../../node_modules/@noble/ciphers/src/utils.ts", "../../../node_modules/@noble/ciphers/src/_arx.ts", "../../../node_modules/@noble/ciphers/src/_poly1305.ts", "../../../node_modules/@noble/ciphers/src/chacha.ts", "../../../node_modules/@noble/hashes/src/hkdf.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/crypto/js.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/crypto/index.browser.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/crypto.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/encoder.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/metrics.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/logger.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/errors.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/nonce.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/protocol.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/proto/payload.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/utils.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/performHandshake.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/noise.ts", "../../../node_modules/@chainsafe/libp2p-noise/src/index.ts", "../src/private-to-public/utils/sdp.ts", "../src/private-to-public/utils/generate-noise-prologue.ts", "../src/private-to-public/utils/connect.ts", "../src/private-to-public/utils/get-rtcpeerconnection.browser.ts", "../src/private-to-public/utils/pem.ts", "../src/private-to-public/transport.ts"],
  "sourcesContent": ["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "/*!\n * MIT License\n * \n * Copyright (c) 2017-2024 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\n'use strict';\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f\\s]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexports.BufferSourceConverter = BufferSourceConverter;\nexports.Convert = Convert;\nexports.assign = assign;\nexports.combine = combine;\nexports.isEqual = isEqual;\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "/**\n * @packageDocumentation\n *\n * A [libp2p transport](https://docs.libp2p.io/concepts/transports/overview/) based on [WebRTC data channels](https://webrtc.org/).\n *\n * [WebRTC](https://www.w3.org/TR/webrtc/) is a specification that allows real-time communication between nodes - it's commonly used in browser video conferencing applications but it also provides a reliable data transport mechanism called [data channels](https://www.w3.org/TR/webrtc/#peer-to-peer-data-api) which libp2p uses to facilitate [protocol streams](https://docs.libp2p.io/concepts/multiplex/overview/) between peers.\n *\n * There are two transports exposed by this module, [webRTC](https://github.com/libp2p/specs/blob/master/webrtc/webrtc.md) and [webRTCDirect](https://github.com/libp2p/specs/blob/master/webrtc/webrtc-direct.md).\n *\n * ## WebRTC vs WebRTC Direct\n *\n * The connection establishment phase of WebRTC involves a handshake using [SDP](https://en.wikipedia.org/wiki/Session_Description_Protocol) during which two peers will exchange information such as open ports, network addresses and required capabilities.\n *\n * A third party is usually necessary to carry out this handshake, forwarding messages between the two peers until they can make a direct connection between themselves.\n *\n * The WebRTC transport uses libp2p [Circuit Relay](https://docs.libp2p.io/concepts/nat/circuit-relay/)s to forward SDP messages. Once a direct connection is formed the relay plays no further part in the exchange.\n *\n * WebRTC Direct uses a technique known as [SDP munging](https://webrtchacks.com/not-a-guide-to-sdp-munging/) to skip the handshake step, instead encoding enough information in the connection request that the responder can derive what would have been in the handshake messages and so requires no third parties to establish a connection.\n *\n * A WebRTC Direct multiaddr also includes a certhash of the target peer - this is used to allow opening a connection to the remote, which would otherwise be denied due to use of a self-signed certificate.\n *\n * In both cases, once the connection is established a [Noise handshake](https://noiseprotocol.org/noise.html) is carried out to ensure that the remote peer has the private key that corresponds to the public key that makes up their PeerId, giving you both encryption and authentication.\n *\n * @example WebRTC\n *\n * WebRTC requires use of a relay to connect two nodes. The listener first discovers a relay server and makes a reservation, then the dialer can connect via the relayed address.\n *\n * ```TypeScript\n * import { noise } from '@chainsafe/libp2p-noise'\n * import { yamux } from '@chainsafe/libp2p-yamux'\n * import { echo } from '@libp2p/echo'\n * import { circuitRelayTransport, circuitRelayServer } from '@libp2p/circuit-relay-v2'\n * import { identify } from '@libp2p/identify'\n * import { webRTC } from '@libp2p/webrtc'\n * import { webSockets } from '@libp2p/websockets'\n * import { WebRTC } from '@multiformats/multiaddr-matcher'\n * import delay from 'delay'\n * import { createLibp2p } from 'libp2p'\n * import type { Multiaddr } from '@multiformats/multiaddr'\n *\n * // the relay server listens on a transport dialable by the listener and the\n * // dialer, and has a relay service configured\n * const relay = await createLibp2p({\n *   addresses: {\n *   listen: ['/ip4/127.0.0.1/tcp/0/ws']\n *   },\n *   transports: [\n *     webSockets()\n *   ],\n *   connectionEncrypters: [noise()],\n *   streamMuxers: [yamux()],\n *   connectionGater: {\n *     denyDialMultiaddr: () => false\n *   },\n *   services: {\n *     identify: identify(),\n *     relay: circuitRelayServer()\n *   }\n * })\n *\n * // the listener has a WebSocket transport to dial the relay, a Circuit Relay\n * // transport to make a reservation, and a WebRTC transport to accept incoming\n * // WebRTC connections\n * const listener = await createLibp2p({\n *   addresses: {\n *     listen: [\n *       '/p2p-circuit',\n *       '/webrtc'\n *     ]\n *   },\n *   transports: [\n *     webSockets(),\n *     webRTC(),\n *     circuitRelayTransport()\n *   ],\n *   connectionEncrypters: [noise()],\n *   streamMuxers: [yamux()],\n *   connectionGater: {\n *     denyDialMultiaddr: () => false\n *   },\n *   services: {\n *     identify: identify(),\n *     echo: echo()\n *   }\n * })\n *\n * // the listener dials the relay (or discovers a public relay via some other\n * // method)\n * await listener.dial(relay.getMultiaddrs(), {\n *   signal: AbortSignal.timeout(5000)\n * })\n *\n * let webRTCMultiaddr: Multiaddr | undefined\n *\n * // wait for the listener to make a reservation on the relay\n * while (true) {\n *   webRTCMultiaddr = listener.getMultiaddrs().find(ma => WebRTC.matches(ma))\n *\n *   if (webRTCMultiaddr != null) {\n *     break\n *   }\n *\n *   // try again later\n *   await delay(1000)\n * }\n *\n * // the dialer has Circuit Relay, WebSocket and WebRTC transports to dial\n * // the listener via the relay, complete the SDP handshake and establish a\n * // direct WebRTC connection\n * const dialer = await createLibp2p({\n *   transports: [\n *     webSockets(),\n *     webRTC(),\n *     circuitRelayTransport()\n *   ],\n *   connectionEncrypters: [noise()],\n *   streamMuxers: [yamux()],\n *   connectionGater: {\n *     denyDialMultiaddr: () => false\n *   },\n *   services: {\n *     identify: identify(),\n *     echo: echo()\n *   }\n * })\n *\n * // dial the listener and open an echo protocol stream\n * const stream = await dialer.dialProtocol(webRTCMultiaddr, dialer.services.echo.protocol, {\n *   signal: AbortSignal.timeout(5000)\n * })\n *\n * // we can now stop the relay\n * await relay.stop()\n *\n * // send/receive some data from the remote peer via a direct connection\n * stream.send(new TextEncoder().encode('hello world'))\n *\n * stream.addEventListener('message', (evt) => {\n *   console.info(new TextDecoder().decode(evt.data.subarray()))\n * })\n * ```\n *\n * @example WebRTC Direct\n *\n * WebRTC Direct allows a client to establish a WebRTC connection to a server\n * without using a relay to first exchange SDP messages.\n *\n * Instead the server listens on a public UDP port and embeds its certificate\n * hash in the published multiaddr. It derives the client's SDP offer based on\n * the incoming IP/port of STUN messages sent to this public port.\n *\n * The client derives the server's SDP answer based on the information in the\n * multiaddr so no SDP handshake via a third party is required.\n *\n * Full details of the connection protocol can be found in the [WebRTC Direct spec](https://github.com/libp2p/specs/blob/master/webrtc/webrtc-direct.md).\n *\n * Browsers cannot listen on WebRTC Direct addresses since they cannot open\n * ports, but they can dial all spec-compliant servers.\n *\n * Node.js/go and rust-libp2p can listen on and dial WebRTC Direct addresses.\n *\n * ```TypeScript\n * import { createLibp2p } from 'libp2p'\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { fromString, toString } from 'uint8arrays'\n * import { webRTCDirect } from '@libp2p/webrtc'\n *\n * const listener = await createLibp2p({\n *   addresses: {\n *     listen: [\n *       '/ip4/0.0.0.0/udp/0/webrtc-direct'\n *     ]\n *   },\n *   transports: [\n *     webRTCDirect()\n *   ]\n * })\n *\n * await listener.start()\n *\n * const dialer = await createLibp2p({\n *   transports: [\n *     webRTCDirect()\n *   ]\n * })\n *\n * await dialer.start()\n *\n * const stream = await dialer.dialProtocol(listener.getMultiaddrs(), '/my-protocol/1.0.0', {\n *   signal: AbortSignal.timeout(10_000)\n * })\n *\n * stream.send(new TextEncoder().encode('hello world'))\n *\n * stream.addEventListener('message', (evt) => {\n *   console.info(new TextDecoder().decode(evt.data.subarray()))\n * })\n * ```\n *\n * ## WebRTC Direct certificate hashes\n *\n * WebRTC Direct listeners publish the hash of their TLS certificate as part of\n * the listening multiaddr.\n *\n * By default these certificates are generated at start up using an ephemeral\n * keypair that only exists while the node is running.\n *\n * This means that the certificate hashes change when the node is restarted,\n * which can be undesirable if multiaddrs are intended to be long lived (e.g.\n * if the node is used as a network bootstrapper).\n *\n * To reuse the same certificate and keypair, configure a persistent datastore\n * and the [@libp2p/keychain](https://www.npmjs.com/package/@libp2p/keychain)\n * service as part of your service map:\n *\n * @example Reuse TLS certificates after restart\n *\n * ```ts\n * import { LevelDatastore } from 'datastore-level'\n * import { webRTCDirect } from '@libp2p/webrtc'\n * import { keychain } from '@libp2p/keychain'\n * import { createLibp2p } from 'libp2p'\n *\n * // store data on disk between restarts\n * const datastore = new LevelDatastore('/path/to/store')\n *\n * const listener = await createLibp2p({\n *   addresses: {\n *     listen: [\n *       '/ip4/0.0.0.0/udp/0/webrtc-direct'\n *     ]\n *   },\n *   datastore,\n *   transports: [\n *     webRTCDirect()\n *   ],\n *   services: {\n *     keychain: keychain()\n *   }\n * })\n *\n * await listener.start()\n *\n * console.info(listener.getMultiaddrs())\n * // /ip4/...../udp/../webrtc-direct/certhash/foo\n *\n * await listener.stop()\n * await listener.start()\n *\n * console.info(listener.getMultiaddrs())\n * // /ip4/...../udp/../webrtc-direct/certhash/foo\n * ```\n */\n\nimport { WebRTCTransport } from './private-to-private/transport.js'\nimport { WebRTCDirectTransport } from './private-to-public/transport.js'\nimport type { WebRTCTransportComponents, WebRTCTransportInit } from './private-to-private/transport.js'\nimport type { WebRTCTransportDirectInit, WebRTCDirectTransportComponents } from './private-to-public/transport.js'\nimport type { Transport } from '@libp2p/interface'\n\nexport interface DataChannelOptions {\n  /**\n   * The maximum message size to be sent over the channel in bytes\n   *\n   * @default 16_384\n   */\n  maxMessageSize?: number\n\n  /**\n   * If the channel's `bufferedAmount` grows over this amount in bytes, wait\n   * for it to drain before sending more data\n   *\n   * @default 16_777_216\n   */\n  maxBufferedAmount?: number\n\n  /**\n   * When `bufferedAmount` is above `maxBufferedAmount`, we pause sending until\n   * the `bufferedAmountLow` event fires - this controls how long we wait for\n   * that event in ms\n   *\n   * @default 30_000\n   */\n  bufferedAmountLowEventTimeout?: number\n\n  /**\n   * When closing a stream, we wait for `bufferedAmount` to become 0 before\n   * closing the underlying RTCDataChannel - this controls how long we wait\n   * in ms\n   *\n   * @default 30_000\n   */\n  drainTimeout?: number\n\n  /**\n   * When closing a stream we first send a FIN flag to the remote and wait\n   * for a FIN_ACK reply before closing the underlying RTCDataChannel - this\n   * controls how long we wait for the acknowledgement in ms\n   *\n   * @default 5_000\n   */\n  closeTimeout?: number\n\n  /**\n   * When sending the first data message, if the channel is not in the \"open\"\n   * state, wait this long for the \"open\" event to fire.\n   *\n   * @default 5_000\n   */\n  openTimeout?: number\n\n  /**\n   * Due to bugs in WebRTC implementations it's necessary for the remote end of\n   * the connection to acknowledge the FIN message we send during stream\n   * closing. A stream will wait for this many ms.\n   *\n   * @default 10_000\n   */\n  finAckTimeout?: number\n}\n\n/**\n * PEM format server certificate and private key\n */\nexport interface TransportCertificate {\n  /**\n   * The private key for the certificate in PEM format\n   */\n  privateKey: string\n\n  /**\n   * PEM format certificate\n   */\n  pem: string\n\n  /**\n   * The hash of the certificate\n   */\n  certhash: string\n}\n\nexport type { WebRTCTransportDirectInit, WebRTCDirectTransportComponents }\n\nfunction webRTCDirect (init?: WebRTCTransportDirectInit): (components: WebRTCDirectTransportComponents) => Transport {\n  return (components: WebRTCDirectTransportComponents) => new WebRTCDirectTransport(components, init)\n}\n\nexport type { WebRTCTransportInit, WebRTCTransportComponents }\n\nfunction webRTC (init?: WebRTCTransportInit): (components: WebRTCTransportComponents) => Transport {\n  return (components: WebRTCTransportComponents) => new WebRTCTransport(components, init)\n}\n\nexport { webRTC, webRTCDirect }\n", "/**\n * When this error is thrown it means an operation was aborted,\n * usually in response to the `abort` event being emitted by an\n * AbortSignal.\n */\nexport class AbortError extends Error {\n  static name = 'AbortError'\n\n  constructor (message: string = 'The operation was aborted') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\n\n/**\n * Thrown when a remote Peer ID does not match the expected one\n */\nexport class UnexpectedPeerError extends Error {\n  static name = 'UnexpectedPeerError'\n\n  constructor (message = 'Unexpected Peer') {\n    super(message)\n    this.name = 'UnexpectedPeerError'\n  }\n}\n\n/**\n * Thrown when a crypto exchange fails\n */\nexport class InvalidCryptoExchangeError extends Error {\n  static name = 'InvalidCryptoExchangeError'\n\n  constructor (message = 'Invalid crypto exchange') {\n    super(message)\n    this.name = 'InvalidCryptoExchangeError'\n  }\n}\n\n/**\n * Thrown when invalid parameters are passed to a function or method call\n */\nexport class InvalidParametersError extends Error {\n  static name = 'InvalidParametersError'\n\n  constructor (message = 'Invalid parameters') {\n    super(message)\n    this.name = 'InvalidParametersError'\n  }\n}\n\n/**\n * Thrown when a public key is invalid\n */\nexport class InvalidPublicKeyError extends Error {\n  static name = 'InvalidPublicKeyError'\n\n  constructor (message = 'Invalid public key') {\n    super(message)\n    this.name = 'InvalidPublicKeyError'\n  }\n}\n\n/**\n * Thrown when a private key is invalid\n */\nexport class InvalidPrivateKeyError extends Error {\n  static name = 'InvalidPrivateKeyError'\n\n  constructor (message = 'Invalid private key') {\n    super(message)\n    this.name = 'InvalidPrivateKeyError'\n  }\n}\n\n/**\n * Thrown when a operation is unsupported\n */\nexport class UnsupportedOperationError extends Error {\n  static name = 'UnsupportedOperationError'\n\n  constructor (message = 'Unsupported operation') {\n    super(message)\n    this.name = 'UnsupportedOperationError'\n  }\n}\n\n/**\n * Thrown when a connection is closing\n */\nexport class ConnectionClosingError extends Error {\n  static name = 'ConnectionClosingError'\n\n  constructor (message = 'The connection is closing') {\n    super(message)\n    this.name = 'ConnectionClosingError'\n  }\n}\n\n/**\n * Thrown when a connection is closed\n */\nexport class ConnectionClosedError extends Error {\n  static name = 'ConnectionClosedError'\n\n  constructor (message = 'The connection is closed') {\n    super(message)\n    this.name = 'ConnectionClosedError'\n  }\n}\n\n/**\n * Thrown when a connection fails\n */\nexport class ConnectionFailedError extends Error {\n  static name = 'ConnectionFailedError'\n\n  constructor (message = 'Connection failed') {\n    super(message)\n    this.name = 'ConnectionFailedError'\n  }\n}\n\n/**\n * Thrown when the muxer is closed and an attempt to open a stream occurs\n */\nexport class MuxerClosedError extends Error {\n  static name = 'MuxerClosedError'\n\n  constructor (message = 'The muxer is closed') {\n    super(message)\n    this.name = 'MuxerClosedError'\n  }\n}\n\n/**\n * Thrown when a protocol stream is reset by the remote muxer\n */\nexport class StreamResetError extends Error {\n  static name = 'StreamResetError'\n\n  constructor (message = 'The stream has been reset') {\n    super(message)\n    this.name = 'StreamResetError'\n  }\n}\n\n/**\n * Thrown when a protocol stream is aborted locally\n */\nexport class StreamAbortedError extends Error {\n  static name = 'StreamAbortedError'\n\n  constructor (message = 'The stream has been aborted') {\n    super(message)\n    this.name = 'StreamAbortedError'\n  }\n}\n\n/**\n * Thrown when a stream is in an invalid state\n */\nexport class StreamStateError extends Error {\n  static name = 'StreamStateError'\n\n  constructor (message = 'The stream is in an invalid state') {\n    super(message)\n    this.name = 'StreamStateError'\n  }\n}\n\n/**\n * Thrown when a stream buffer is full\n */\nexport class StreamBufferError extends Error {\n  static name = 'StreamBufferError'\n\n  constructor (message = 'The stream buffer was full') {\n    super(message)\n    this.name = 'StreamBufferError'\n  }\n}\n\n/**\n * Thrown when a value could not be found\n */\nexport class NotFoundError extends Error {\n  static name = 'NotFoundError'\n\n  constructor (message = 'Not found') {\n    super(message)\n    this.name = 'NotFoundError'\n  }\n}\n\n/**\n * Thrown when an invalid peer ID is encountered\n */\nexport class InvalidPeerIdError extends Error {\n  static name = 'InvalidPeerIdError'\n\n  constructor (message = 'Invalid PeerID') {\n    super(message)\n    this.name = 'InvalidPeerIdError'\n  }\n}\n\n/**\n * Thrown when an invalid multiaddr is encountered\n */\nexport class InvalidMultiaddrError extends Error {\n  static name = 'InvalidMultiaddrError'\n\n  constructor (message = 'Invalid multiaddr') {\n    super(message)\n    this.name = 'InvalidMultiaddrError'\n  }\n}\n\n/**\n * Thrown when an invalid CID is encountered\n */\nexport class InvalidCIDError extends Error {\n  static name = 'InvalidCIDError'\n\n  constructor (message = 'Invalid CID') {\n    super(message)\n    this.name = 'InvalidCIDError'\n  }\n}\n\n/**\n * Thrown when an invalid multihash is encountered\n */\nexport class InvalidMultihashError extends Error {\n  static name = 'InvalidMultihashError'\n\n  constructor (message = 'Invalid Multihash') {\n    super(message)\n    this.name = 'InvalidMultihashError'\n  }\n}\n\n/**\n * Thrown when a protocol is not supported\n */\nexport class UnsupportedProtocolError extends Error {\n  static name = 'UnsupportedProtocolError'\n\n  constructor (message = 'Unsupported protocol error') {\n    super(message)\n    this.name = 'UnsupportedProtocolError'\n  }\n}\n\n/**\n * An invalid or malformed message was encountered during a protocol exchange\n */\nexport class InvalidMessageError extends Error {\n  static name = 'InvalidMessageError'\n\n  constructor (message = 'Invalid message') {\n    super(message)\n    this.name = 'InvalidMessageError'\n  }\n}\n\n/**\n * Thrown when a remote peer sends a structurally valid message that does not\n * comply with the protocol\n */\nexport class ProtocolError extends Error {\n  static name = 'ProtocolError'\n\n  constructor (message = 'Protocol error') {\n    super(message)\n    this.name = 'ProtocolError'\n  }\n}\n\n/**\n * Throw when an operation times out\n */\nexport class TimeoutError extends Error {\n  static name = 'TimeoutError'\n\n  constructor (message = 'Timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\n\n/**\n * Thrown when a startable component is interacted with but it has not been\n * started yet\n */\nexport class NotStartedError extends Error {\n  static name = 'NotStartedError'\n\n  constructor (message = 'Not started') {\n    super(message)\n    this.name = 'NotStartedError'\n  }\n}\n\n/**\n * Thrown when a component is started that has already been started\n */\nexport class AlreadyStartedError extends Error {\n  static name = 'AlreadyStartedError'\n\n  constructor (message = 'Already started') {\n    super(message)\n    this.name = 'AlreadyStartedError'\n  }\n}\n\n/**\n * Thrown when dialing an address failed\n */\nexport class DialError extends Error {\n  static name = 'DialError'\n\n  constructor (message = 'Dial error') {\n    super(message)\n    this.name = 'DialError'\n  }\n}\n\n/**\n * Thrown when listening on an address failed\n */\nexport class ListenError extends Error {\n  static name = 'ListenError'\n\n  constructor (message = 'Listen error') {\n    super(message)\n    this.name = 'ListenError'\n  }\n}\n\n/**\n * This error is thrown when a limited connection is encountered, i.e. if the\n * user tried to open a stream on a connection for a protocol that is not\n * configured to run over limited connections.\n */\nexport class LimitedConnectionError extends Error {\n  static name = 'LimitedConnectionError'\n\n  constructor (message = 'Limited connection') {\n    super(message)\n    this.name = 'LimitedConnectionError'\n  }\n}\n\n/**\n * This error is thrown where there are too many inbound protocols streams open\n */\nexport class TooManyInboundProtocolStreamsError extends Error {\n  static name = 'TooManyInboundProtocolStreamsError'\n\n  constructor (message = 'Too many inbound protocol streams') {\n    super(message)\n    this.name = 'TooManyInboundProtocolStreamsError'\n  }\n}\n\n/**\n * This error is thrown where there are too many outbound protocols streams open\n */\nexport class TooManyOutboundProtocolStreamsError extends Error {\n  static name = 'TooManyOutboundProtocolStreamsError'\n\n  constructor (message = 'Too many outbound protocol streams') {\n    super(message)\n    this.name = 'TooManyOutboundProtocolStreamsError'\n  }\n}\n\n/**\n * Thrown when an attempt to operate on an unsupported key was made\n */\nexport class UnsupportedKeyTypeError extends Error {\n  static name = 'UnsupportedKeyTypeError'\n\n  constructor (message = 'Unsupported key type') {\n    super(message)\n    this.name = 'UnsupportedKeyTypeError'\n  }\n}\n\n/**\n * Thrown when an operation has not been implemented\n */\nexport class NotImplementedError extends Error {\n  static name = 'NotImplementedError'\n\n  constructor (message = 'Not implemented') {\n    super(message)\n    this.name = 'NotImplementedError'\n  }\n}\n", "import type { Uint8ArrayList } from 'uint8arraylist'\n\n/**\n * A custom implementation of MessageEvent as the Undici version does too much\n * validation in it's constructor so is very slow.\n */\nexport class StreamMessageEvent extends Event {\n  public data: Uint8Array | Uint8ArrayList\n\n  constructor (data: Uint8Array | Uint8ArrayList, eventInitDict?: EventInit) {\n    super('message', eventInitDict)\n\n    this.data = data\n  }\n}\n\n/**\n * An event dispatched when the stream is closed. The `error` property can be\n * inspected to discover if the closing was graceful or not, and the `remote`\n * property shows which end of the stream initiated the closure\n */\nexport class StreamCloseEvent extends Event {\n  public error?: Error\n  public local?: boolean\n\n  constructor (local?: boolean, error?: Error, eventInitDict?: EventInit) {\n    super('close', eventInitDict)\n\n    this.error = error\n    this.local = local\n  }\n}\n\nexport class StreamAbortEvent extends StreamCloseEvent {\n  constructor (error: Error, eventInitDict?: EventInit) {\n    super(true, error, eventInitDict)\n  }\n}\n\nexport class StreamResetEvent extends StreamCloseEvent {\n  constructor (error: Error, eventInitDict?: EventInit) {\n    super(false, error, eventInitDict)\n  }\n}\n", "import type { Ed25519PublicKey, KeyType, RSAPublicKey, Secp256k1PublicKey } from './keys.js'\nimport type { CID } from 'multiformats/cid'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\nexport type PeerIdType = KeyType | string\n\n/**\n * A PeerId generated from an RSA public key - it is a base58btc encoded sha-256\n * hash of the public key.\n *\n * RSA public keys are too large to pass around freely, instead Ed25519 or\n * secp256k1 should be preferred as they can embed their public key in the\n * PeerId itself.\n *\n * @deprecated Ed25519 or secp256k1 keys are preferred to RSA\n */\nexport interface RSAPeerId {\n  readonly type: 'RSA'\n\n  /**\n   * RSA public keys are too large to embed in the multihash commonly used to\n   * refer to peers, so this will only be defined if the public key has\n   * previously been found through a routing query or during normal protocol\n   * operations\n   */\n  readonly publicKey?: RSAPublicKey\n\n  /**\n   * Returns the multihash from `toMultihash()` as a base58btc encoded string\n   */\n  toString(): string\n\n  /**\n   * Returns a multihash, the digest of which is the SHA2-256 hash of the public\n   * key\n   */\n  toMultihash(): MultihashDigest<0x12>\n\n  /**\n   * Returns a CID with the libp2p key code and the same multihash as\n   * `toMultihash()`\n   */\n  toCID(): CID<Uint8Array, 0x72, 0x12, 1>\n\n  /**\n   * Returns true if the passed argument is equivalent to this PeerId\n   */\n  equals(other?: any): boolean\n}\n\nexport interface Ed25519PeerId {\n  readonly type: 'Ed25519'\n\n  /**\n   * This will always be defined as the public key is embedded in the multihash\n   * of this PeerId\n   */\n  readonly publicKey: Ed25519PublicKey\n\n  /**\n   * Returns the multihash from `toMultihash()` as a base58btc encoded string\n   */\n  toString(): string\n\n  /**\n   * Returns a multihash, the digest of which is the protobuf-encoded public key\n   * encoded as an identity hash\n   */\n  toMultihash(): MultihashDigest<0x0>\n\n  /**\n   * Returns a CID with the libp2p key code and the same multihash as\n   * `toMultihash()`\n   */\n  toCID(): CID<Uint8Array, 0x72, 0x0, 1>\n\n  /**\n   * Returns true if the passed argument is equivalent to this PeerId\n   */\n  equals(other?: any): boolean\n}\n\nexport interface Secp256k1PeerId {\n  readonly type: 'secp256k1'\n\n  /**\n   * This will always be defined as the public key is embedded in the multihash\n   * of this PeerId\n   */\n  readonly publicKey: Secp256k1PublicKey\n\n  /**\n   * Returns the multihash from `toMultihash()` as a base58btc encoded string\n   */\n  toString(): string\n\n  /**\n   * Returns a multihash, the digest of which is the protobuf-encoded public key\n   * encoded as an identity hash\n   */\n  toMultihash(): MultihashDigest<0x0>\n\n  /**\n   * Returns a CID with the libp2p key code and the same multihash as\n   * `toMultihash()`\n   */\n  toCID(): CID<Uint8Array, 0x72, 0x0, 1>\n\n  /**\n   * Returns true if the passed argument is equivalent to this PeerId\n   */\n  equals(other?: any): boolean\n}\n\nexport interface URLPeerId {\n  readonly type: 'url'\n\n  /**\n   * This will always be undefined as URL Peers do not have public keys\n   */\n  readonly publicKey: undefined\n\n  /**\n   * Returns CID from `toCID()` encoded as a base36 string\n   */\n  toString(): string\n\n  /**\n   * Returns a multihash, the digest of which is the URL encoded as an identity\n   * hash\n   */\n  toMultihash(): MultihashDigest<0x0>\n\n  /**\n   * Returns a CID with the Transport IPFS Gateway HTTP code and the same\n   * multihash as `toMultihash()`\n   */\n  toCID(): CID<Uint8Array, 0x0920, 0x0, 1>\n\n  /**\n   * Returns true if the passed argument is equivalent to this PeerId\n   */\n  equals(other?: any): boolean\n}\n\n/**\n * This is a union of all known PeerId types - use the `.type` field to\n * disambiguate them\n */\nexport type PeerId = RSAPeerId | Ed25519PeerId | Secp256k1PeerId | URLPeerId\n\n/**\n * All PeerId implementations must use this symbol as the name of a property\n * with a boolean `true` value\n */\nexport const peerIdSymbol = Symbol.for('@libp2p/peer-id')\n\n/**\n * Returns true if the passed argument is a PeerId implementation\n */\nexport function isPeerId (other?: any): other is PeerId {\n  return Boolean(other?.[peerIdSymbol])\n}\n", "import type { AbortOptions, ClearableSignal, ConnectionEncrypter, MultiaddrConnection, Connection, ConnectionLimits, StreamMuxerFactory, PeerId } from './index.js'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { TypedEventTarget } from 'main-event'\nimport type { ProgressOptions, ProgressEvent } from 'progress-events'\n\nexport interface ListenerEvents {\n  /**\n   * This event signals to the transport manager that the listening addresses\n   * have changed and may be emitted at any point and/or multiple times\n   */\n  listening: CustomEvent\n\n  /**\n   * Emitted if listening on an address failed\n   */\n  error: CustomEvent<Error>\n\n  /**\n   * Emitted when the listener has been shut down, has no open connections and\n   * will no longer accept new connections\n   */\n  close: CustomEvent\n}\n\nexport interface Listener extends TypedEventTarget<ListenerEvents> {\n  /**\n   * Start a listener\n   */\n  listen(multiaddr: Multiaddr): Promise<void>\n\n  /**\n   * Get listen addresses\n   */\n  getAddrs(): Multiaddr[]\n\n  /**\n   * Close listener\n   *\n   * @returns {Promise<void>}\n   */\n  close(): Promise<void>\n\n  /**\n   * Allows transports to amend announce addresses - to add certificate hashes\n   * or other metadata that cannot be known before runtime\n   */\n  updateAnnounceAddrs(addrs: Multiaddr[]): void\n}\n\nexport const transportSymbol = Symbol.for('@libp2p/transport')\n\n/**\n * A filter that acts on a list of multiaddrs\n */\nexport interface MultiaddrFilter {\n  (multiaddrs: Multiaddr[]): Multiaddr[]\n}\n\nexport interface CreateListenerOptions {\n  /**\n   * The upgrader turns a MultiaddrConnection into a Connection and notifies\n   * other libp2p components about a new incoming connection.\n   */\n  upgrader: Upgrader\n}\n\nexport interface DialTransportOptions<DialEvents extends ProgressEvent = ProgressEvent> extends Required<AbortOptions>, ProgressOptions<DialEvents> {\n  /**\n   * The upgrader turns a MultiaddrConnection into a Connection which should be\n   * returned by the transport's dial method\n   */\n  upgrader: Upgrader\n}\n\n/**\n * A libp2p transport offers dial and listen methods to establish connections.\n */\nexport interface Transport<DialEvents extends ProgressEvent = ProgressEvent> {\n  /**\n   * Used to identify the transport\n   */\n  [Symbol.toStringTag]: string\n\n  /**\n   * Used by the isTransport function\n   */\n  [transportSymbol]: true\n\n  /**\n   * Dial a given multiaddr.\n   */\n  dial(ma: Multiaddr, options: DialTransportOptions<DialEvents>): Promise<Connection>\n\n  /**\n   * Create transport listeners.\n   */\n  createListener(options: CreateListenerOptions): Listener\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only addresses that are valid for\n   * the transport to listen on\n   */\n  listenFilter: MultiaddrFilter\n\n  /**\n   * Takes a list of `Multiaddr`s and returns only addresses that are valid for\n   * the transport to dial\n   */\n  dialFilter: MultiaddrFilter\n}\n\n/**\n * Used to disambiguate transport implementations\n */\nexport function isTransport (other?: any): other is Transport {\n  return other != null && Boolean(other[transportSymbol])\n}\n\n/**\n * Enum Transport Manager Fault Tolerance values\n */\nexport enum FaultTolerance {\n  /**\n   * should be used for failing in any listen circumstance\n   */\n  FATAL_ALL = 0,\n\n  /**\n   * should be used for not failing when not listening\n   */\n  NO_FATAL\n}\n\n/**\n * Options accepted by the upgrader during connection establishment\n */\nexport interface UpgraderOptions<ConnectionUpgradeEvents extends ProgressEvent = ProgressEvent> extends ProgressOptions<ConnectionUpgradeEvents>, Required<AbortOptions> {\n  /**\n   * If true no connection protection will be performed on the connection.\n   */\n  skipProtection?: boolean\n\n  /**\n   * By default a stream muxer protocol will be negotiated via multi-stream\n   * select after an encryption protocol has been agreed on.\n   *\n   * If a transport provides it's own stream muxing facility pass a muxer\n   * factory instance here to skip muxer negotiation.\n   */\n  muxerFactory?: StreamMuxerFactory\n\n  /**\n   * If the connection is to have limits applied to it, pass them here\n   */\n  limits?: ConnectionLimits\n\n  /**\n   * Multi-stream select is a initiator/responder protocol. By default a\n   * connection returned from `upgrader.upgradeOutbound` will be the initiator\n   * and one returned from `upgrader.upgradeInbound` will be the responder.\n   *\n   * Pass a value here to override the default.\n   */\n  initiator?: boolean\n}\n\n/**\n * Options accepted by the upgrader during connection establishment\n */\nexport interface UpgraderWithoutEncryptionOptions extends UpgraderOptions {\n  /**\n   * If true the invoking transport is expected to implement it's own encryption\n   * and an encryption protocol will not attempted to be negotiated via\n   * multi-stream select\n   */\n  skipEncryption: true\n\n  /**\n   * If `skipEncryption` is true, a remote PeerId must be supplied\n   */\n  remotePeer: PeerId\n}\n\nexport type InboundConnectionUpgradeEvents =\nProgressEvent<'upgrader:encrypt-inbound-connection'> |\nProgressEvent<'upgrader:multiplex-inbound-connection'>\n\nexport type OutboundConnectionUpgradeEvents =\nProgressEvent<'upgrader:encrypt-outbound-connection'> |\nProgressEvent<'upgrader:multiplex-outbound-connection'>\n\nexport interface Upgrader {\n  /**\n   * Upgrades an outbound connection created by the `dial` method of a transport\n   */\n  upgradeOutbound(maConn: MultiaddrConnection, opts: UpgraderOptions<OutboundConnectionUpgradeEvents>): Promise<Connection>\n  upgradeOutbound(maConn: MultiaddrConnection, opts: UpgraderWithoutEncryptionOptions): Promise<Connection>\n\n  /**\n   * Upgrades an inbound connection received by a transport listener and\n   * notifies other libp2p components about the new connection\n   */\n  upgradeInbound(maConn: MultiaddrConnection, opts: UpgraderOptions<InboundConnectionUpgradeEvents>): Promise<void>\n  upgradeInbound(maConn: MultiaddrConnection, opts: UpgraderWithoutEncryptionOptions): Promise<void>\n\n  /**\n   * Used by transports that perform part of the upgrade process themselves and\n   * do some async work. This allows configuring inbound upgrade timeouts from a\n   * single location.\n   *\n   * Regular transports should just pass the signal from their shutdown\n   * controller to `upgradeInbound`.\n   */\n  createInboundAbortSignal (signal: AbortSignal): ClearableSignal\n\n  /**\n   * Returns configured stream muxers\n   */\n  getStreamMuxers (): Map<string, StreamMuxerFactory>\n\n  /**\n   * Returns configured connection encrypters\n   */\n  getConnectionEncrypters (): Map<string, ConnectionEncrypter>\n}\n", "/**\n * @packageDocumentation\n *\n * Adds types to the EventTarget class.\n *\n * Hopefully this won't be necessary\n * forever:\n *\n * - https://github.com/microsoft/TypeScript/issues/28357\n * - https://github.com/microsoft/TypeScript/issues/43477\n * - https://github.com/microsoft/TypeScript/issues/299\n * - https://www.npmjs.com/package/typed-events\n * - https://www.npmjs.com/package/typed-event-emitter\n * - https://www.npmjs.com/package/typed-event-target\n * - etc\n *\n * In addition to types, a `safeDispatchEvent` method is available which\n * prevents dispatching events that aren't in the event map, and a\n * `listenerCount` method which reports the number of listeners that are\n * currently registered for a given event.\n *\n * @example\n *\n * ```ts\n * import { TypedEventEmitter } from 'main-event'\n * import type { TypedEventTarget } from 'main-event'\n *\n * interface EventTypes {\n *   'test': CustomEvent<string>\n * }\n *\n * const target = new TypedEventEmitter<EventTypes>()\n *\n * // it's a regular EventTarget\n * console.info(target instanceof EventTarget) // true\n *\n * // register listeners normally\n * target.addEventListener('test', (evt) => {\n *   // evt is CustomEvent<string>\n * })\n *\n * // @ts-expect-error 'derp' is not in the event map\n * target.addEventListener('derp', () => {})\n *\n * // use normal dispatchEvent method\n * target.dispatchEvent(new CustomEvent('test', {\n *   detail: 'hello'\n * }))\n *\n * // use type safe dispatch method\n * target.safeDispatchEvent('test', {\n *   detail: 'world'\n * })\n *\n * // report listener count\n * console.info(target.listenerCount('test')) // 0\n *\n * // event emitters can be used purely as interfaces too\n * function acceptTarget (target: TypedEventTarget<EventTypes>) {\n *   // ...\n * }\n * ```\n */\n\nimport { setMaxListeners } from './events.js'\n\nexport interface EventCallback<EventType> { (evt: EventType): void }\nexport interface EventObject<EventType> { handleEvent: EventCallback<EventType> }\nexport type EventHandler<EventType> = EventCallback<EventType> | EventObject<EventType>\n\ninterface Listener {\n  once: boolean\n  callback: any\n}\n\n/**\n *\n */\nexport interface TypedEventTarget <EventMap extends Record<string, any>> extends EventTarget {\n  addEventListener<K extends keyof EventMap>(type: K, listener: EventHandler<EventMap[K]> | null, options?: boolean | AddEventListenerOptions): void\n\n  listenerCount (type: string): number\n\n  removeEventListener<K extends keyof EventMap>(type: K, listener?: EventHandler<EventMap[K]> | null, options?: boolean | EventListenerOptions): void\n\n  removeEventListener (type: string, listener?: EventHandler<Event>, options?: boolean | EventListenerOptions): void\n\n  safeDispatchEvent<Detail>(type: keyof EventMap, detail?: CustomEventInit<Detail>): boolean\n}\n\n/**\n * An implementation of a typed event target\n */\nexport class TypedEventEmitter<EventMap extends Record<string, any>> extends EventTarget implements TypedEventTarget<EventMap> {\n  readonly #listeners = new Map<any, Listener[]>()\n\n  constructor () {\n    super()\n\n    // silence MaxListenersExceededWarning warning on Node.js, this is a red\n    // herring almost all of the time\n    setMaxListeners(Infinity, this)\n  }\n\n  listenerCount (type: string): number {\n    const listeners = this.#listeners.get(type)\n\n    if (listeners == null) {\n      return 0\n    }\n\n    return listeners.length\n  }\n\n  addEventListener<K extends keyof EventMap>(type: K, listener: EventHandler<EventMap[K]> | null, options?: boolean | AddEventListenerOptions): void\n  addEventListener (type: string, listener: EventHandler<Event>, options?: boolean | AddEventListenerOptions): void {\n    super.addEventListener(type, listener, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      list = []\n      this.#listeners.set(type, list)\n    }\n\n    list.push({\n      callback: listener,\n      once: (options !== true && options !== false && options?.once) ?? false\n    })\n  }\n\n  removeEventListener<K extends keyof EventMap>(type: K, listener?: EventHandler<EventMap[K]> | null, options?: boolean | EventListenerOptions): void\n  removeEventListener (type: string, listener?: EventHandler<Event>, options?: boolean | EventListenerOptions): void {\n    super.removeEventListener(type.toString(), listener ?? null, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      return\n    }\n\n    list = list.filter(({ callback }) => callback !== listener)\n    this.#listeners.set(type, list)\n  }\n\n  dispatchEvent (event: Event): boolean {\n    const result = super.dispatchEvent(event)\n\n    let list = this.#listeners.get(event.type)\n\n    if (list == null) {\n      return result\n    }\n\n    list = list.filter(({ once }) => !once)\n    this.#listeners.set(event.type, list)\n\n    return result\n  }\n\n  safeDispatchEvent<Detail>(type: keyof EventMap, detail: CustomEventInit<Detail> = {}): boolean {\n    return this.dispatchEvent(new CustomEvent<Detail>(type as string, detail))\n  }\n}\n\nexport { setMaxListeners }\n", "/**\n * @packageDocumentation\n *\n * Exports a `Libp2p` type for modules to use as a type argument.\n *\n * @example\n *\n * ```typescript\n * import type { Libp2p } from '@libp2p/interface'\n *\n * function doSomethingWithLibp2p (node: Libp2p) {\n *   // ...\n * }\n * ```\n */\n\nimport type { Connection, NewStreamOptions } from './connection.js'\nimport type { ContentRouting } from './content-routing.js'\nimport type { Ed25519PublicKey, PublicKey, RSAPublicKey, Secp256k1PublicKey } from './keys.js'\nimport type { Metrics } from './metrics.js'\nimport type { Ed25519PeerId, PeerId, RSAPeerId, Secp256k1PeerId, URLPeerId } from './peer-id.js'\nimport type { PeerInfo } from './peer-info.js'\nimport type { PeerRouting } from './peer-routing.js'\nimport type { Address, Peer, PeerStore } from './peer-store.js'\nimport type { Startable } from './startable.js'\nimport type { StreamHandler, StreamHandlerOptions, StreamMiddleware } from './stream-handler.js'\nimport type { Stream } from './stream.js'\nimport type { Topology } from './topology.js'\nimport type { Listener, OutboundConnectionUpgradeEvents } from './transport.js'\nimport type { DNS } from '@multiformats/dns'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { TypedEventTarget } from 'main-event'\nimport type { ProgressOptions, ProgressEvent } from 'progress-events'\n\n/**\n * Used by the connection manager to sort addresses into order before dialling\n */\nexport interface AddressSorter {\n  (a: Address, b: Address): -1 | 0 | 1\n}\n\n/**\n * Event detail emitted when peer data changes\n */\nexport interface PeerUpdate {\n  peer: Peer\n  previous?: Peer\n}\n\n/**\n * Peer data signed by the remote Peer's public key\n */\nexport interface SignedPeerRecord {\n  addresses: Multiaddr[]\n  seq: bigint\n}\n\n/**\n * A certificate that can be used to secure connections\n */\nexport interface TLSCertificate {\n  /**\n   * The private key that corresponds to the certificate in PEM format\n   */\n  key: string\n\n  /**\n   * The certificate chain in PEM format\n   */\n  cert: string\n}\n\n/**\n * Data returned from a successful identify response\n */\nexport interface IdentifyResult {\n  /**\n   * The remote Peer's PeerId\n   */\n  peerId: PeerId\n\n  /**\n   * The unsigned addresses they are listening on. Note - any multiaddrs present\n   * in the signed peer record should be preferred to the value here.\n   */\n  listenAddrs: Multiaddr[]\n\n  /**\n   * The protocols the remote peer supports\n   */\n  protocols: string[]\n\n  /**\n   * The remote protocol version\n   */\n  protocolVersion?: string\n\n  /**\n   * The remote agent version\n   */\n  agentVersion?: string\n\n  /**\n   * The public key part of the remote PeerId - this is only useful for older\n   * RSA-based PeerIds, the more modern Ed25519 and secp256k1 types have the\n   * public key embedded in them\n   */\n  publicKey?: Uint8Array\n\n  /**\n   * If set this is the address that the remote peer saw the identify request\n   * originate from\n   */\n  observedAddr?: Multiaddr\n\n  /**\n   * If sent by the remote peer this is the deserialized signed peer record\n   */\n  signedPeerRecord?: SignedPeerRecord\n\n  /**\n   * The connection that the identify protocol ran over\n   */\n  connection: Connection\n}\n\n/**\n * Logger component for libp2p\n */\nexport interface Logger {\n  /**\n   * Log a message\n   */\n  (formatter: any, ...args: any[]): void\n\n  /**\n   * Log an error message\n   */\n  error(formatter: any, ...args: any[]): void\n\n  /**\n   * Log a trace message\n   */\n  trace(formatter: any, ...args: any[]): void\n\n  /**\n   * `true` if this logger is enabled\n   */\n  enabled: boolean\n\n  /**\n   * Create a logger scoped below this one\n   *\n   * @example\n   *\n   * ```ts\n   * import { defaultLogger } from '@libp2p/logger'\n   *\n   * const log = defaultLogger().forComponent('foo')\n   *\n   * log('hello')\n   * // foo hello\n   *\n   * const subLog = log.newScope('bar')\n   *\n   * subLog('hello')\n   * // foo:bar hello\n   * ```\n   */\n  newScope(name: string): Logger\n}\n\n/**\n * Peer logger component for libp2p. This can be used to create loggers that are\n * scoped to individual system components or services.\n *\n * To see logs, run your app with `DEBUG` set as an env var or for browsers, in\n * `localStorage`:\n *\n * ```console\n * $ DEBUG=libp2p* node index.js\n *  libp2p:my-service hello +0ms\n * ```\n */\nexport interface ComponentLogger {\n  /**\n   * Returns a logger for the specified component.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * import { ComponentLogger, Logger } from '@libp2p/interface'\n   *\n   * interface MyServiceComponents {\n   *   logger: ComponentLogger\n   * }\n   *\n   * class MyService {\n   *   private readonly log: Logger\n   *\n   *   constructor (components) {\n   *     this.log = components.logger.forComponent('libp2p:my-service')\n   *\n   *     this.log('hello')\n   *     // logs:\n   *     // libp2p:my-service hello +0ms\n   *   }\n   * }\n   * ```\n   */\n  forComponent(name: string): Logger\n}\n\nexport interface MultiaddrResolveOptions extends AbortOptions, LoggerOptions {\n  /**\n   * An optional DNS resolver\n   */\n  dns?: DNS\n}\n\n/**\n * `MultiaddrResolver`s perform resolution of multiaddr components that require\n * translation by external systems (for example DNSADDR to TXT records).\n */\nexport interface MultiaddrResolver {\n  /**\n   * Returns true if this resolver can resolve components of this multiaddr\n   */\n  canResolve (address: Multiaddr): boolean\n\n  /**\n   * Returns one or more multiaddrs with components resolved to other values\n   */\n  resolve (address: Multiaddr, options: MultiaddrResolveOptions): Promise<Multiaddr[]>\n}\n\n/**\n * Once you have a libp2p instance, you can listen to several events it emits,\n * so that you can be notified of relevant network events.\n *\n * Event names are `noun:verb` so the first part is the name of the object\n * being acted on and the second is the action.\n */\nexport interface Libp2pEvents<T extends ServiceMap = ServiceMap> {\n  /**\n   * This event is dispatched when a new network peer is discovered.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('peer:discovery', (event) => {\n   *    const peerInfo = event.detail\n   *    // ...\n   * })\n   * ```\n   */\n  'peer:discovery': CustomEvent<PeerInfo>\n\n  /**\n   * This event will be triggered any time a new peer connects.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('peer:connect', (event) => {\n   *   const peerId = event.detail\n   *   // ...\n   * })\n   * ```\n   */\n  'peer:connect': CustomEvent<PeerId>\n\n  /**\n   * This event will be triggered any time we are disconnected from another\n   * peer, regardless of the circumstances of that disconnection. If we happen\n   * to have multiple connections to a peer, this event will **only** be\n   * triggered when the last connection is closed.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('peer:disconnect', (event) => {\n   *   const peerId = event.detail\n   *   // ...\n   * })\n   * ```\n   */\n  'peer:disconnect': CustomEvent<PeerId>\n\n  /**\n   * When a peer tagged with `keep-alive` disconnects, we will make multiple\n   * attempts to reconnect to it with a backoff factor (see the connection\n   * manager settings for details). If these all fail, the `keep-alive` tag will\n   * be removed and this event will be emitted.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('peer:reconnect-failure', (event) => {\n   *   const peerId = event.detail\n   *   // ...\n   * })\n   * ```\n   */\n  'peer:reconnect-failure': CustomEvent<PeerId>\n\n  /**\n   * This event is dispatched after a remote peer has successfully responded to\n   * the identify protocol. Note that for this to be emitted, both peers must\n   * have an identify service configured.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('peer:identify', (event) => {\n   *   const identifyResult = event.detail\n   *   // ...\n   * })\n   * ```\n   */\n  'peer:identify': CustomEvent<IdentifyResult>\n\n  /**\n   * This event is dispatched when the peer store data for a peer has been\n   * updated - e.g. their multiaddrs, protocols etc have changed.\n   *\n   * If they were previously known to this node, the old peer data will be\n   * set in the `previous` field.\n   *\n   * This may be in response to the identify protocol running, a manual\n   * update or some other event.\n   */\n  'peer:update': CustomEvent<PeerUpdate>\n\n  /**\n   * This event is dispatched when the current node's peer record changes -\n   * for example a transport started listening on a new address or a new\n   * protocol handler was registered.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('self:peer:update', (event) => {\n   *   const { peer } = event.detail\n   *   // ...\n   * })\n   * ```\n   */\n  'self:peer:update': CustomEvent<PeerUpdate>\n\n  /**\n   * This event is dispatched when a transport begins listening on a new address\n   */\n  'transport:listening': CustomEvent<Listener>\n\n  /**\n   * This event is dispatched when a transport stops listening on an address\n   */\n  'transport:close': CustomEvent<Listener>\n\n  /**\n   * This event is dispatched when the connection manager has more than the\n   * configured allowable max connections and has closed some connections to\n   * bring the node back under the limit.\n   */\n  'connection:prune': CustomEvent<Connection[]>\n\n  /**\n   * This event notifies listeners when new incoming or outgoing connections\n   * are opened.\n   */\n  'connection:open': CustomEvent<Connection>\n\n  /**\n   * This event notifies listeners when incoming or outgoing connections are\n   * closed.\n   */\n  'connection:close': CustomEvent<Connection>\n\n  /**\n   * This event notifies listeners that a TLS certificate is available for use\n   */\n  'certificate:provision': CustomEvent<TLSCertificate>\n\n  /**\n   * This event notifies listeners that a new TLS certificate is available for\n   * use. Any previous certificate may no longer be valid.\n   */\n  'certificate:renew': CustomEvent<TLSCertificate>\n\n  /**\n   * This event notifies listeners that the node has started\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('start', (event) => {\n   *   console.info(libp2p.isStarted()) // true\n   * })\n   * ```\n   */\n  start: CustomEvent<Libp2p<T>>\n\n  /**\n   * This event notifies listeners that the node has stopped\n   *\n   * ```TypeScript\n   * libp2p.addEventListener('stop', (event) => {\n   *   console.info(libp2p.isStarted()) // false\n   * })\n   * ```\n   */\n  stop: CustomEvent<Libp2p<T>>\n}\n\n/**\n * A map of user defined services available on the libp2p node via the\n * `services` key\n *\n * @example\n *\n * ```TypeScript\n * const node = await createLibp2p({\n *   // ...other options\n *   services: {\n *     myService: myService({\n *       // ...service options\n *     })\n *   }\n * })\n *\n * // invoke methods on the service\n * node.services.myService.anOperation()\n * ```\n */\nexport type ServiceMap = Record<string, unknown>\n\nexport type PendingDialStatus = 'queued' | 'active' | 'error' | 'success'\n\n/**\n * An item in the dial queue\n */\nexport interface PendingDial {\n  /**\n   * A unique identifier for this dial\n   */\n  id: string\n\n  /**\n   * The current status of the dial\n   */\n  status: PendingDialStatus\n\n  /**\n   * If known, this is the peer id that libp2p expects to be dialling\n   */\n  peerId?: PeerId\n\n  /**\n   * The list of multiaddrs that will be dialled. The returned connection will\n   * use the first address that succeeds, all other dials part of this pending\n   * dial will be cancelled.\n   */\n  multiaddrs: Multiaddr[]\n}\n\nexport type Libp2pStatus = 'starting' | 'started' | 'stopping' | 'stopped'\n\nexport interface IsDialableOptions extends AbortOptions {\n  /**\n   * If the dial attempt would open a protocol, and the multiaddr being dialed\n   * is a circuit relay address, passing true here would cause the test to fail\n   * because that protocol would not be allowed to run over a data/time limited\n   * connection.\n   */\n  runOnLimitedConnection?: boolean\n}\n\nexport type TransportManagerDialProgressEvents =\n  ProgressEvent<'transport-manager:selected-transport', string>\n\nexport type OpenConnectionProgressEvents =\n  TransportManagerDialProgressEvents |\n  ProgressEvent<'dial-queue:already-connected'> |\n  ProgressEvent<'dial-queue:already-in-dial-queue'> |\n  ProgressEvent<'dial-queue:add-to-dial-queue'> |\n  ProgressEvent<'dial-queue:start-dial'> |\n  ProgressEvent<'dial-queue:calculated-addresses', Address[]> |\n  OutboundConnectionUpgradeEvents\n\nexport interface DialOptions extends AbortOptions, ProgressOptions {\n  /**\n   * If true, open a new connection to the remote even if one already exists\n   */\n  force?: boolean\n}\n\nexport interface DialProtocolOptions extends NewStreamOptions {\n\n}\n\n/**\n * Libp2p nodes implement this interface.\n */\nexport interface Libp2p<T extends ServiceMap = ServiceMap> extends Startable, TypedEventTarget<Libp2pEvents<T>> {\n  /**\n   * The PeerId is a unique identifier for a node on the network.\n   *\n   * It is the hash of an RSA public key or, for Ed25519 or secp256k1 keys,\n   * the key itself.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * console.info(libp2p.peerId)\n   * // PeerId(12D3Foo...)\n   * ````\n   */\n  peerId: PeerId\n\n  /**\n   * The peer store holds information we know about other peers on the network.\n   * - multiaddrs, supported protocols, etc.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const peer = await libp2p.peerStore.get(peerId)\n   * console.info(peer)\n   * // { id: PeerId(12D3Foo...), addresses: [] ... }\n   * ```\n   */\n  peerStore: PeerStore\n\n  /**\n   * The peer routing subsystem allows the user to find peers on the network\n   * or to find peers close to binary keys.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const peerInfo = await libp2p.peerRouting.findPeer(peerId)\n   * console.info(peerInfo)\n   * // { id: PeerId(12D3Foo...), multiaddrs: [] ... }\n   * ```\n   *\n   * @example\n   *\n   * ```TypeScript\n   * for await (const peerInfo of libp2p.peerRouting.getClosestPeers(key)) {\n   *   console.info(peerInfo)\n   *   // { id: PeerId(12D3Foo...), multiaddrs: [] ... }\n   * }\n   * ```\n   */\n  peerRouting: PeerRouting\n\n  /**\n   * The content routing subsystem allows the user to find providers for content,\n   * let the network know they are providers for content, and get/put values to\n   * the DHT.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * for await (const peerInfo of libp2p.contentRouting.findProviders(cid)) {\n   *   console.info(peerInfo)\n   *   // { id: PeerId(12D3Foo...), multiaddrs: [] ... }\n   * }\n   * ```\n   */\n  contentRouting: ContentRouting\n\n  /**\n   * The metrics subsystem allows recording values to assess the health/performance\n   * of the running node.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const metric = libp2p.metrics.registerMetric({\n   *   'my-metric'\n   * })\n   *\n   * // later\n   * metric.update(5)\n   * ```\n   */\n  metrics?: Metrics\n\n  /**\n   * The logger used by this libp2p node\n   */\n  logger: ComponentLogger\n\n  /**\n   * The current status of the libp2p node\n   */\n  status: Libp2pStatus\n\n  /**\n   * Get a deduplicated list of peer advertising multiaddrs by concatenating\n   * the listen addresses used by transports with any configured\n   * announce addresses as well as observed addresses reported by peers.\n   *\n   * If Announce addrs are specified, configured listen addresses will be\n   * ignored though observed addresses will still be included.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const listenMa = libp2p.getMultiaddrs()\n   * // [ <Multiaddr 047f00000106f9ba - /ip4/127.0.0.1/tcp/63930> ]\n   * ```\n   */\n  getMultiaddrs(): Multiaddr[]\n\n  /**\n   * Returns a list of supported protocols\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const protocols = libp2p.getProtocols()\n   * // [ '/ipfs/ping/1.0.0', '/ipfs/id/1.0.0' ]\n   * ```\n   */\n  getProtocols(): string[]\n\n  /**\n   * Return a list of all connections this node has open, optionally filtering\n   * by a PeerId\n   *\n   * @example\n   *\n   * ```TypeScript\n   * for (const connection of libp2p.getConnections()) {\n   *   console.log(peerId, connection.remoteAddr.toString())\n   *   // Logs the PeerId string and the observed remote multiaddr of each Connection\n   * }\n   * ```\n   */\n  getConnections(peerId?: PeerId): Connection[]\n\n  /**\n   * Return the list of dials currently in progress or queued to start\n   *\n   * @example\n   *\n   * ```TypeScript\n   * for (const pendingDial of libp2p.getDialQueue()) {\n   *   console.log(pendingDial)\n   * }\n   * ```\n   */\n  getDialQueue(): PendingDial[]\n\n  /**\n   * Return a list of all peers we currently have a connection open to\n   */\n  getPeers(): PeerId[]\n\n  /**\n   * Dials to the provided peer. If successful, the known metadata of the\n   * peer will be added to the nodes `peerStore`.\n   *\n   * If a PeerId is passed as the first argument, the peer will need to have known multiaddrs for it in the PeerStore.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const conn = await libp2p.dial(remotePeerId)\n   *\n   * // create a new stream within the connection\n   * const stream = await conn.newStream(['/echo/1.1.0', '/echo/1.0.0'])\n   *\n   * // protocol negotiated: 'echo/1.0.0' means that the other party only supports the older version\n   *\n   * // ...\n   * await conn.close()\n   * ```\n   */\n  dial(peer: PeerId | Multiaddr | Multiaddr[], options?: DialOptions): Promise<Connection>\n\n  /**\n   * Dials to the provided peer and tries to handshake with the given protocols in order.\n   * If successful, the known metadata of the peer will be added to the nodes `peerStore`,\n   * and the `MuxedStream` will be returned together with the successful negotiated protocol.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * import { pipe } from 'it-pipe'\n   *\n   * const { stream, protocol } = await libp2p.dialProtocol(remotePeerId, protocols)\n   *\n   * // Use this new stream like any other duplex stream\n   * pipe([1, 2, 3], stream, consume)\n   * ```\n   */\n  dialProtocol(peer: PeerId | Multiaddr | Multiaddr[], protocols: string | string[], options?: DialProtocolOptions): Promise<Stream>\n\n  /**\n   * Attempts to gracefully close an open connection to the given peer. If the\n   * connection is not closed in the grace period, it will be forcefully closed.\n   *\n   * An AbortSignal can optionally be passed to control when the connection is\n   * forcefully closed.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * await libp2p.hangUp(remotePeerId)\n   * ```\n   */\n  hangUp(peer: PeerId | Multiaddr, options?: AbortOptions): Promise<void>\n\n  /**\n   * Sets up [multistream-select routing](https://github.com/multiformats/multistream-select) of protocols to their application handlers. Whenever a stream is opened on one of the provided protocols, the handler will be called. `handle` must be called in order to register a handler and support for a given protocol. This also informs other peers of the protocols you support.\n   *\n   * `libp2p.handle(protocols, handler, options)`\n   *\n   * In the event of a new handler for the same protocol being added and error\n   * will be thrown. Pass `force: true` to override this.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const handler = ({ connection, stream, protocol }) => {\n   *   // use stream or connection according to the needs\n   * }\n   *\n   * libp2p.handle('/echo/1.0.0', handler, {\n   *   maxInboundStreams: 5,\n   *   maxOutboundStreams: 5\n   * })\n   * ```\n   */\n  handle(protocol: string | string[], handler: StreamHandler, options?: StreamHandlerOptions): Promise<void>\n\n  /**\n   * Removes the handler for each protocol. The protocol\n   * will no longer be supported on streams.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.unhandle(['/echo/1.0.0'])\n   * ```\n   */\n  unhandle(protocols: string[] | string, options?: AbortOptions): Promise<void>\n\n  /**\n   * Register a topology to be informed when peers are encountered that\n   * support the specified protocol\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const id = await libp2p.register('/echo/1.0.0', {\n   *   onConnect: (peer, connection) => {\n   *     // handle connect\n   *   },\n   *   onDisconnect: (peer, connection) => {\n   *     // handle disconnect\n   *   }\n   * })\n   * ```\n   */\n  register(protocol: string, topology: Topology, options?: AbortOptions): Promise<string>\n\n  /**\n   * Unregister topology to no longer be informed when peers connect or\n   * disconnect.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * const id = await libp2p.register(...)\n   *\n   * libp2p.unregister(id)\n   * ```\n   */\n  unregister(id: string): void\n\n  /**\n   * Registers one or more middleware implementations that will be invoked for\n   * incoming and outgoing protocol streams that match the passed protocol.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.use('/my/protocol/1.0.0', (stream, connection, next) => {\n   *   // do something with stream and/or connection\n   *   next(stream, connection)\n   * })\n   * ```\n   */\n  use (protocol: string, middleware: StreamMiddleware | StreamMiddleware[]): void\n\n  /**\n   * Deregisters all middleware for the passed protocol.\n   *\n   * @example\n   *\n   * ```TypeScript\n   * libp2p.unuse('/my/protocol/1.0.0')\n   * // any previously registered middleware will no longer be invoked\n   * ```\n   */\n  unuse (protocol: string): void\n\n  /**\n   * Returns the public key for the passed PeerId. If the PeerId is of the 'RSA'\n   * type this may mean searching the routing if the peer's key is not present\n   * in the peer store.\n   */\n  getPublicKey(peer: Ed25519PeerId, options?: AbortOptions): Promise<Ed25519PublicKey>\n  getPublicKey(peer: Secp256k1PeerId, options?: AbortOptions): Promise<Secp256k1PublicKey>\n  getPublicKey(peer: RSAPeerId, options?: AbortOptions): Promise<RSAPublicKey>\n  getPublicKey(peer: URLPeerId, options?: AbortOptions): Promise<never>\n  getPublicKey(peer: PeerId, options?: AbortOptions): Promise<PublicKey>\n\n  /**\n   * Given the current node configuration, returns a promise of `true` or\n   * `false` if the node would attempt to dial the passed multiaddr.\n   *\n   * This means a relevant transport is configured, and the connection gater\n   * would not block the dial attempt.\n   *\n   * This may involve resolving DNS addresses so you should pass an AbortSignal.\n   */\n  isDialable(multiaddr: Multiaddr | Multiaddr[], options?: IsDialableOptions): Promise<boolean>\n\n  /**\n   * A set of user defined services\n   */\n  services: T\n}\n\n/**\n * Metadata about the current node\n */\nexport interface NodeInfo {\n  /**\n   * The implementation name\n   */\n  name: string\n\n  /**\n   * The implementation version\n   */\n  version: string\n\n  /**\n   * A string that contains information about the implementation and runtime\n   */\n  userAgent: string\n}\n\n/**\n * An object that contains an AbortSignal as\n * the optional `signal` property.\n *\n * @example\n *\n * ```TypeScript\n * const controller = new AbortController()\n *\n * aLongRunningOperation({\n *   signal: controller.signal\n * })\n *\n * // later\n *\n * controller.abort()\n */\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\n/**\n * An object that contains a Logger as the `log` property.\n */\nexport interface LoggerOptions {\n  log: Logger\n}\n\n/**\n * An object that includes a trace object that is passed onwards.\n *\n * This is used by metrics method tracing to link function calls together.\n */\nexport interface TraceOptions {\n  trace?: any\n}\n\n/**\n * A signal that needs to be cleared when no longer in use\n */\nexport interface ClearableSignal extends AbortSignal {\n  clear(): void\n}\n\n/**\n * When a routing operation involves reading values, these options allow\n * controlling where the values are read from. By default libp2p will check\n * local caches but may not use the network if a valid local value is found,\n * these options allow tuning that behavior.\n */\nexport interface RoutingOptions extends AbortOptions, ProgressOptions, TraceOptions {\n  /**\n   * Pass `false` to not use the network\n   *\n   * @default true\n   */\n  useNetwork?: boolean\n\n  /**\n   * Pass `false` to not use cached values\n   *\n   * @default true\n   */\n  useCache?: boolean\n}\n\n/**\n * This symbol is used by libp2p services to define the capabilities they can\n * provide to other libp2p services.\n *\n * The service should define a property with this symbol as the key and the\n * value should be a string array of provided capabilities.\n */\nexport const serviceCapabilities = Symbol.for('@libp2p/service-capabilities')\n\n/**\n * This symbol is used by libp2p services to define the capabilities they\n * require from other libp2p services.\n *\n * The service should define a property with this symbol as the key and the\n * value should be a string array of required capabilities.\n */\nexport const serviceDependencies = Symbol.for('@libp2p/service-dependencies')\n\nexport * from './connection.js'\nexport * from './connection-encrypter.js'\nexport * from './connection-gater.js'\nexport * from './connection-protector.js'\nexport * from './content-routing.js'\nexport * from './errors.js'\nexport * from './events.js'\nexport * from './keys.js'\nexport * from './message-stream.js'\nexport * from './metrics.js'\nexport * from './multiaddr-connection.js'\nexport * from './peer-discovery.js'\nexport * from './peer-id.js'\nexport * from './peer-info.js'\nexport * from './peer-routing.js'\nexport * from './peer-store.js'\nexport * from './record.js'\nexport * from './startable.js'\nexport * from './stream-handler.js'\nexport * from './stream-muxer.js'\nexport * from './stream.js'\nexport * from './topology.js'\nexport * from './transport.js'\n\nexport * from 'main-event'\n", "import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n", "export const empty = new Uint8Array(0)\n\nexport function toHex (d: Uint8Array): string {\n  return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n}\n\nexport function fromHex (hex: string): Uint8Array {\n  const hexes = hex.match(/../g)\n  return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\nexport function equals (aa: Uint8Array, bb: Uint8Array): boolean {\n  if (aa === bb) { return true }\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function coerce (o: ArrayBufferView | ArrayBuffer | Uint8Array): Uint8Array {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') { return o }\n  if (o instanceof ArrayBuffer) { return new Uint8Array(o) }\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\nexport function isBinary (o: unknown): o is ArrayBuffer | ArrayBufferView {\n  return o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n}\n\nexport function fromString (str: string): Uint8Array {\n  return new TextEncoder().encode(str)\n}\n\nexport function toString (b: Uint8Array): string {\n  return new TextDecoder().decode(b)\n}\n", "/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  /**\n   * @param {any[] | Iterable<number>} source\n   */\n  function encode (source) {\n    // @ts-ignore\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  /**\n   * @param {string | string[]} source\n   */\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  /**\n   * @param {string | string[]} string\n   */\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n", "import { coerce } from '../bytes.js'\nimport basex from '../vendor/base-x.js'\nimport type { BaseCodec, BaseDecoder, BaseEncoder, CombobaseDecoder, Multibase, MultibaseCodec, MultibaseDecoder, MultibaseEncoder, UnibaseDecoder } from './interface.js'\n\ninterface EncodeFn { (bytes: Uint8Array): string }\ninterface DecodeFn { (text: string): Uint8Array }\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder<Base extends string, Prefix extends string> implements MultibaseEncoder<Prefix>, BaseEncoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  encode (bytes: Uint8Array): Multibase<Prefix> {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder<Base extends string, Prefix extends string> implements MultibaseDecoder<Prefix>, UnibaseDecoder<Prefix>, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseDecode: DecodeFn\n  private readonly prefixCodePoint: number\n\n  constructor (name: Base, prefix: Prefix, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    const prefixCodePoint = prefix.codePointAt(0)\n    /* c8 ignore next 3 */\n    if (prefixCodePoint === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    this.prefixCodePoint = prefixCodePoint\n    this.baseDecode = baseDecode\n  }\n\n  decode (text: string): Uint8Array {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  or<OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n}\n\ntype Decoders<Prefix extends string> = Record<Prefix, UnibaseDecoder<Prefix>>\n\nclass ComposedDecoder<Prefix extends string> implements MultibaseDecoder<Prefix>, CombobaseDecoder<Prefix> {\n  readonly decoders: Decoders<Prefix>\n\n  constructor (decoders: Decoders<Prefix>) {\n    this.decoders = decoders\n  }\n\n  or <OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n\n  decode (input: string): Uint8Array {\n    const prefix = input[0] as Prefix\n    const decoder = this.decoders[prefix]\n    if (decoder != null) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\nexport function or <L extends string, R extends string> (left: UnibaseDecoder<L> | CombobaseDecoder<L>, right: UnibaseDecoder<R> | CombobaseDecoder<R>): ComposedDecoder<L | R> {\n  return new ComposedDecoder({\n    ...(left.decoders ?? { [(left as UnibaseDecoder<L>).prefix]: left }),\n    ...(right.decoders ?? { [(right as UnibaseDecoder<R>).prefix]: right })\n  } as Decoders<L | R>)\n}\n\nexport class Codec<Base extends string, Prefix extends string> implements MultibaseCodec<Prefix>, MultibaseEncoder<Prefix>, MultibaseDecoder<Prefix>, BaseCodec, BaseEncoder, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n  readonly baseDecode: DecodeFn\n  readonly encoder: Encoder<Base, Prefix>\n  readonly decoder: Decoder<Base, Prefix>\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  encode (input: Uint8Array): string {\n    return this.encoder.encode(input)\n  }\n\n  decode (input: string): Uint8Array {\n    return this.decoder.decode(input)\n  }\n}\n\nexport function from <Base extends string, Prefix extends string> ({ name, prefix, encode, decode }: { name: Base, prefix: Prefix, encode: EncodeFn, decode: DecodeFn }): Codec<Base, Prefix> {\n  return new Codec(name, prefix, encode, decode)\n}\n\nexport function baseX <Base extends string, Prefix extends string> ({ name, prefix, alphabet }: { name: Base, prefix: Prefix, alphabet: string }): Codec<Base, Prefix> {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: (text: string): Uint8Array => coerce(decode(text))\n  })\n}\n\nfunction decode (string: string, alphabetIdx: Record<string, number>, bitsPerChar: number, name: string): Uint8Array {\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = alphabetIdx[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\nfunction encode (data: Uint8Array, alphabet: string, bitsPerChar: number): string {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits !== 0) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while (((out.length * bitsPerChar) & 7) !== 0) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\nfunction createAlphabetIdx (alphabet: string): Record<string, number> {\n  // Build the character lookup table:\n  const alphabetIdx: Record<string, number> = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    alphabetIdx[alphabet[i]] = i\n  }\n  return alphabetIdx\n}\n\n/**\n * RFC4648 Factory\n */\nexport function rfc4648 <Base extends string, Prefix extends string> ({ name, prefix, bitsPerChar, alphabet }: { name: Base, prefix: Prefix, bitsPerChar: number, alphabet: string }): Codec<Base, Prefix> {\n  const alphabetIdx = createAlphabetIdx(alphabet)\n  return from({\n    prefix,\n    name,\n    encode (input: Uint8Array): string {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input: string): Uint8Array {\n      return decode(input, alphabetIdx, bitsPerChar, name)\n    }\n  })\n}\n", "import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n", "import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n", "import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\nimport type { MultihashDigest } from './interface.js'\n\n/**\n * Creates a multihash digest.\n */\nexport function create <Code extends number> (code: Code, digest: Uint8Array): Digest<Code, number> {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode (multihash: Uint8Array): MultihashDigest {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\nexport function equals (a: MultihashDigest, b: unknown): b is MultihashDigest {\n  if (a === b) {\n    return true\n  } else {\n    const data = b as { code?: unknown, size?: unknown, bytes?: unknown }\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest<Code extends number, Size extends number> implements MultihashDigest {\n  readonly code: Code\n  readonly size: Size\n  readonly digest: Uint8Array\n  readonly bytes: Uint8Array\n\n  /**\n   * Creates a multihash digest.\n   */\n  constructor (code: Code, size: Size, digest: Uint8Array, bytes: Uint8Array) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n\n/**\n * Used to check that the passed multihash has the passed code\n */\nexport function hasCode <T extends number> (digest: MultihashDigest, code: T): digest is MultihashDigest<T> {\n  return digest.code === code\n}\n", "/* eslint-disable */\nvar encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  // @ts-ignore\n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      // @ts-ignore\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  // @ts-ignore\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (/** @type {number} */ value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n", "import varint from './vendor/varint.js'\n\nexport function decode (data: Uint8Array, offset = 0): [number, number] {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\nexport function encodeTo (int: number, target: Uint8Array, offset = 0): Uint8Array {\n  varint.encode(int, target, offset)\n  return target\n}\n\nexport function encodingLength (int: number): number {\n  return varint.encodingLength(int)\n}\n", "import { base32 } from './bases/base32.js'\nimport { base36 } from './bases/base36.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\nimport * as varint from './varint.js'\nimport type * as API from './link/interface.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\nexport function format <T extends API.Link<unknown, number, number, API.Version>, Prefix extends string> (link: T, base?: API.MultibaseEncoder<Prefix>): API.ToString<T, Prefix> {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        base as API.MultibaseEncoder<'z'> ?? base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        (base ?? base32.encoder) as API.MultibaseEncoder<Prefix>\n      )\n  }\n}\n\nexport function toJSON <Link extends API.UnknownLink> (link: Link): API.LinkJSON<Link> {\n  return {\n    '/': format(link)\n  }\n}\n\nexport function fromJSON <Link extends API.UnknownLink> (json: API.LinkJSON<Link>): CID<unknown, number, number, API.Version> {\n  return CID.parse(json['/'])\n}\n\nconst cache = new WeakMap<API.UnknownLink, Map<string, string>>()\n\nfunction baseCache (cid: API.UnknownLink): Map<string, string> {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\nexport class CID<Data = unknown, Format extends number = number, Alg extends number = number, Version extends API.Version = API.Version> implements API.Link<Data, Format, Alg, Version> {\n  readonly code: Format\n  readonly version: Version\n  readonly multihash: API.MultihashDigest<Alg>\n  readonly bytes: Uint8Array\n  readonly '/': Uint8Array\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param multihash - (Multi)hash of the of the content.\n   */\n  constructor (version: Version, code: Format, multihash: API.MultihashDigest<Alg>, bytes: Uint8Array) {\n    this.code = code\n    this.version = version\n    this.multihash = multihash\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID (): this {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset (): number {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength (): number {\n    return this.bytes.byteLength\n  }\n\n  toV0 (): CID<Data, API.DAG_PB, API.SHA_256, 0> {\n    switch (this.version) {\n      case 0: {\n        return this as CID<Data, API.DAG_PB, API.SHA_256, 0>\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return (\n          CID.createV0(\n            multihash as API.MultihashDigest<API.SHA_256>\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  toV1 (): CID<Data, Format, Alg, 1> {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return this as CID<Data, Format, Alg, 1>\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  equals (other: unknown): other is CID<Data, Format, Alg, Version> {\n    return CID.equals(this, other)\n  }\n\n  static equals <Data, Format extends number, Alg extends number, Version extends API.Version>(self: API.Link<Data, Format, Alg, Version>, other: unknown): other is CID {\n    const unknown = other as { code?: unknown, version?: unknown, multihash?: unknown }\n    return (\n      unknown != null &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  toString (base?: API.MultibaseEncoder<string>): string {\n    return format(this, base)\n  }\n\n  toJSON (): API.LinkJSON<this> {\n    return { '/': format(this) }\n  }\n\n  link (): this {\n    return this\n  }\n\n  readonly [Symbol.toStringTag] = 'CID';\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] (): string {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   */\n  static asCID <Data, Format extends number, Alg extends number, Version extends API.Version, U>(input: API.Link<Data, Format, Alg, Version> | U): CID<Data, Format, Alg, Version> | null {\n    if (input == null) {\n      return null\n    }\n\n    const value = input as any\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        multihash as API.MultihashDigest<Alg>,\n        bytes ?? encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest = Digest.decode(multihash) as API.MultihashDigest<Alg>\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param digest - (Multi)hash of the of the content.\n   */\n  static create <Data, Format extends number, Alg extends number, Version extends API.Version>(version: Version, code: Format, digest: API.MultihashDigest<Alg>): CID<Data, Format, Alg, Version> {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   */\n  static createV0 <T = unknown>(digest: API.MultihashDigest<typeof SHA_256_CODE>): CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0> {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @param code - Content encoding format code.\n   * @param digest - Multihash of the content.\n   */\n  static createV1 <Data, Code extends number, Alg extends number>(code: Code, digest: API.MultihashDigest<Alg>): CID<Data, Code, Alg, 1> {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   */\n  static decode <Data, Code extends number, Alg extends number, Version extends API.Version>(bytes: API.ByteView<API.Link<Data, Code, Alg, Version>>): CID<Data, Code, Alg, Version> {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length !== 0) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   */\n  static decodeFirst <T, C extends number, A extends number, V extends API.Version>(bytes: API.ByteView<API.Link<T, C, A, V>>): [CID<T, C, A, V>, Uint8Array] {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(digest as API.MultihashDigest<API.SHA_256>)\n        : CID.createV1(specs.codec, digest)\n    return [cid as CID<T, C, A, V>, bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   */\n  static inspectBytes <T, C extends number, A extends number, V extends API.Version>(initialBytes: API.ByteView<API.Link<T, C, A, V>>): { version: V, codec: C, multihashCode: A, digestSize: number, multihashSize: number, size: number } {\n    let offset = 0\n    const next = (): number => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = next() as V\n    let codec = DAG_PB_CODE as C\n    if (version as number === 18) {\n      // CIDv0\n      version = 0 as V\n      offset = 0\n    } else {\n      codec = next() as C\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = next() as A // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   */\n  static parse <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version>(source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): CID<Data, Code, Alg, Version> {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\nfunction parseCIDtoBytes <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version> (source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): [Prefix, API.ByteView<API.Link<Data, Code, Alg, Version>>] {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base ?? base58btc\n      return [\n        base58btc.prefix as Prefix,\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base ?? base58btc\n      return [base58btc.prefix as Prefix, decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base ?? base32\n      return [base32.prefix as Prefix, decoder.decode(source)]\n    }\n    case base36.prefix: {\n      const decoder = base ?? base36\n      return [base36.prefix as Prefix, decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [source[0] as Prefix, base.decode(source)]\n    }\n  }\n}\n\nfunction toStringV0 (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<'z'>): string {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nfunction toStringV1 <Prefix extends string> (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<Prefix>): string {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\nfunction encodeCID (version: API.Version, code: number, multihash: Uint8Array): Uint8Array {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n", "import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\nimport type { DigestOptions } from './hasher.js'\n\nconst code: 0x0 = 0x0\nconst name = 'identity'\n\nconst encode: (input: Uint8Array) => Uint8Array = coerce\n\nfunction digest (input: Uint8Array, options?: DigestOptions): Digest.Digest<typeof code, number> {\n  if (options?.truncate != null && options.truncate !== input.byteLength) {\n    if (options.truncate < 0 || options.truncate > input.byteLength) {\n      throw new Error(`Invalid truncate option, must be less than or equal to ${input.byteLength}`)\n    }\n\n    input = input.subarray(0, options.truncate)\n  }\n\n  return Digest.create(code, encode(input))\n}\n\nexport const identity = { code, name, encode, digest }\n", "/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals (a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n", "/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc (size: number = 0): Uint8Array {\n  return new Uint8Array(size)\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe (size: number = 0): Uint8Array {\n  return new Uint8Array(size)\n}\n", "import { allocUnsafe } from '#alloc'\nimport { asUint8Array } from '#util/as-uint8array'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nexport function concat (arrays: Uint8Array[], length?: number): Uint8Array {\n  if (length == null) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = allocUnsafe(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return asUint8Array(output)\n}\n", "/**\n * @packageDocumentation\n *\n * A class that lets you do operations over a list of Uint8Arrays without\n * copying them.\n *\n * ```js\n * import { Uint8ArrayList } from 'uint8arraylist'\n *\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray()\n * // -> Uint8Array([0, 1, 2, 3, 4, 5])\n *\n * list.consume(3)\n * list.subarray()\n * // -> Uint8Array([3, 4, 5])\n *\n * // you can also iterate over the list\n * for (const buf of list) {\n *   // ..do something with `buf`\n * }\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ## Converting Uint8ArrayLists to Uint8Arrays\n *\n * There are two ways to turn a `Uint8ArrayList` into a `Uint8Array` - `.slice` and `.subarray` and one way to turn a `Uint8ArrayList` into a `Uint8ArrayList` with different contents - `.sublist`.\n *\n * ### slice\n *\n * Slice follows the same semantics as [Uint8Array.slice](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice) in that it creates a new `Uint8Array` and copies bytes into it using an optional offset & length.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.slice(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ### subarray\n *\n * Subarray attempts to follow the same semantics as [Uint8Array.subarray](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray) with one important different - this is a no-copy operation, unless the requested bytes span two internal buffers in which case it is a copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0]) - no-copy\n *\n * list.subarray(2, 5)\n * // -> Uint8Array([2, 3, 4]) - copy\n * ```\n *\n * ### sublist\n *\n * Sublist creates and returns a new `Uint8ArrayList` that shares the underlying buffers with the original so is always a no-copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.sublist(0, 1)\n * // -> Uint8ArrayList([0]) - no-copy\n *\n * list.sublist(2, 5)\n * // -> Uint8ArrayList([2], [3, 4]) - no-copy\n * ```\n *\n * ## Inspiration\n *\n * Borrows liberally from [bl](https://www.npmjs.com/package/bl) but only uses native JS types.\n */\nimport { allocUnsafe, alloc } from 'uint8arrays/alloc'\nimport { concat } from 'uint8arrays/concat'\nimport { equals } from 'uint8arrays/equals'\n\nconst symbol = Symbol.for('@achingbrain/uint8arraylist')\n\nexport type Appendable = Uint8ArrayList | Uint8Array\n\nfunction findBufAndOffset (bufs: Uint8Array[], index: number): { buf: Uint8Array, index: number } {\n  if (index == null || index < 0) {\n    throw new RangeError('index is out of bounds')\n  }\n\n  let offset = 0\n\n  for (const buf of bufs) {\n    const bufEnd = offset + buf.byteLength\n\n    if (index < bufEnd) {\n      return {\n        buf,\n        index: index - offset\n      }\n    }\n\n    offset = bufEnd\n  }\n\n  throw new RangeError('index is out of bounds')\n}\n\n/**\n * Check if object is a CID instance\n *\n * @example\n *\n * ```js\n * import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\n *\n * isUint8ArrayList(true) // false\n * isUint8ArrayList([]) // false\n * isUint8ArrayList(new Uint8ArrayList()) // true\n * ```\n */\nexport function isUint8ArrayList (value: any): value is Uint8ArrayList {\n  return Boolean(value?.[symbol])\n}\n\nexport class Uint8ArrayList implements Iterable<Uint8Array> {\n  private bufs: Uint8Array[]\n  public length: number\n  public readonly [symbol] = true\n\n  constructor (...data: Appendable[]) {\n    this.bufs = []\n    this.length = 0\n\n    if (data.length > 0) {\n      this.appendAll(data)\n    }\n  }\n\n  * [Symbol.iterator] (): Iterator<Uint8Array> {\n    yield * this.bufs\n  }\n\n  get byteLength (): number {\n    return this.length\n  }\n\n  /**\n   * Add one or more `bufs` to the end of this Uint8ArrayList\n   */\n  append (...bufs: Appendable[]): void {\n    this.appendAll(bufs)\n  }\n\n  /**\n   * Add all `bufs` to the end of this Uint8ArrayList\n   */\n  appendAll (bufs: Appendable[]): void {\n    let length = 0\n\n    for (const buf of bufs) {\n      if (buf instanceof Uint8Array) {\n        length += buf.byteLength\n        this.bufs.push(buf)\n      } else if (isUint8ArrayList(buf)) {\n        length += buf.byteLength\n        this.bufs.push(...buf.bufs)\n      } else {\n        throw new Error('Could not append value, must be an Uint8Array or a Uint8ArrayList')\n      }\n    }\n\n    this.length += length\n  }\n\n  /**\n   * Add one or more `bufs` to the start of this Uint8ArrayList\n   */\n  prepend (...bufs: Appendable[]): void {\n    this.prependAll(bufs)\n  }\n\n  /**\n   * Add all `bufs` to the start of this Uint8ArrayList\n   */\n  prependAll (bufs: Appendable[]): void {\n    let length = 0\n\n    for (const buf of bufs.reverse()) {\n      if (buf instanceof Uint8Array) {\n        length += buf.byteLength\n        this.bufs.unshift(buf)\n      } else if (isUint8ArrayList(buf)) {\n        length += buf.byteLength\n        this.bufs.unshift(...buf.bufs)\n      } else {\n        throw new Error('Could not prepend value, must be an Uint8Array or a Uint8ArrayList')\n      }\n    }\n\n    this.length += length\n  }\n\n  /**\n   * Read the value at `index`\n   */\n  get (index: number): number {\n    const res = findBufAndOffset(this.bufs, index)\n\n    return res.buf[res.index]\n  }\n\n  /**\n   * Set the value at `index` to `value`\n   */\n  set (index: number, value: number): void {\n    const res = findBufAndOffset(this.bufs, index)\n\n    res.buf[res.index] = value\n  }\n\n  /**\n   * Copy bytes from `buf` to the index specified by `offset`\n   */\n  write (buf: Appendable, offset: number = 0): void {\n    if (buf instanceof Uint8Array) {\n      for (let i = 0; i < buf.length; i++) {\n        this.set(offset + i, buf[i])\n      }\n    } else if (isUint8ArrayList(buf)) {\n      for (let i = 0; i < buf.length; i++) {\n        this.set(offset + i, buf.get(i))\n      }\n    } else {\n      throw new Error('Could not write value, must be an Uint8Array or a Uint8ArrayList')\n    }\n  }\n\n  /**\n   * Remove bytes from the front of the pool\n   */\n  consume (bytes: number): void {\n    // first, normalize the argument, in accordance with how Buffer does it\n    bytes = Math.trunc(bytes)\n\n    // do nothing if not a positive number\n    if (Number.isNaN(bytes) || bytes <= 0) {\n      return\n    }\n\n    // if consuming all bytes, skip iterating\n    if (bytes === this.byteLength) {\n      this.bufs = []\n      this.length = 0\n      return\n    }\n\n    while (this.bufs.length > 0) {\n      if (bytes >= this.bufs[0].byteLength) {\n        bytes -= this.bufs[0].byteLength\n        this.length -= this.bufs[0].byteLength\n        this.bufs.shift()\n      } else {\n        this.bufs[0] = this.bufs[0].subarray(bytes)\n        this.length -= bytes\n        break\n      }\n    }\n  }\n\n  /**\n   * Extracts a section of an array and returns a new array.\n   *\n   * This is a copy operation as it is with Uint8Arrays and Arrays\n   * - note this is different to the behaviour of Node Buffers.\n   */\n  slice (beginInclusive?: number, endExclusive?: number): Uint8Array {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    return concat(bufs, length)\n  }\n\n  /**\n   * Returns a alloc from the given start and end element index.\n   *\n   * In the best case where the data extracted comes from a single Uint8Array\n   * internally this is a no-copy operation otherwise it is a copy operation.\n   */\n  subarray (beginInclusive?: number, endExclusive?: number): Uint8Array {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    if (bufs.length === 1) {\n      return bufs[0]\n    }\n\n    return concat(bufs, length)\n  }\n\n  /**\n   * Returns a allocList from the given start and end element index.\n   *\n   * This is a no-copy operation.\n   */\n  sublist (beginInclusive?: number, endExclusive?: number): Uint8ArrayList {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    const list = new Uint8ArrayList()\n    list.length = length\n    // don't loop, just set the bufs\n    list.bufs = [...bufs]\n\n    return list\n  }\n\n  private _subList (beginInclusive?: number, endExclusive?: number): { bufs: Uint8Array[], length: number } {\n    beginInclusive = beginInclusive ?? 0\n    endExclusive = endExclusive ?? this.length\n\n    if (beginInclusive < 0) {\n      beginInclusive = this.length + beginInclusive\n    }\n\n    if (endExclusive < 0) {\n      endExclusive = this.length + endExclusive\n    }\n\n    if (beginInclusive < 0 || endExclusive > this.length) {\n      throw new RangeError('index is out of bounds')\n    }\n\n    if (beginInclusive === endExclusive) {\n      return { bufs: [], length: 0 }\n    }\n\n    if (beginInclusive === 0 && endExclusive === this.length) {\n      return { bufs: this.bufs, length: this.length }\n    }\n\n    const bufs: Uint8Array[] = []\n    let offset = 0\n\n    for (let i = 0; i < this.bufs.length; i++) {\n      const buf = this.bufs[i]\n      const bufStart = offset\n      const bufEnd = bufStart + buf.byteLength\n\n      // for next loop\n      offset = bufEnd\n\n      if (beginInclusive >= bufEnd) {\n        // start after this buf\n        continue\n      }\n\n      const sliceStartInBuf = beginInclusive >= bufStart && beginInclusive < bufEnd\n      const sliceEndsInBuf = endExclusive > bufStart && endExclusive <= bufEnd\n\n      if (sliceStartInBuf && sliceEndsInBuf) {\n        // slice is wholly contained within this buffer\n        if (beginInclusive === bufStart && endExclusive === bufEnd) {\n          // requested whole buffer\n          bufs.push(buf)\n          break\n        }\n\n        // requested part of buffer\n        const start = beginInclusive - bufStart\n        bufs.push(buf.subarray(start, start + (endExclusive - beginInclusive)))\n        break\n      }\n\n      if (sliceStartInBuf) {\n        // slice starts in this buffer\n        if (beginInclusive === 0) {\n          // requested whole buffer\n          bufs.push(buf)\n          continue\n        }\n\n        // requested part of buffer\n        bufs.push(buf.subarray(beginInclusive - bufStart))\n        continue\n      }\n\n      if (sliceEndsInBuf) {\n        if (endExclusive === bufEnd) {\n          // requested whole buffer\n          bufs.push(buf)\n          break\n        }\n\n        // requested part of buffer\n        bufs.push(buf.subarray(0, endExclusive - bufStart))\n        break\n      }\n\n      // slice started before this buffer and ends after it\n      bufs.push(buf)\n    }\n\n    return { bufs, length: endExclusive - beginInclusive }\n  }\n\n  indexOf (search: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n    if (!isUint8ArrayList(search) && !(search instanceof Uint8Array)) {\n      throw new TypeError('The \"value\" argument must be a Uint8ArrayList or Uint8Array')\n    }\n\n    const needle = search instanceof Uint8Array ? search : search.subarray()\n\n    offset = Number(offset ?? 0)\n\n    if (isNaN(offset)) {\n      offset = 0\n    }\n\n    if (offset < 0) {\n      offset = this.length + offset\n    }\n\n    if (offset < 0) {\n      offset = 0\n    }\n\n    if (search.length === 0) {\n      return offset > this.length ? this.length : offset\n    }\n\n    // https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm\n    const M: number = needle.byteLength\n\n    if (M === 0) {\n      throw new TypeError('search must be at least 1 byte long')\n    }\n\n    // radix\n    const radix: number = 256\n    const rightmostPositions: Int32Array = new Int32Array(radix)\n\n    // position of the rightmost occurrence of the byte c in the pattern\n    for (let c: number = 0; c < radix; c++) {\n      // -1 for bytes not in pattern\n      rightmostPositions[c] = -1\n    }\n\n    for (let j = 0; j < M; j++) {\n      // rightmost position for bytes in pattern\n      rightmostPositions[needle[j]] = j\n    }\n\n    // Return offset of first match, -1 if no match\n    const right = rightmostPositions\n    const lastIndex = this.byteLength - needle.byteLength\n    const lastPatIndex = needle.byteLength - 1\n    let skip: number\n\n    for (let i = offset; i <= lastIndex; i += skip) {\n      skip = 0\n\n      for (let j = lastPatIndex; j >= 0; j--) {\n        const char: number = this.get(i + j)\n\n        if (needle[j] !== char) {\n          skip = Math.max(1, j - right[char])\n          break\n        }\n      }\n\n      if (skip === 0) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getInt8 (byteOffset: number): number {\n    const buf = this.subarray(byteOffset, byteOffset + 1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt8(0)\n  }\n\n  setInt8 (byteOffset: number, value: number): void {\n    const buf = allocUnsafe(1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt8(0, value)\n\n    this.write(buf, byteOffset)\n  }\n\n  getInt16 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt16(0, littleEndian)\n  }\n\n  setInt16 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt16(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getInt32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt32(0, littleEndian)\n  }\n\n  setInt32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getBigInt64 (byteOffset: number, littleEndian?: boolean): bigint {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getBigInt64(0, littleEndian)\n  }\n\n  setBigInt64 (byteOffset: number, value: bigint, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setBigInt64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint8 (byteOffset: number): number {\n    const buf = this.subarray(byteOffset, byteOffset + 1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint8(0)\n  }\n\n  setUint8 (byteOffset: number, value: number): void {\n    const buf = allocUnsafe(1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint8(0, value)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint16 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint16(0, littleEndian)\n  }\n\n  setUint16 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint16(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint32(0, littleEndian)\n  }\n\n  setUint32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getBigUint64 (byteOffset: number, littleEndian?: boolean): bigint {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getBigUint64(0, littleEndian)\n  }\n\n  setBigUint64 (byteOffset: number, value: bigint, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setBigUint64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getFloat32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getFloat32(0, littleEndian)\n  }\n\n  setFloat32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setFloat32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getFloat64 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getFloat64(0, littleEndian)\n  }\n\n  setFloat64 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setFloat64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  equals (other: any): other is Uint8ArrayList {\n    if (other == null) {\n      return false\n    }\n\n    if (!(other instanceof Uint8ArrayList)) {\n      return false\n    }\n\n    if (other.bufs.length !== this.bufs.length) {\n      return false\n    }\n\n    for (let i = 0; i < this.bufs.length; i++) {\n      if (!equals(this.bufs[i], other.bufs[i])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Create a Uint8ArrayList from a pre-existing list of Uint8Arrays.  Use this\n   * method if you know the total size of all the Uint8Arrays ahead of time.\n   */\n  static fromUint8Arrays (bufs: Uint8Array[], length?: number): Uint8ArrayList {\n    const list = new Uint8ArrayList()\n    list.bufs = bufs\n\n    if (length == null) {\n      length = bufs.reduce((acc, curr) => acc + curr.byteLength, 0)\n    }\n\n    list.length = length\n\n    return list\n  }\n}\n\n/*\nfunction indexOf (needle: Uint8Array, haystack: Uint8Array, offset = 0) {\n  for (let i = offset; i < haystack.byteLength; i++) {\n    for (let j = 0; j < needle.length; j++) {\n      if (haystack[i + j] !== needle[j]) {\n        break\n      }\n\n      if (j === needle.byteLength -1) {\n        return i\n      }\n    }\n\n    if (haystack.byteLength - i < needle.byteLength) {\n      break\n    }\n  }\n\n  return -1\n}\n*/\n", "import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n", "import { from } from './base.js'\n\nconst alphabet = Array.from('\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42')\nconst alphabetBytesToChars: string[] = (alphabet.reduce<string[]>((p, c, i) => { p[i] = c; return p }, ([])))\nconst alphabetCharsToBytes: number[] = (alphabet.reduce<number[]>((p, c, i) => {\n  const codePoint = c.codePointAt(0)\n  if (codePoint == null) {\n    throw new Error(`Invalid character: ${c}`)\n  }\n  p[codePoint] = i\n  return p\n}, ([])))\n\nfunction encode (data: Uint8Array): string {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\nfunction decode (str: string): Uint8Array {\n  const byts = []\n  for (const char of str) {\n    const codePoint = char.codePointAt(0)\n    if (codePoint == null) {\n      throw new Error(`Invalid character: ${char}`)\n    }\n    const byt = alphabetCharsToBytes[codePoint]\n    if (byt == null) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '\uD83D\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n", "import { fromString, toString } from '../bytes.js'\nimport { from } from './base.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n", "import type { ArrayBufferView, ByteView } from './interface.js'\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\nexport function encode <T> (node: T): ByteView<T> {\n  return textEncoder.encode(JSON.stringify(node))\n}\n\nexport function decode <T> (data: ByteView<T> | ArrayBufferView<T>): T {\n  return JSON.parse(textDecoder.decode(data))\n}\n", "/* global crypto */\n\nimport { from } from './hasher.js'\n\nfunction sha (name: AlgorithmIdentifier): (data: Uint8Array) => Promise<Uint8Array> {\n  return async data => new Uint8Array(await crypto.subtle.digest(name, data))\n}\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n", "import * as Digest from './digest.js'\nimport type { MultihashHasher } from './interface.js'\n\ntype Await<T> = Promise<T> | T\n\nconst DEFAULT_MIN_DIGEST_LENGTH = 20\n\nexport interface HasherInit <Name extends string, Code extends number> {\n  name: Name\n  code: Code\n  encode(input: Uint8Array): Await<Uint8Array>\n\n  /**\n   * The minimum length a hash is allowed to be truncated to in bytes\n   *\n   * @default 20\n   */\n  minDigestLength?: number\n\n  /**\n   * The maximum length a hash is allowed to be truncated to in bytes. If not\n   * specified it will be inferred from the length of the digest.\n   */\n  maxDigestLength?: number\n}\n\nexport function from <Name extends string, Code extends number> ({ name, code, encode, minDigestLength, maxDigestLength }: HasherInit<Name, Code>): Hasher<Name, Code> {\n  return new Hasher(name, code, encode, minDigestLength, maxDigestLength)\n}\n\nexport interface DigestOptions {\n  /**\n   * Truncate the returned digest to this number of bytes.\n   *\n   * This may cause the digest method to throw/reject if the passed value is\n   * greater than the digest length or below a threshold under which the risk of\n   * hash collisions is significant.\n   *\n   * The actual value of this threshold can depend on the hashing algorithm in\n   * use.\n   */\n  truncate?: number\n}\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nexport class Hasher<Name extends string, Code extends number> implements MultihashHasher<Code> {\n  readonly name: Name\n  readonly code: Code\n  readonly encode: (input: Uint8Array) => Await<Uint8Array>\n  readonly minDigestLength: number\n  readonly maxDigestLength?: number\n\n  constructor (name: Name, code: Code, encode: (input: Uint8Array) => Await<Uint8Array>, minDigestLength?: number, maxDigestLength?: number) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n    this.minDigestLength = minDigestLength ?? DEFAULT_MIN_DIGEST_LENGTH\n    this.maxDigestLength = maxDigestLength\n  }\n\n  digest (input: Uint8Array, options?: DigestOptions): Await<Digest.Digest<Code, number>> {\n    if (options?.truncate != null) {\n      if (options.truncate < this.minDigestLength) {\n        throw new Error(`Invalid truncate option, must be greater than or equal to ${this.minDigestLength}`)\n      }\n\n      if (this.maxDigestLength != null && options.truncate > this.maxDigestLength) {\n        throw new Error(`Invalid truncate option, must be less than or equal to ${this.maxDigestLength}`)\n      }\n    }\n\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n\n      if (result instanceof Uint8Array) {\n        return createDigest(result, this.code, options?.truncate)\n      }\n\n      return result.then(digest => createDigest(digest, this.code, options?.truncate))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * Create a Digest from the passed uint8array and code, optionally truncating it\n * first.\n */\nfunction createDigest <Code extends number> (digest: Uint8Array, code: Code, truncate?: number): Digest.Digest<Code, number> {\n  if (truncate != null && truncate !== digest.byteLength) {\n    if (truncate > digest.byteLength) {\n      throw new Error(`Invalid truncate option, must be less than or equal to ${digest.byteLength}`)\n    }\n\n    digest = digest.subarray(0, truncate)\n  }\n\n  return Digest.create(code, digest)\n}\n", "import * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base2 from './bases/base2.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base8 from './bases/base8.js'\nimport * as identityBase from './bases/identity.js'\nimport * as json from './codecs/json.js'\nimport * as raw from './codecs/raw.js'\nimport * as identity from './hashes/identity.js'\nimport * as sha2 from './hashes/sha2.js'\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nexport const bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nexport const hashes = { ...sha2, ...identity }\nexport const codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes }\n", "import { bases } from 'multiformats/basics'\nimport type { MultibaseCodec } from 'multiformats'\nimport { allocUnsafe } from '#alloc'\n\nfunction createCodec (name: string, prefix: string, encode: (buf: Uint8Array) => string, decode: (str: string) => Uint8Array): MultibaseCodec<any> {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = allocUnsafe(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\nexport type SupportedEncodings = 'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof typeof bases\n\nconst BASES: Record<SupportedEncodings, MultibaseCodec<any>> = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii,\n  binary: ascii,\n\n  ...bases\n}\n\nexport default BASES\n", "import bases, { type SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString (string: string, encoding: SupportedEncodings = 'utf8'): Uint8Array {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n", "import bases, { type SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString (array: Uint8Array, encoding: SupportedEncodings = 'utf8'): string {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n", "import { Uint8ArrayList } from 'uint8arraylist'\n\ninterface Context {\n  offset: number\n}\n\nconst TAG_MASK = parseInt('11111', 2)\nconst LONG_LENGTH_MASK = parseInt('10000000', 2)\nconst LONG_LENGTH_BYTES_MASK = parseInt('01111111', 2)\n\ninterface Decoder {\n  (buf: Uint8Array, context: Context): any\n}\n\nconst decoders: Record<number, Decoder> = {\n  0x0: readSequence,\n  0x1: readSequence,\n  0x2: readInteger,\n  0x3: readBitString,\n  0x4: readOctetString,\n  0x5: readNull,\n  0x6: readObjectIdentifier,\n  0x10: readSequence,\n  0x16: readSequence,\n  0x30: readSequence\n}\n\nexport function decodeDer (buf: Uint8Array, context: Context = { offset: 0 }): any {\n  const tag = buf[context.offset] & TAG_MASK\n  context.offset++\n\n  if (decoders[tag] != null) {\n    return decoders[tag](buf, context)\n  }\n\n  throw new Error('No decoder for tag ' + tag)\n}\n\nfunction readLength (buf: Uint8Array, context: Context): number {\n  let length = 0\n\n  if ((buf[context.offset] & LONG_LENGTH_MASK) === LONG_LENGTH_MASK) {\n    // long length\n    const count = buf[context.offset] & LONG_LENGTH_BYTES_MASK\n    let str = '0x'\n    context.offset++\n\n    for (let i = 0; i < count; i++, context.offset++) {\n      str += buf[context.offset].toString(16).padStart(2, '0')\n    }\n\n    length = parseInt(str, 16)\n  } else {\n    length = buf[context.offset]\n    context.offset++\n  }\n\n  return length\n}\n\nfunction readSequence (buf: Uint8Array, context: Context): any[] {\n  readLength(buf, context)\n  const entries: any[] = []\n\n  while (true) {\n    if (context.offset >= buf.byteLength) {\n      break\n    }\n\n    const result = decodeDer(buf, context)\n\n    if (result === null) {\n      break\n    }\n\n    entries.push(result)\n  }\n\n  return entries\n}\n\nfunction readInteger (buf: Uint8Array, context: Context): Uint8Array {\n  const length = readLength(buf, context)\n  const start = context.offset\n  const end = context.offset + length\n\n  const vals: number[] = []\n\n  for (let i = start; i < end; i++) {\n    if (i === start && buf[i] === 0) {\n      continue\n    }\n\n    vals.push(buf[i])\n  }\n\n  context.offset += length\n\n  return Uint8Array.from(vals)\n}\n\nfunction readObjectIdentifier (buf: Uint8Array, context: Context): string {\n  const count = readLength(buf, context)\n  const finalOffset = context.offset + count\n\n  const byte = buf[context.offset]\n  context.offset++\n\n  let val1 = 0\n  let val2 = 0\n\n  if (byte < 40) {\n    val1 = 0\n    val2 = byte\n  } else if (byte < 80) {\n    val1 = 1\n    val2 = byte - 40\n  } else {\n    val1 = 2\n    val2 = byte - 80\n  }\n\n  let oid = `${val1}.${val2}`\n  let num: number[] = []\n\n  while (context.offset < finalOffset) {\n    const byte = buf[context.offset]\n    context.offset++\n\n    // remove msb\n    num.push(byte & 0b01111111)\n\n    if (byte < 128) {\n      num.reverse()\n\n      // reached the end of the encoding\n      let val = 0\n\n      for (let i = 0; i < num.length; i++) {\n        val += num[i] << (i * 7)\n      }\n\n      oid += `.${val}`\n      num = []\n    }\n  }\n\n  return oid\n}\n\nfunction readNull (buf: Uint8Array, context: Context): null {\n  context.offset++\n\n  return null\n}\n\nfunction readBitString (buf: Uint8Array, context: Context): any {\n  const length = readLength(buf, context)\n  const unusedBits = buf[context.offset]\n  context.offset++\n  const bytes = buf.subarray(context.offset, context.offset + length - 1)\n  context.offset += length\n\n  if (unusedBits !== 0) {\n    // need to shift all bytes along by this many bits\n    throw new Error('Unused bits in bit string is unimplemented')\n  }\n\n  return bytes\n}\n\nfunction readOctetString (buf: Uint8Array, context: Context): any {\n  const length = readLength(buf, context)\n  const bytes = buf.subarray(context.offset, context.offset + length)\n  context.offset += length\n\n  return bytes\n}\n\nfunction encodeNumber (value: number): Uint8ArrayList {\n  let number = value.toString(16)\n\n  if (number.length % 2 === 1) {\n    number = '0' + number\n  }\n\n  const array = new Uint8ArrayList()\n\n  for (let i = 0; i < number.length; i += 2) {\n    array.append(Uint8Array.from([parseInt(`${number[i]}${number[i + 1]}`, 16)]))\n  }\n\n  return array\n}\n\nfunction encodeLength (bytes: { byteLength: number }): Uint8Array | Uint8ArrayList {\n  if (bytes.byteLength < 128) {\n    return Uint8Array.from([bytes.byteLength])\n  }\n\n  // long length\n  const length = encodeNumber(bytes.byteLength)\n\n  return new Uint8ArrayList(\n    Uint8Array.from([\n      length.byteLength | LONG_LENGTH_MASK\n    ]),\n    length\n  )\n}\n\nexport function encodeInteger (value: Uint8Array | Uint8ArrayList): Uint8ArrayList {\n  const contents = new Uint8ArrayList()\n\n  const mask = 0b10000000\n  const positive = (value.subarray()[0] & mask) === mask\n\n  if (positive) {\n    contents.append(Uint8Array.from([0]))\n  }\n\n  contents.append(value)\n\n  return new Uint8ArrayList(\n    Uint8Array.from([0x02]),\n    encodeLength(contents),\n    contents\n  )\n}\n\nexport function encodeBitString (value: Uint8Array | Uint8ArrayList): Uint8ArrayList {\n  // unused bits is always 0 with full-byte-only values\n  const unusedBits = Uint8Array.from([0])\n\n  const contents = new Uint8ArrayList(\n    unusedBits,\n    value\n  )\n\n  return new Uint8ArrayList(\n    Uint8Array.from([0x03]),\n    encodeLength(contents),\n    contents\n  )\n}\n\nexport function encodeOctetString (value: Uint8Array | Uint8ArrayList): Uint8ArrayList {\n  return new Uint8ArrayList(\n    Uint8Array.from([0x04]),\n    encodeLength(value),\n    value\n  )\n}\n\nexport function encodeSequence (values: Array<Uint8Array | Uint8ArrayList>, tag = 0x30): Uint8ArrayList {\n  const output = new Uint8ArrayList()\n\n  for (const buf of values) {\n    output.append(\n      buf\n    )\n  }\n\n  return new Uint8ArrayList(\n    Uint8Array.from([tag]),\n    encodeLength(output),\n    output\n  )\n}\n", "import type { JWKKeyPair } from '../interface.js'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport type Curve = 'P-256' | 'P-384' | 'P-521'\n\nexport const ECDSA_P_256_OID = '1.2.840.10045.3.1.7'\nexport const ECDSA_P_384_OID = '1.3.132.0.34'\nexport const ECDSA_P_521_OID = '1.3.132.0.35'\n\nexport async function generateECDSAKey (curve: Curve = 'P-256'): Promise<JWKKeyPair> {\n  const keyPair = await crypto.subtle.generateKey({\n    name: 'ECDSA',\n    namedCurve: curve\n  }, true, ['sign', 'verify'])\n\n  return {\n    publicKey: await crypto.subtle.exportKey('jwk', keyPair.publicKey),\n    privateKey: await crypto.subtle.exportKey('jwk', keyPair.privateKey)\n  }\n}\n\nexport async function hashAndSign (key: JsonWebKey, msg: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<Uint8Array> {\n  const privateKey = await crypto.subtle.importKey('jwk', key, {\n    name: 'ECDSA',\n    namedCurve: key.crv ?? 'P-256'\n  }, false, ['sign'])\n  options?.signal?.throwIfAborted()\n\n  const signature = await crypto.subtle.sign({\n    name: 'ECDSA',\n    hash: {\n      name: 'SHA-256'\n    }\n  }, privateKey, msg.subarray())\n  options?.signal?.throwIfAborted()\n\n  return new Uint8Array(signature, 0, signature.byteLength)\n}\n\nexport async function hashAndVerify (key: JsonWebKey, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<boolean> {\n  const publicKey = await crypto.subtle.importKey('jwk', key, {\n    name: 'ECDSA',\n    namedCurve: key.crv ?? 'P-256'\n  }, false, ['verify'])\n  options?.signal?.throwIfAborted()\n\n  const result = await crypto.subtle.verify({\n    name: 'ECDSA',\n    hash: {\n      name: 'SHA-256'\n    }\n  }, publicKey, sig, msg.subarray())\n  options?.signal?.throwIfAborted()\n\n  return result\n}\n", "import { InvalidParametersError } from '@libp2p/interface'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { decodeDer, encodeBitString, encodeInteger, encodeOctetString, encodeSequence } from '../rsa/der.js'\nimport { ECDSAPrivateKey as ECDSAPrivateKeyClass, ECDSAPublicKey as ECDSAPublicKeyClass } from './ecdsa.js'\nimport { generateECDSAKey } from './index.js'\nimport type { Curve } from '../ecdh/index.js'\nimport type { ECDSAPublicKey, ECDSAPrivateKey } from '@libp2p/interface'\n\n// 1.2.840.10045.3.1.7 prime256v1 (ANSI X9.62 named elliptic curve)\nconst OID_256 = Uint8Array.from([0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x03, 0x01, 0x07])\n// 1.3.132.0.34 secp384r1 (SECG (Certicom) named elliptic curve)\nconst OID_384 = Uint8Array.from([0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x22])\n// 1.3.132.0.35 secp521r1 (SECG (Certicom) named elliptic curve)\nconst OID_521 = Uint8Array.from([0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x23])\n\nconst P_256_KEY_JWK = {\n  ext: true,\n  kty: 'EC',\n  crv: 'P-256'\n}\n\nconst P_384_KEY_JWK = {\n  ext: true,\n  kty: 'EC',\n  crv: 'P-384'\n}\n\nconst P_521_KEY_JWK = {\n  ext: true,\n  kty: 'EC',\n  crv: 'P-521'\n}\n\nconst P_256_KEY_LENGTH = 32\nconst P_384_KEY_LENGTH = 48\nconst P_521_KEY_LENGTH = 66\n\nexport function unmarshalECDSAPrivateKey (bytes: Uint8Array): ECDSAPrivateKey {\n  const message = decodeDer(bytes)\n\n  return pkiMessageToECDSAPrivateKey(message)\n}\n\nexport function pkiMessageToECDSAPrivateKey (message: any): ECDSAPrivateKey {\n  const privateKey = message[1]\n  const d = uint8ArrayToString(privateKey, 'base64url')\n  const coordinates: Uint8Array = message[2][1][0]\n  const offset = 1\n  let x: string\n  let y: string\n\n  if (privateKey.byteLength === P_256_KEY_LENGTH) {\n    x = uint8ArrayToString(coordinates.subarray(offset, offset + P_256_KEY_LENGTH), 'base64url')\n    y = uint8ArrayToString(coordinates.subarray(offset + P_256_KEY_LENGTH), 'base64url')\n\n    return new ECDSAPrivateKeyClass({\n      ...P_256_KEY_JWK,\n      key_ops: ['sign'],\n      d,\n      x,\n      y\n    })\n  }\n\n  if (privateKey.byteLength === P_384_KEY_LENGTH) {\n    x = uint8ArrayToString(coordinates.subarray(offset, offset + P_384_KEY_LENGTH), 'base64url')\n    y = uint8ArrayToString(coordinates.subarray(offset + P_384_KEY_LENGTH), 'base64url')\n\n    return new ECDSAPrivateKeyClass({\n      ...P_384_KEY_JWK,\n      key_ops: ['sign'],\n      d,\n      x,\n      y\n    })\n  }\n\n  if (privateKey.byteLength === P_521_KEY_LENGTH) {\n    x = uint8ArrayToString(coordinates.subarray(offset, offset + P_521_KEY_LENGTH), 'base64url')\n    y = uint8ArrayToString(coordinates.subarray(offset + P_521_KEY_LENGTH), 'base64url')\n\n    return new ECDSAPrivateKeyClass({\n      ...P_521_KEY_JWK,\n      key_ops: ['sign'],\n      d,\n      x,\n      y\n    })\n  }\n\n  throw new InvalidParametersError(`Private key length was wrong length, got ${privateKey.byteLength}, expected 32, 48 or 66`)\n}\n\nexport function unmarshalECDSAPublicKey (bytes: Uint8Array): ECDSAPublicKey {\n  const message = decodeDer(bytes)\n\n  return pkiMessageToECDSAPublicKey(message)\n}\n\nexport function pkiMessageToECDSAPublicKey (message: any): ECDSAPublicKey {\n  const coordinates = message[1][1][0]\n  const offset = 1\n  let x: string\n  let y: string\n\n  if (coordinates.byteLength === ((P_256_KEY_LENGTH * 2) + 1)) {\n    x = uint8ArrayToString(coordinates.subarray(offset, offset + P_256_KEY_LENGTH), 'base64url')\n    y = uint8ArrayToString(coordinates.subarray(offset + P_256_KEY_LENGTH), 'base64url')\n\n    return new ECDSAPublicKeyClass({\n      ...P_256_KEY_JWK,\n      key_ops: ['verify'],\n      x,\n      y\n    })\n  }\n\n  if (coordinates.byteLength === ((P_384_KEY_LENGTH * 2) + 1)) {\n    x = uint8ArrayToString(coordinates.subarray(offset, offset + P_384_KEY_LENGTH), 'base64url')\n    y = uint8ArrayToString(coordinates.subarray(offset + P_384_KEY_LENGTH), 'base64url')\n\n    return new ECDSAPublicKeyClass({\n      ...P_384_KEY_JWK,\n      key_ops: ['verify'],\n      x,\n      y\n    })\n  }\n\n  if (coordinates.byteLength === ((P_521_KEY_LENGTH * 2) + 1)) {\n    x = uint8ArrayToString(coordinates.subarray(offset, offset + P_521_KEY_LENGTH), 'base64url')\n    y = uint8ArrayToString(coordinates.subarray(offset + P_521_KEY_LENGTH), 'base64url')\n\n    return new ECDSAPublicKeyClass({\n      ...P_521_KEY_JWK,\n      key_ops: ['verify'],\n      x,\n      y\n    })\n  }\n\n  throw new InvalidParametersError(`coordinates were wrong length, got ${coordinates.byteLength}, expected 65, 97 or 133`)\n}\n\nexport function privateKeyToPKIMessage (privateKey: JsonWebKey): Uint8Array {\n  return encodeSequence([\n    encodeInteger(Uint8Array.from([1])), // header\n    encodeOctetString(uint8ArrayFromString(privateKey.d ?? '', 'base64url')), // body\n    encodeSequence([ // PKIProtection\n      getOID(privateKey.crv)\n    ], 0xA0),\n    encodeSequence([ // extraCerts\n      encodeBitString(\n        new Uint8ArrayList(\n          Uint8Array.from([0x04]),\n          uint8ArrayFromString(privateKey.x ?? '', 'base64url'),\n          uint8ArrayFromString(privateKey.y ?? '', 'base64url')\n        )\n      )\n    ], 0xA1)\n  ]).subarray()\n}\n\nexport function publicKeyToPKIMessage (publicKey: JsonWebKey): Uint8Array {\n  return encodeSequence([\n    encodeInteger(Uint8Array.from([1])), // header\n    encodeSequence([ // PKIProtection\n      getOID(publicKey.crv)\n    ], 0xA0),\n    encodeSequence([ // extraCerts\n      encodeBitString(\n        new Uint8ArrayList(\n          Uint8Array.from([0x04]),\n          uint8ArrayFromString(publicKey.x ?? '', 'base64url'),\n          uint8ArrayFromString(publicKey.y ?? '', 'base64url')\n        )\n      )\n    ], 0xA1)\n  ]).subarray()\n}\n\nfunction getOID (curve?: string): Uint8Array {\n  if (curve === 'P-256') {\n    return OID_256\n  }\n\n  if (curve === 'P-384') {\n    return OID_384\n  }\n\n  if (curve === 'P-521') {\n    return OID_521\n  }\n\n  throw new InvalidParametersError(`Invalid curve ${curve}`)\n}\n\nexport async function generateECDSAKeyPair (curve: Curve = 'P-256'): Promise<ECDSAPrivateKey> {\n  const key = await generateECDSAKey(curve)\n\n  return new ECDSAPrivateKeyClass(key.privateKey)\n}\n\nexport function ensureECDSAKey (key: Uint8Array, length: number): Uint8Array {\n  key = Uint8Array.from(key ?? [])\n  if (key.length !== length) {\n    throw new InvalidParametersError(`Key must be a Uint8Array of length ${length}, got ${key.length}`)\n  }\n  return key\n}\n", "import { base58btc } from 'multiformats/bases/base58'\nimport { CID } from 'multiformats/cid'\nimport { identity } from 'multiformats/hashes/identity'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { publicKeyToProtobuf } from '../index.js'\nimport { privateKeyToPKIMessage, publicKeyToPKIMessage } from './utils.js'\nimport { hashAndVerify, hashAndSign } from './index.js'\nimport type { ECDSAPublicKey as ECDSAPublicKeyInterface, ECDSAPrivateKey as ECDSAPrivateKeyInterface, AbortOptions } from '@libp2p/interface'\nimport type { Digest } from 'multiformats/hashes/digest'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class ECDSAPublicKey implements ECDSAPublicKeyInterface {\n  public readonly type = 'ECDSA'\n  public readonly jwk: JsonWebKey\n  private _raw?: Uint8Array\n\n  constructor (jwk: JsonWebKey) {\n    this.jwk = jwk\n  }\n\n  get raw (): Uint8Array {\n    if (this._raw == null) {\n      this._raw = publicKeyToPKIMessage(this.jwk)\n    }\n\n    return this._raw\n  }\n\n  toMultihash (): Digest<0x0, number> {\n    return identity.digest(publicKeyToProtobuf(this))\n  }\n\n  toCID (): CID<unknown, 114, 0x0, 1> {\n    return CID.createV1(114, this.toMultihash())\n  }\n\n  toString (): string {\n    return base58btc.encode(this.toMultihash().bytes).substring(1)\n  }\n\n  equals (key?: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  async verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array, options?: AbortOptions): Promise<boolean> {\n    return hashAndVerify(this.jwk, sig, data, options)\n  }\n}\n\nexport class ECDSAPrivateKey implements ECDSAPrivateKeyInterface {\n  public readonly type = 'ECDSA'\n  public readonly jwk: JsonWebKey\n  public readonly publicKey: ECDSAPublicKey\n  private _raw?: Uint8Array\n\n  constructor (jwk: JsonWebKey) {\n    this.jwk = jwk\n    this.publicKey = new ECDSAPublicKey({\n      crv: jwk.crv,\n      ext: jwk.ext,\n      key_ops: ['verify'],\n      kty: 'EC',\n      x: jwk.x,\n      y: jwk.y\n    })\n  }\n\n  get raw (): Uint8Array {\n    if (this._raw == null) {\n      this._raw = privateKeyToPKIMessage(this.jwk)\n    }\n\n    return this._raw\n  }\n\n  equals (key?: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  async sign (message: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<Uint8Array> {\n    return hashAndSign(this.jwk, message, options)\n  }\n}\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number, title: string = ''): void {\n  if (!Number.isSafeInteger(n) || n < 0) {\n    const prefix = title && `\"${title}\" `;\n    throw new Error(`${prefix}expected integer >= 0, got ${n}`);\n  }\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(value: Uint8Array, length?: number, title: string = ''): Uint8Array {\n  const bytes = isBytes(value);\n  const len = value?.length;\n  const needsLen = length !== undefined;\n  if (!bytes || (needsLen && len !== length)) {\n    const prefix = title && `\"${title}\" `;\n    const ofLen = needsLen ? ` of length ${length}` : '';\n    const got = bytes ? `length=${len}` : `type=${typeof value}`;\n    throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n  }\n  return value;\n}\n\n/** Asserts something is hash */\nexport function ahash(h: CHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash must wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out, undefined, 'digestInto() output');\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('\"digestInto() output\" expected to be of length >=' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * Built-in doesn't validate input to be string: we do the check.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput, errorTitle = ''): Uint8Array {\n  if (typeof data === 'string') return utf8ToBytes(data);\n  return abytes(data, undefined, errorTitle);\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\n/** Merges default options and passed options. */\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options must be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Common interface for all hashes. */\nexport interface Hash<T> {\n  blockLen: number; // Bytes per block\n  outputLen: number; // Bytes in output\n  update(buf: Uint8Array): this;\n  digestInto(buf: Uint8Array): void;\n  digest(): Uint8Array;\n  destroy(): void;\n  _cloneInto(to?: T): T;\n  clone(): T;\n}\n\n/** PseudoRandom (number) Generator */\nexport interface PRG {\n  addEntropy(seed: Uint8Array): void;\n  randomBytes(length: number): Uint8Array;\n  clean(): void;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash constructor */\nexport type HasherCons<T, Opts = undefined> = Opts extends undefined ? () => T : (opts?: Opts) => T;\n/** Optional hash params. */\nexport type HashInfo = {\n  oid?: Uint8Array; // DER encoded OID in bytes\n};\n/** Hash function */\nexport type CHash<T extends Hash<T> = Hash<any>, Opts = undefined> = {\n  outputLen: number;\n  blockLen: number;\n} & HashInfo &\n  (Opts extends undefined\n    ? {\n        (msg: Uint8Array): Uint8Array;\n        create(): T;\n      }\n    : {\n        (msg: Uint8Array, opts?: Opts): Uint8Array;\n        create(opts?: Opts): T;\n      });\n/** XOF with output */\nexport type CHashXOF<T extends HashXOF<T> = HashXOF<any>, Opts = undefined> = CHash<T, Opts>;\n\n/** Creates function with outputLen, blockLen, create properties from a class constructor. */\nexport function createHasher<T extends Hash<T>, Opts = undefined>(\n  hashCons: HasherCons<T, Opts>,\n  info: HashInfo = {}\n): CHash<T, Opts> {\n  const hashC: any = (msg: Uint8Array, opts?: Opts) => hashCons(opts).update(msg).digest();\n  const tmp = hashCons(undefined);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: Opts) => hashCons(opts);\n  Object.assign(hashC, info);\n  return Object.freeze(hashC);\n}\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  const cr = typeof globalThis === 'object' ? (globalThis as any).crypto : null;\n  if (typeof cr?.getRandomValues !== 'function')\n    throw new Error('crypto.getRandomValues must be defined');\n  return cr.getRandomValues(new Uint8Array(bytesLength));\n}\n\n/** Creates OID opts for NIST hashes, with prefix 06 09 60 86 48 01 65 03 04 02. */\nexport const oidNist = (suffix: number): Required<HashInfo> => ({\n  oid: Uint8Array.from([0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, suffix]),\n});\n", "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { abytes, aexists, aoutput, clean, createView, type Hash } from './utils.ts';\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> implements Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Uint8Array): this {\n    aexists(this);\n    abytes(data);\n    const { view, buffer, blockLen } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    clean(this.buffer.subarray(pos));\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    view.setBigUint64(blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which must be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen must be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.destroyed = destroyed;\n    to.finished = finished;\n    to.length = length;\n    to.pos = pos;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to as unknown as any;\n  }\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n", "/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  const len = lst.length;\n  let Ah = new Uint32Array(len);\n  let Al = new Uint32Array(len);\n  for (let i = 0; i < len; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://www.rfc-editor.org/rfc/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\nimport * as u64 from './_u64.ts';\nimport { type CHash, clean, createHasher, oidNist, rotr } from './utils.ts';\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\n\n/** Internal 32-byte base SHA2 hash class. */\nabstract class SHA2_32B<T extends SHA2_32B<T>> extends HashMD<T> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected abstract A: number;\n  protected abstract B: number;\n  protected abstract C: number;\n  protected abstract D: number;\n  protected abstract E: number;\n  protected abstract F: number;\n  protected abstract G: number;\n  protected abstract H: number;\n\n  constructor(outputLen: number) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    clean(SHA256_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\n/** Internal SHA2-256 hash class. */\nexport class _SHA256 extends SHA2_32B<_SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n  constructor() {\n    super(32);\n  }\n}\n\n/** Internal SHA2-224 hash class. */\nexport class _SHA224 extends SHA2_32B<_SHA224> {\n  protected A: number = SHA224_IV[0] | 0;\n  protected B: number = SHA224_IV[1] | 0;\n  protected C: number = SHA224_IV[2] | 0;\n  protected D: number = SHA224_IV[3] | 0;\n  protected E: number = SHA224_IV[4] | 0;\n  protected F: number = SHA224_IV[5] | 0;\n  protected G: number = SHA224_IV[6] | 0;\n  protected H: number = SHA224_IV[7] | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n\n/** Internal 64-byte base SHA2 hash class. */\nabstract class SHA2_64B<T extends SHA2_64B<T>> extends HashMD<T> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  // h -- high 32 bits, l -- low 32 bits\n  protected abstract Ah: number;\n  protected abstract Al: number;\n  protected abstract Bh: number;\n  protected abstract Bl: number;\n  protected abstract Ch: number;\n  protected abstract Cl: number;\n  protected abstract Dh: number;\n  protected abstract Dl: number;\n  protected abstract Eh: number;\n  protected abstract El: number;\n  protected abstract Fh: number;\n  protected abstract Fl: number;\n  protected abstract Gh: number;\n  protected abstract Gl: number;\n  protected abstract Hh: number;\n  protected abstract Hl: number;\n\n  constructor(outputLen: number) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    clean(SHA512_W_H, SHA512_W_L);\n  }\n  destroy(): void {\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\n/** Internal SHA2-512 hash class. */\nexport class _SHA512 extends SHA2_64B<_SHA512> {\n  protected Ah: number = SHA512_IV[0] | 0;\n  protected Al: number = SHA512_IV[1] | 0;\n  protected Bh: number = SHA512_IV[2] | 0;\n  protected Bl: number = SHA512_IV[3] | 0;\n  protected Ch: number = SHA512_IV[4] | 0;\n  protected Cl: number = SHA512_IV[5] | 0;\n  protected Dh: number = SHA512_IV[6] | 0;\n  protected Dl: number = SHA512_IV[7] | 0;\n  protected Eh: number = SHA512_IV[8] | 0;\n  protected El: number = SHA512_IV[9] | 0;\n  protected Fh: number = SHA512_IV[10] | 0;\n  protected Fl: number = SHA512_IV[11] | 0;\n  protected Gh: number = SHA512_IV[12] | 0;\n  protected Gl: number = SHA512_IV[13] | 0;\n  protected Hh: number = SHA512_IV[14] | 0;\n  protected Hl: number = SHA512_IV[15] | 0;\n\n  constructor() {\n    super(64);\n  }\n}\n\n/** Internal SHA2-384 hash class. */\nexport class _SHA384 extends SHA2_64B<_SHA384> {\n  protected Ah: number = SHA384_IV[0] | 0;\n  protected Al: number = SHA384_IV[1] | 0;\n  protected Bh: number = SHA384_IV[2] | 0;\n  protected Bl: number = SHA384_IV[3] | 0;\n  protected Ch: number = SHA384_IV[4] | 0;\n  protected Cl: number = SHA384_IV[5] | 0;\n  protected Dh: number = SHA384_IV[6] | 0;\n  protected Dl: number = SHA384_IV[7] | 0;\n  protected Eh: number = SHA384_IV[8] | 0;\n  protected El: number = SHA384_IV[9] | 0;\n  protected Fh: number = SHA384_IV[10] | 0;\n  protected Fl: number = SHA384_IV[11] | 0;\n  protected Gh: number = SHA384_IV[12] | 0;\n  protected Gl: number = SHA384_IV[13] | 0;\n  protected Hh: number = SHA384_IV[14] | 0;\n  protected Hl: number = SHA384_IV[15] | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n\n/** Internal SHA2-512/224 hash class. */\nexport class _SHA512_224 extends SHA2_64B<_SHA512_224> {\n  protected Ah: number = T224_IV[0] | 0;\n  protected Al: number = T224_IV[1] | 0;\n  protected Bh: number = T224_IV[2] | 0;\n  protected Bl: number = T224_IV[3] | 0;\n  protected Ch: number = T224_IV[4] | 0;\n  protected Cl: number = T224_IV[5] | 0;\n  protected Dh: number = T224_IV[6] | 0;\n  protected Dl: number = T224_IV[7] | 0;\n  protected Eh: number = T224_IV[8] | 0;\n  protected El: number = T224_IV[9] | 0;\n  protected Fh: number = T224_IV[10] | 0;\n  protected Fl: number = T224_IV[11] | 0;\n  protected Gh: number = T224_IV[12] | 0;\n  protected Gl: number = T224_IV[13] | 0;\n  protected Hh: number = T224_IV[14] | 0;\n  protected Hl: number = T224_IV[15] | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\n/** Internal SHA2-512/256 hash class. */\nexport class _SHA512_256 extends SHA2_64B<_SHA512_256> {\n  protected Ah: number = T256_IV[0] | 0;\n  protected Al: number = T256_IV[1] | 0;\n  protected Bh: number = T256_IV[2] | 0;\n  protected Bl: number = T256_IV[3] | 0;\n  protected Ch: number = T256_IV[4] | 0;\n  protected Cl: number = T256_IV[5] | 0;\n  protected Dh: number = T256_IV[6] | 0;\n  protected Dl: number = T256_IV[7] | 0;\n  protected Eh: number = T256_IV[8] | 0;\n  protected El: number = T256_IV[9] | 0;\n  protected Fh: number = T256_IV[10] | 0;\n  protected Fl: number = T256_IV[11] | 0;\n  protected Gh: number = T256_IV[12] | 0;\n  protected Gl: number = T256_IV[13] | 0;\n  protected Hh: number = T256_IV[14] | 0;\n  protected Hl: number = T256_IV[15] | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\n/**\n * SHA2-256 hash function from RFC 4634. In JS it's the fastest: even faster than Blake3. Some info:\n *\n * - Trying 2^128 hashes would get 50% chance of collision, using birthday attack.\n * - BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n * - Each sha256 hash is executing 2^18 bit operations.\n * - Good 2024 ASICs can do 200Th/sec with 3500 watts of power, corresponding to 2^36 hashes/joule.\n */\nexport const sha256: CHash<_SHA256> = /* @__PURE__ */ createHasher(\n  () => new _SHA256(),\n  /* @__PURE__ */ oidNist(0x01)\n);\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224: CHash<_SHA224> = /* @__PURE__ */ createHasher(\n  () => new _SHA224(),\n  /* @__PURE__ */ oidNist(0x04)\n);\n\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512: CHash<_SHA512> = /* @__PURE__ */ createHasher(\n  () => new _SHA512(),\n  /* @__PURE__ */ oidNist(0x03)\n);\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384: CHash<_SHA384> = /* @__PURE__ */ createHasher(\n  () => new _SHA384(),\n  /* @__PURE__ */ oidNist(0x02)\n);\n\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256: CHash<_SHA512_256> = /* @__PURE__ */ createHasher(\n  () => new _SHA512_256(),\n  /* @__PURE__ */ oidNist(0x06)\n);\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224: CHash<_SHA512_224> = /* @__PURE__ */ createHasher(\n  () => new _SHA512_224(),\n  /* @__PURE__ */ oidNist(0x05)\n);\n", "/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  abytes as abytes_,\n  anumber,\n  bytesToHex as bytesToHex_,\n  concatBytes as concatBytes_,\n  hexToBytes as hexToBytes_,\n} from '@noble/hashes/utils.js';\nexport {\n  abytes,\n  anumber,\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  isBytes,\n  randomBytes,\n} from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\n\nexport type CHash = {\n  (message: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array) => Uint8Array;\nexport function abool(value: boolean, title: string = ''): boolean {\n  if (typeof value !== 'boolean') {\n    const prefix = title && `\"${title}\" `;\n    throw new Error(prefix + 'expected boolean, got type=' + typeof value);\n  }\n  return value;\n}\n\n// Used in weierstrass, der\nfunction abignumber(n: number | bigint) {\n  if (typeof n === 'bigint') {\n    if (!isPosBig(n)) throw new Error('positive bigint expected, got ' + n);\n  } else anumber(n);\n  return n;\n}\n\nexport function asafenumber(value: number, title: string = ''): void {\n  if (!Number.isSafeInteger(value)) {\n    const prefix = title && `\"${title}\" `;\n    throw new Error(prefix + 'expected safe integer, got type=' + typeof value);\n  }\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = abignumber(num).toString(16);\n  return hex.length & 1 ? '0' + hex : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex_(copyBytes(abytes_(bytes)).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  anumber(len);\n  n = abignumber(n);\n  const res = hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n  if (res.length !== len) throw new Error('number too large');\n  return res;\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes_(numberToHexUnpadded(abignumber(n)));\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n/**\n * Copies Uint8Array. We can't use u8a.slice(), because u8a can be Buffer,\n * and Buffer#slice creates mutable copy. Never use Buffers!\n */\nexport function copyBytes(bytes: Uint8Array): Uint8Array {\n  return Uint8Array.from(bytes);\n}\n\n/**\n * Decodes 7-bit ASCII string to Uint8Array, throws on non-ascii symbols\n * Should be safe to use for things expected to be ASCII.\n * Returns exact same result as `TextEncoder` for ASCII or throws.\n */\nexport function asciiToBytes(ascii: string): Uint8Array {\n  return Uint8Array.from(ascii, (c, i) => {\n    const charCode = c.charCodeAt(0);\n    if (c.length !== 1 || charCode > 127) {\n      throw new Error(\n        `string contains non-ASCII character \"${ascii[i]}\" with code ${charCode} at position ${i}`\n      );\n    }\n    return charCode;\n  });\n}\n\n// Is positive bigint\nconst isPosBig = (n: bigint) => typeof n === 'bigint' && _0n <= n;\n\nexport function inRange(n: bigint, min: bigint, max: bigint): boolean {\n  return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title: string, n: bigint, min: bigint, max: bigint): void {\n  // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n  // consider P=256n, min=0n, max=P\n  // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n  // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n  // - our way is the cleanest:               `inRange('x', x, 0n, P)\n  if (!inRange(n, min, max))\n    throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n: bigint): number {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number): bigint {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean): bigint {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number): bigint => (_1n << BigInt(n)) - _1n;\n\n// DRBG\n\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, message: Uint8Array) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  anumber(hashLen, 'hashLen');\n  anumber(qByteLen, 'qByteLen');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  const u8n = (len: number): Uint8Array => new Uint8Array(len); // creates Uint8Array\n  const NULL = Uint8Array.of();\n  const byte0 = Uint8Array.of(0x00);\n  const byte1 = Uint8Array.of(0x01);\n  const _maxDrbgIters = 1000;\n\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...msgs: Uint8Array[]) => hmacFn(k, concatBytes_(v, ...msgs)); // hmac(k)(v, ...values)\n  const reseed = (seed: Uint8Array = NULL) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(byte0, seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(byte1, seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= _maxDrbgIters) throw new Error('drbg: tried max amount of iterations');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes_(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\nexport function validateObject(\n  object: Record<string, any>,\n  fields: Record<string, string> = {},\n  optFields: Record<string, string> = {}\n): void {\n  if (!object || typeof object !== 'object') throw new Error('expected valid options object');\n  type Item = keyof typeof object;\n  function checkField(fieldName: Item, expectedType: string, isOpt: boolean) {\n    const val = object[fieldName];\n    if (isOpt && val === undefined) return;\n    const current = typeof val;\n    if (current !== expectedType || val === null)\n      throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n  }\n  const iter = (f: typeof fields, isOpt: boolean) =>\n    Object.entries(f).forEach(([k, v]) => checkField(k, v, isOpt));\n  iter(fields, false);\n  iter(optFields, true);\n}\n\n/**\n * throws not implemented error\n */\nexport const notImplemented = (): never => {\n  throw new Error('not implemented');\n};\n\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized<T extends object, R, O extends any[]>(\n  fn: (arg: T, ...args: O) => R\n): (arg: T, ...args: O) => R {\n  const map = new WeakMap<T, R>();\n  return (arg: T, ...args: O): R => {\n    const val = map.get(arg);\n    if (val !== undefined) return val;\n    const computed = fn(arg, ...args);\n    map.set(arg, computed);\n    return computed;\n  };\n}\n\nexport interface CryptoKeys {\n  lengths: { seed?: number; public?: number; secret?: number };\n  keygen: (seed?: Uint8Array) => { secretKey: Uint8Array; publicKey: Uint8Array };\n  getPublicKey: (secretKey: Uint8Array) => Uint8Array;\n}\n\n/** Generic interface for signatures. Has keygen, sign and verify. */\nexport interface Signer extends CryptoKeys {\n  // Interfaces are fun. We cannot just add new fields without copying old ones.\n  lengths: {\n    seed?: number;\n    public?: number;\n    secret?: number;\n    signRand?: number;\n    signature?: number;\n  };\n  sign: (msg: Uint8Array, secretKey: Uint8Array) => Uint8Array;\n  verify: (sig: Uint8Array, msg: Uint8Array, publicKey: Uint8Array) => boolean;\n}\n", "/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  abytes,\n  anumber,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  numberToBytesBE,\n  numberToBytesLE,\n  validateObject,\n} from '../utils.ts';\n\n// Numbers aren't used in x25519 / x448 builds\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0), _1n = /* @__PURE__ */ BigInt(1), _2n = /* @__PURE__ */ BigInt(2);\n// prettier-ignore\nconst _3n = /* @__PURE__ */ BigInt(3), _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5);\n// prettier-ignore\nconst _7n = /* @__PURE__ */ BigInt(7), _8n = /* @__PURE__ */ BigInt(8), _9n = /* @__PURE__ */ BigInt(9);\nconst _16n = /* @__PURE__ */ BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  return FpPow(Field(modulo), num, power);\n}\n\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n) throw new Error('invert: expected non-zero number');\n  if (modulo <= _0n) throw new Error('invert: expected positive modulus, got ' + modulo);\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\nfunction assertIsSquare<T>(Fp: IField<T>, root: T, n: T): void {\n  if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n}\n\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4<T>(Fp: IField<T>, n: T) {\n  const p1div4 = (Fp.ORDER + _1n) / _4n;\n  const root = Fp.pow(n, p1div4);\n  assertIsSquare(Fp, root, n);\n  return root;\n}\n\nfunction sqrt5mod8<T>(Fp: IField<T>, n: T) {\n  const p5div8 = (Fp.ORDER - _5n) / _8n;\n  const n2 = Fp.mul(n, _2n);\n  const v = Fp.pow(n2, p5div8);\n  const nv = Fp.mul(n, v);\n  const i = Fp.mul(Fp.mul(nv, _2n), v);\n  const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n  assertIsSquare(Fp, root, n);\n  return root;\n}\n\n// Based on RFC9380, Kong algorithm\n// prettier-ignore\nfunction sqrt9mod16(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  const Fp_ = Field(P);\n  const tn = tonelliShanks(P);\n  const c1 = tn(Fp_, Fp_.neg(Fp_.ONE));//  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n  const c2 = tn(Fp_, c1);              //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n  const c3 = tn(Fp_, Fp_.neg(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n  const c4 = (P + _7n) / _16n;         //  4. c4 = (q + 7) / 16        # Integer arithmetic\n  return <T>(Fp: IField<T>, n: T) => {\n    let tv1 = Fp.pow(n, c4);           //  1. tv1 = x^c4\n    let tv2 = Fp.mul(tv1, c1);         //  2. tv2 = c1 * tv1\n    const tv3 = Fp.mul(tv1, c2);       //  3. tv3 = c2 * tv1\n    const tv4 = Fp.mul(tv1, c3);       //  4. tv4 = c3 * tv1\n    const e1 = Fp.eql(Fp.sqr(tv2), n); //  5.  e1 = (tv2^2) == x\n    const e2 = Fp.eql(Fp.sqr(tv3), n); //  6.  e2 = (tv3^2) == x\n    tv1 = Fp.cmov(tv1, tv2, e1);       //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    tv2 = Fp.cmov(tv4, tv3, e2);       //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    const e3 = Fp.eql(Fp.sqr(tv2), n); //  9.  e3 = (tv2^2) == x\n    const root = Fp.cmov(tv1, tv2, e3);// 10.  z = CMOV(tv1, tv2, e3)   # Select sqrt from tv1 & tv2\n    assertIsSquare(Fp, root, n);\n    return root;\n  };\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // Initialization (precomputation).\n  // Caching initialization could boost perf by 7%.\n  if (P < _3n) throw new Error('sqrt is not defined for small field');\n  // Factor P - 1 = Q * 2^S, where Q is odd\n  let Q = P - _1n;\n  let S = 0;\n  while (Q % _2n === _0n) {\n    Q /= _2n;\n    S++;\n  }\n\n  // Find the first quadratic non-residue Z >= 2\n  let Z = _2n;\n  const _Fp = Field(P);\n  while (FpLegendre(_Fp, Z) === 1) {\n    // Basic primality test for P. After x iterations, chance of\n    // not finding quadratic non-residue is 2^x, so 2^1000.\n    if (Z++ > 1000) throw new Error('Cannot find square root: probably non-prime P');\n  }\n  // Fast-path; usually done before Z, but we do \"primality test\".\n  if (S === 1) return sqrt3mod4;\n\n  // Slow-path\n  // TODO: test on Fp2 and others\n  let cc = _Fp.pow(Z, Q); // c = z^Q\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    if (Fp.is0(n)) return n;\n    // Check if n is a quadratic residue using Legendre symbol\n    if (FpLegendre(Fp, n) !== 1) throw new Error('Cannot find square root');\n\n    // Initialize variables for the main loop\n    let M = S;\n    let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n    let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n    let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n\n    // Main loop\n    // while t != 1\n    while (!Fp.eql(t, Fp.ONE)) {\n      if (Fp.is0(t)) return Fp.ZERO; // if t=0 return R=0\n      let i = 1;\n\n      // Find the smallest i >= 1 such that t^(2^i) \u2261 1 (mod P)\n      let t_tmp = Fp.sqr(t); // t^(2^1)\n      while (!Fp.eql(t_tmp, Fp.ONE)) {\n        i++;\n        t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n        if (i === M) throw new Error('Cannot find square root');\n      }\n\n      // Calculate the exponent for b: 2^(M - i - 1)\n      const exponent = _1n << BigInt(M - i - 1); // bigint is important\n      const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n\n      // Update variables\n      M = i;\n      c = Fp.sqr(b); // c = b^2\n      t = Fp.mul(t, c); // t = (t * b^2)\n      R = Fp.mul(R, b); // R = R*b\n    }\n    return R;\n  };\n}\n\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P \u2261 3 (mod 4)\n * 2. P \u2261 5 (mod 8)\n * 3. P \u2261 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // P \u2261 3 (mod 4) => \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) return sqrt3mod4;\n  // P \u2261 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n  if (P % _8n === _5n) return sqrt5mod8;\n  // P \u2261 9 (mod 16) => Kong algorithm, page 11 of https://eprint.iacr.org/2012/685.pdf (algorithm 4)\n  if (P % _16n === _9n) return sqrt9mod16(P);\n  // Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint): boolean =>\n  (mod(num, modulo) & _1n) === _1n;\n\n/** Field is not always over prime: for example, Fp2 has ORDER(q)=p^m. */\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  isLE: boolean;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  isValidNot0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array, skipValidation?: boolean): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>): IField<T> {\n  const initial = {\n    ORDER: 'bigint',\n    BYTES: 'number',\n    BITS: 'number',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  validateObject(field, opts);\n  // const max = 16384;\n  // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n  // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n  return field;\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(Fp: IField<T>, num: T, power: bigint): T {\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (power === _0n) return Fp.ONE;\n  if (power === _1n) return num;\n  let p = Fp.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = Fp.mul(p, d);\n    d = Fp.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch<T>(Fp: IField<T>, nums: T[], passZero = false): T[] {\n  const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n  // Walk from first to last, multiply them by each other MOD p\n  const multipliedAcc = nums.reduce((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = acc;\n    return Fp.mul(acc, num);\n  }, Fp.ONE);\n  // Invert last element\n  const invertedAcc = Fp.inv(multipliedAcc);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (Fp.is0(num)) return acc;\n    inverted[i] = Fp.mul(acc, inverted[i]);\n    return Fp.mul(acc, num);\n  }, invertedAcc);\n  return inverted;\n}\n\n// TODO: remove\nexport function FpDiv<T>(Fp: IField<T>, lhs: T, rhs: T | bigint): T {\n  return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) \u2261 1    if a is a square (mod p), quadratic residue\n * * (a | p) \u2261 -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) \u2261 0    if a \u2261 0 (mod p)\n */\nexport function FpLegendre<T>(Fp: IField<T>, n: T): -1 | 0 | 1 {\n  // We can use 3rd argument as optional cache of this value\n  // but seems unneeded for now. The operation is very fast.\n  const p1mod2 = (Fp.ORDER - _1n) / _2n;\n  const powered = Fp.pow(n, p1mod2);\n  const yes = Fp.eql(powered, Fp.ONE);\n  const zero = Fp.eql(powered, Fp.ZERO);\n  const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n  if (!yes && !zero && !no) throw new Error('invalid Legendre symbol result');\n  return yes ? 1 : zero ? 0 : -1;\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(Fp: IField<T>, n: T): boolean {\n  const l = FpLegendre(Fp, n);\n  return l === 1;\n}\n\nexport type NLength = { nByteLength: number; nBitLength: number };\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number): NLength {\n  // Bit size, byte size of CURVE.n\n  if (nBitLength !== undefined) anumber(nBitLength);\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\ntype SqrtFn = (n: bigint) => bigint;\ntype FieldOpts = Partial<{\n  isLE: boolean;\n  BITS: number;\n  sqrt: SqrtFn;\n  allowedLengths?: readonly number[]; // for P521 (adds padding for smaller sizes)\n  modFromBytes: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n}>;\nclass _Field implements IField<bigint> {\n  readonly ORDER: bigint;\n  readonly BITS: number;\n  readonly BYTES: number;\n  readonly isLE: boolean;\n  readonly ZERO = _0n;\n  readonly ONE = _1n;\n  readonly _lengths?: number[];\n  private _sqrt: ReturnType<typeof FpSqrt> | undefined; // cached sqrt\n  private readonly _mod?: boolean;\n  constructor(ORDER: bigint, opts: FieldOpts = {}) {\n    if (ORDER <= _0n) throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    let _nbitLength: number | undefined = undefined;\n    this.isLE = false;\n    if (opts != null && typeof opts === 'object') {\n      if (typeof opts.BITS === 'number') _nbitLength = opts.BITS;\n      if (typeof opts.sqrt === 'function') this.sqrt = opts.sqrt;\n      if (typeof opts.isLE === 'boolean') this.isLE = opts.isLE;\n      if (opts.allowedLengths) this._lengths = opts.allowedLengths?.slice();\n      if (typeof opts.modFromBytes === 'boolean') this._mod = opts.modFromBytes;\n    }\n    const { nBitLength, nByteLength } = nLength(ORDER, _nbitLength);\n    if (nByteLength > 2048) throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    this.ORDER = ORDER;\n    this.BITS = nBitLength;\n    this.BYTES = nByteLength;\n    this._sqrt = undefined;\n    Object.preventExtensions(this);\n  }\n\n  create(num: bigint) {\n    return mod(num, this.ORDER);\n  }\n  isValid(num: bigint) {\n    if (typeof num !== 'bigint')\n      throw new Error('invalid field element: expected bigint, got ' + typeof num);\n    return _0n <= num && num < this.ORDER; // 0 is valid element, but it's not invertible\n  }\n  is0(num: bigint) {\n    return num === _0n;\n  }\n  // is valid and invertible\n  isValidNot0(num: bigint) {\n    return !this.is0(num) && this.isValid(num);\n  }\n  isOdd(num: bigint) {\n    return (num & _1n) === _1n;\n  }\n  neg(num: bigint) {\n    return mod(-num, this.ORDER);\n  }\n  eql(lhs: bigint, rhs: bigint) {\n    return lhs === rhs;\n  }\n\n  sqr(num: bigint) {\n    return mod(num * num, this.ORDER);\n  }\n  add(lhs: bigint, rhs: bigint) {\n    return mod(lhs + rhs, this.ORDER);\n  }\n  sub(lhs: bigint, rhs: bigint) {\n    return mod(lhs - rhs, this.ORDER);\n  }\n  mul(lhs: bigint, rhs: bigint) {\n    return mod(lhs * rhs, this.ORDER);\n  }\n  pow(num: bigint, power: bigint): bigint {\n    return FpPow(this, num, power);\n  }\n  div(lhs: bigint, rhs: bigint) {\n    return mod(lhs * invert(rhs, this.ORDER), this.ORDER);\n  }\n\n  // Same as above, but doesn't normalize\n  sqrN(num: bigint) {\n    return num * num;\n  }\n  addN(lhs: bigint, rhs: bigint) {\n    return lhs + rhs;\n  }\n  subN(lhs: bigint, rhs: bigint) {\n    return lhs - rhs;\n  }\n  mulN(lhs: bigint, rhs: bigint) {\n    return lhs * rhs;\n  }\n\n  inv(num: bigint) {\n    return invert(num, this.ORDER);\n  }\n  sqrt(num: bigint): bigint {\n    // Caching _sqrt speeds up sqrt9mod16 by 5x and tonneli-shanks by 10%\n    if (!this._sqrt) this._sqrt = FpSqrt(this.ORDER);\n    return this._sqrt(this, num);\n  }\n  toBytes(num: bigint) {\n    return this.isLE ? numberToBytesLE(num, this.BYTES) : numberToBytesBE(num, this.BYTES);\n  }\n  fromBytes(bytes: Uint8Array, skipValidation = false) {\n    abytes(bytes);\n    const { _lengths: allowedLengths, BYTES, isLE, ORDER, _mod: modFromBytes } = this;\n    if (allowedLengths) {\n      if (!allowedLengths.includes(bytes.length) || bytes.length > BYTES) {\n        throw new Error(\n          'Field.fromBytes: expected ' + allowedLengths + ' bytes, got ' + bytes.length\n        );\n      }\n      const padded = new Uint8Array(BYTES);\n      // isLE add 0 to right, !isLE to the left.\n      padded.set(bytes, isLE ? 0 : padded.length - bytes.length);\n      bytes = padded;\n    }\n    if (bytes.length !== BYTES)\n      throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n    let scalar = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    if (modFromBytes) scalar = mod(scalar, ORDER);\n    if (!skipValidation)\n      if (!this.isValid(scalar))\n        throw new Error('invalid field element: outside of range 0..ORDER');\n    // NOTE: we don't validate scalar here, please use isValid. This done such way because some\n    // protocol may allow non-reduced scalar that reduced later or changed some other way.\n    return scalar;\n  }\n  // TODO: we don't need it here, move out to separate fn\n  invertBatch(lst: bigint[]): bigint[] {\n    return FpInvertBatch(this, lst);\n  }\n  // We can't move this out because Fp6, Fp12 implement it\n  // and it's unclear what to return in there.\n  cmov(a: bigint, b: bigint, condition: boolean) {\n    return condition ? b : a;\n  }\n}\n\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER: bigint, opts: FieldOpts = {}): Readonly<FpField> {\n  return new _Field(ORDER, opts);\n}\n\n// Generic random scalar, we can do same for other fields if via Fp2.mul(Fp2.ONE, Fp2.random)?\n// This allows unsafe methods like ignore bias or zero. These unsafe, but often used in different protocols (if deterministic RNG).\n// which mean we cannot force this via opts.\n// Not sure what to do with randomBytes, we can accept it inside opts if wanted.\n// Probably need to export getMinHashLength somewhere?\n// random(bytes?: Uint8Array, unsafeAllowZero = false, unsafeAllowBias = false) {\n//   const LEN = !unsafeAllowBias ? getMinHashLength(ORDER) : BYTES;\n//   if (bytes === undefined) bytes = randomBytes(LEN); // _opts.randomBytes?\n//   const num = isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n//   // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n//   const reduced = unsafeAllowZero ? mod(num, ORDER) : mod(num, ORDER - _1n) + _1n;\n//   return reduced;\n// },\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.Point.Fn.ORDER)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  abytes(key);\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n  const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask, type Signer } from '../utils.ts';\nimport { Field, FpInvertBatch, validateField, type IField } from './modular.ts';\n\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { Z?: never };\n\n// We can't \"abstract out\" coordinates (X, Y, Z; and T in Edwards): argument names of constructor\n// are not accessible. See Typescript gh-56093, gh-41594.\n//\n// We have to use recursive types, so it will return actual point, not constained `CurvePoint`.\n// If, at any point, P is `any`, it will erase all types and replace it\n// with `any`, because of recursion, `any implements CurvePoint`,\n// but we lose all constrains on methods.\n\n/** Base interface for all elliptic curve Points. */\nexport interface CurvePoint<F, P extends CurvePoint<F, P>> {\n  /** Affine x coordinate. Different from projective / extended X coordinate. */\n  x: F;\n  /** Affine y coordinate. Different from projective / extended Y coordinate. */\n  y: F;\n  Z?: F;\n  double(): P;\n  negate(): P;\n  add(other: P): P;\n  subtract(other: P): P;\n  equals(other: P): boolean;\n  multiply(scalar: bigint): P;\n  assertValidity(): void;\n  clearCofactor(): P;\n  is0(): boolean;\n  isTorsionFree(): boolean;\n  isSmallOrder(): boolean;\n  multiplyUnsafe(scalar: bigint): P;\n  /**\n   * Massively speeds up `p.multiply(n)` by using precompute tables (caching). See {@link wNAF}.\n   * @param isLazy calculate cache now. Default (true) ensures it's deferred to first `multiply()`\n   */\n  precompute(windowSize?: number, isLazy?: boolean): P;\n  /** Converts point to 2D xy affine coordinates */\n  toAffine(invertedZ?: F): AffinePoint<F>;\n  toBytes(): Uint8Array;\n  toHex(): string;\n}\n\n/** Base interface for all elliptic curve Point constructors. */\nexport interface CurvePointCons<P extends CurvePoint<any, P>> {\n  [Symbol.hasInstance]: (item: unknown) => boolean;\n  BASE: P;\n  ZERO: P;\n  /** Field for basic curve math */\n  Fp: IField<P_F<P>>;\n  /** Scalar field, for scalars in multiply and others */\n  Fn: IField<bigint>;\n  /** Creates point from x, y. Does NOT validate if the point is valid. Use `.assertValidity()`. */\n  fromAffine(p: AffinePoint<P_F<P>>): P;\n  fromBytes(bytes: Uint8Array): P;\n  fromHex(hex: string): P;\n}\n\n// Type inference helpers: PC - PointConstructor, P - Point, Fp - Field element\n// Short names, because we use them a lot in result types:\n// * we can't do 'P = GetCurvePoint<PC>': this is default value and doesn't constrain anything\n// * we can't do 'type X = GetCurvePoint<PC>': it won't be accesible for arguments/return types\n// * `CurvePointCons<P extends CurvePoint<any, P>>` constraints from interface definition\n//   won't propagate, if `PC extends CurvePointCons<any>`: the P would be 'any', which is incorrect\n// * PC could be super specific with super specific P, which implements CurvePoint<any, P>.\n//   this means we need to do stuff like\n//   `function test<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(`\n//   if we want type safety around P, otherwise PC_P<PC> will be any\n\n/** Returns Fp type from Point (P_F<P> == P.F) */\nexport type P_F<P extends CurvePoint<any, P>> = P extends CurvePoint<infer F, P> ? F : never;\n/** Returns Fp type from PointCons (PC_F<PC> == PC.P.F) */\nexport type PC_F<PC extends CurvePointCons<CurvePoint<any, any>>> = PC['Fp']['ZERO'];\n/** Returns Point type from PointCons (PC_P<PC> == PC.P) */\nexport type PC_P<PC extends CurvePointCons<CurvePoint<any, any>>> = PC['ZERO'];\n\n// Ugly hack to get proper type inference, because in typescript fails to infer resursively.\n// The hack allows to do up to 10 chained operations without applying type erasure.\n//\n// Types which won't work:\n// * `CurvePointCons<CurvePoint<any, any>>`, will return `any` after 1 operation\n// * `CurvePointCons<any>: WeierstrassPointCons<bigint> extends CurvePointCons<any> = false`\n// * `P extends CurvePoint, PC extends CurvePointCons<P>`\n//     * It can't infer P from PC alone\n//     * Too many relations between F, P & PC\n//     * It will infer P/F if `arg: CurvePointCons<F, P>`, but will fail if PC is generic\n//     * It will work correctly if there is an additional argument of type P\n//     * But generally, we don't want to parametrize `CurvePointCons` over `F`: it will complicate\n//       types, making them un-inferable\n// prettier-ignore\nexport type PC_ANY = CurvePointCons<\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any,\n  CurvePoint<any, any>\n  >>>>>>>>>\n>;\n\nexport interface CurveLengths {\n  secretKey?: number;\n  publicKey?: number;\n  publicKeyUncompressed?: number;\n  publicKeyHasPrefix?: boolean;\n  signature?: number;\n  seed?: number;\n}\n\nexport type Mapper<T> = (i: T[]) => T[];\n\nexport function negateCt<T extends { negate: () => T }>(condition: boolean, item: T): T {\n  const neg = item.negate();\n  return condition ? neg : item;\n}\n\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  c: PC,\n  points: P[]\n): P[] {\n  const invertedZs = FpInvertBatch(\n    c.Fp,\n    points.map((p) => p.Z!)\n  );\n  return points.map((p, i) => c.fromAffine(p.toAffine(invertedZs[i])));\n}\n\nfunction validateW(W: number, bits: number) {\n  if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n    throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\n\n/** Internal wNAF opts for specific W and scalarBits */\ntype WOpts = {\n  windows: number;\n  windowSize: number;\n  mask: bigint;\n  maxNumber: number;\n  shiftBy: bigint;\n};\n\nfunction calcWOpts(W: number, scalarBits: number): WOpts {\n  validateW(W, scalarBits);\n  const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n  const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n  const maxNumber = 2 ** W; // W=8 256\n  const mask = bitMask(W); // W=8 255 == mask 0b11111111\n  const shiftBy = BigInt(W); // W=8 8\n  return { windows, windowSize, mask, maxNumber, shiftBy };\n}\n\nfunction calcOffsets(n: bigint, window: number, wOpts: WOpts) {\n  const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n  let wbits = Number(n & mask); // extract W bits.\n  let nextN = n >> shiftBy; // shift number by W bits.\n\n  // What actually happens here:\n  // const highestBit = Number(mask ^ (mask >> 1n));\n  // let wbits2 = wbits - 1; // skip zero\n  // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n\n  // split if bits > max: +224 => 256-32\n  if (wbits > windowSize) {\n    // we skip zero, which means instead of `>= size-1`, we do `> size`\n    wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n    nextN += _1n; // +256 (carry)\n  }\n  const offsetStart = window * windowSize;\n  const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n  const isZero = wbits === 0; // is current window slice a 0?\n  const isNeg = wbits < 0; // is current window slice negative?\n  const isNegF = window % 2 !== 0; // fake random statement for noise\n  const offsetF = offsetStart; // fake offset for noise\n  return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\n\nfunction validateMSMPoints(points: any[], c: any) {\n  if (!Array.isArray(points)) throw new Error('array expected');\n  points.forEach((p, i) => {\n    if (!(p instanceof c)) throw new Error('invalid point at index ' + i);\n  });\n}\nfunction validateMSMScalars(scalars: any[], field: any) {\n  if (!Array.isArray(scalars)) throw new Error('array of scalars expected');\n  scalars.forEach((s, i) => {\n    if (!field.isValid(s)) throw new Error('invalid scalar at index ' + i);\n  });\n}\n\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap<any, any[]>();\nconst pointWindowSizes = new WeakMap<any, number>();\n\nfunction getW(P: any): number {\n  // To disable precomputes:\n  // return 1;\n  return pointWindowSizes.get(P) || 1;\n}\n\nfunction assert0(n: bigint): void {\n  if (n !== _0n) throw new Error('invalid wNAF');\n}\n\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Table generation takes **30MB of ram and 10ms on high-end CPU**,\n * but may take much longer on slow devices. Actual generation will happen on\n * first call of `multiply()`. By default, `BASE` point is precomputed.\n *\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport class wNAF<PC extends PC_ANY> {\n  private readonly BASE: PC_P<PC>;\n  private readonly ZERO: PC_P<PC>;\n  private readonly Fn: PC['Fn'];\n  readonly bits: number;\n\n  // Parametrized with a given Point class (not individual point)\n  constructor(Point: PC, bits: number) {\n    this.BASE = Point.BASE;\n    this.ZERO = Point.ZERO;\n    this.Fn = Point.Fn;\n    this.bits = bits;\n  }\n\n  // non-const time multiplication ladder\n  _unsafeLadder(elm: PC_P<PC>, n: bigint, p: PC_P<PC> = this.ZERO): PC_P<PC> {\n    let d: PC_P<PC> = elm;\n    while (n > _0n) {\n      if (n & _1n) p = p.add(d);\n      d = d.double();\n      n >>= _1n;\n    }\n    return p;\n  }\n\n  /**\n   * Creates a wNAF precomputation window. Used for caching.\n   * Default window size is set by `utils.precompute()` and is equal to 8.\n   * Number of precomputed points depends on the curve size:\n   * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n   * - \uD835\uDC4A is the window size\n   * - \uD835\uDC5B is the bitlength of the curve order.\n   * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n   * @param point Point instance\n   * @param W window size\n   * @returns precomputed point tables flattened to a single array\n   */\n  private precomputeWindow(point: PC_P<PC>, W: number): PC_P<PC>[] {\n    const { windows, windowSize } = calcWOpts(W, this.bits);\n    const points: PC_P<PC>[] = [];\n    let p: PC_P<PC> = point;\n    let base = p;\n    for (let window = 0; window < windows; window++) {\n      base = p;\n      points.push(base);\n      // i=1, bc we skip 0\n      for (let i = 1; i < windowSize; i++) {\n        base = base.add(p);\n        points.push(base);\n      }\n      p = base.double();\n    }\n    return points;\n  }\n\n  /**\n   * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n   * More compact implementation:\n   * https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n   * @returns real and fake (for const-time) points\n   */\n  private wNAF(W: number, precomputes: PC_P<PC>[], n: bigint): { p: PC_P<PC>; f: PC_P<PC> } {\n    // Scalar should be smaller than field order\n    if (!this.Fn.isValid(n)) throw new Error('invalid scalar');\n    // Accumulators\n    let p = this.ZERO;\n    let f = this.BASE;\n    // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n    // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n    // there is negate now: it is possible that negated element from low value\n    // would be the same as high element, which will create carry into next window.\n    // It's not obvious how this can fail, but still worth investigating later.\n    const wo = calcWOpts(W, this.bits);\n    for (let window = 0; window < wo.windows; window++) {\n      // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n      const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n      n = nextN;\n      if (isZero) {\n        // bits are 0: add garbage to fake point\n        // Important part for const-time getPublicKey: add random \"noise\" point to f.\n        f = f.add(negateCt(isNegF, precomputes[offsetF]));\n      } else {\n        // bits are 1: add to result point\n        p = p.add(negateCt(isNeg, precomputes[offset]));\n      }\n    }\n    assert0(n);\n    // Return both real and fake points: JIT won't eliminate f.\n    // At this point there is a way to F be infinity-point even if p is not,\n    // which makes it less const-time: around 1 bigint multiply.\n    return { p, f };\n  }\n\n  /**\n   * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n   * @param acc accumulator point to add result of multiplication\n   * @returns point\n   */\n  private wNAFUnsafe(\n    W: number,\n    precomputes: PC_P<PC>[],\n    n: bigint,\n    acc: PC_P<PC> = this.ZERO\n  ): PC_P<PC> {\n    const wo = calcWOpts(W, this.bits);\n    for (let window = 0; window < wo.windows; window++) {\n      if (n === _0n) break; // Early-exit, skip 0 value\n      const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n      n = nextN;\n      if (isZero) {\n        // Window bits are 0: skip processing.\n        // Move to next window.\n        continue;\n      } else {\n        const item = precomputes[offset];\n        acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n      }\n    }\n    assert0(n);\n    return acc;\n  }\n\n  private getPrecomputes(W: number, point: PC_P<PC>, transform?: Mapper<PC_P<PC>>): PC_P<PC>[] {\n    // Calculate precomputes on a first run, reuse them after\n    let comp = pointPrecomputes.get(point);\n    if (!comp) {\n      comp = this.precomputeWindow(point, W) as PC_P<PC>[];\n      if (W !== 1) {\n        // Doing transform outside of if brings 15% perf hit\n        if (typeof transform === 'function') comp = transform(comp);\n        pointPrecomputes.set(point, comp);\n      }\n    }\n    return comp;\n  }\n\n  cached(\n    point: PC_P<PC>,\n    scalar: bigint,\n    transform?: Mapper<PC_P<PC>>\n  ): { p: PC_P<PC>; f: PC_P<PC> } {\n    const W = getW(point);\n    return this.wNAF(W, this.getPrecomputes(W, point, transform), scalar);\n  }\n\n  unsafe(point: PC_P<PC>, scalar: bigint, transform?: Mapper<PC_P<PC>>, prev?: PC_P<PC>): PC_P<PC> {\n    const W = getW(point);\n    if (W === 1) return this._unsafeLadder(point, scalar, prev); // For W=1 ladder is ~x2 faster\n    return this.wNAFUnsafe(W, this.getPrecomputes(W, point, transform), scalar, prev);\n  }\n\n  // We calculate precomputes for elliptic curve point multiplication\n  // using windowed method. This specifies window size and\n  // stores precomputed values. Usually only base point would be precomputed.\n  createCache(P: PC_P<PC>, W: number): void {\n    validateW(W, this.bits);\n    pointWindowSizes.set(P, W);\n    pointPrecomputes.delete(P);\n  }\n\n  hasCache(elm: PC_P<PC>): boolean {\n    return getW(elm) !== 1;\n  }\n}\n\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  Point: PC,\n  point: P,\n  k1: bigint,\n  k2: bigint\n): { p1: P; p2: P } {\n  let acc = point;\n  let p1 = Point.ZERO;\n  let p2 = Point.ZERO;\n  while (k1 > _0n || k2 > _0n) {\n    if (k1 & _1n) p1 = p1.add(acc);\n    if (k2 & _1n) p2 = p2.add(acc);\n    acc = acc.double();\n    k1 >>= _1n;\n    k2 >>= _1n;\n  }\n  return { p1, p2 };\n}\n\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka secret keys / bigints)\n */\nexport function pippenger<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  c: PC,\n  points: P[],\n  scalars: bigint[]\n): P {\n  // If we split scalars by some window (let's say 8 bits), every chunk will only\n  // take 256 buckets even if there are 4096 scalars, also re-uses double.\n  // TODO:\n  // - https://eprint.iacr.org/2024/750.pdf\n  // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n  // 0 is accepted in scalars\n  const fieldN = c.Fn;\n  validateMSMPoints(points, c);\n  validateMSMScalars(scalars, fieldN);\n  const plength = points.length;\n  const slength = scalars.length;\n  if (plength !== slength) throw new Error('arrays of points and scalars must have equal length');\n  // if (plength === 0) throw new Error('array must be of length >= 2');\n  const zero = c.ZERO;\n  const wbits = bitLen(BigInt(plength));\n  let windowSize = 1; // bits\n  if (wbits > 12) windowSize = wbits - 3;\n  else if (wbits > 4) windowSize = wbits - 2;\n  else if (wbits > 0) windowSize = 2;\n  const MASK = bitMask(windowSize);\n  const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n  const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n  let sum = zero;\n  for (let i = lastBits; i >= 0; i -= windowSize) {\n    buckets.fill(zero);\n    for (let j = 0; j < slength; j++) {\n      const scalar = scalars[j];\n      const wbits = Number((scalar >> BigInt(i)) & MASK);\n      buckets[wbits] = buckets[wbits].add(points[j]);\n    }\n    let resI = zero; // not using this will do small speed-up, but will lose ct\n    // Skip first bucket, because it is zero\n    for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n      sumI = sumI.add(buckets[j]);\n      resI = resI.add(sumI);\n    }\n    sum = sum.add(resI);\n    if (i !== 0) for (let j = 0; j < windowSize; j++) sum = sum.double();\n  }\n  return sum as P;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe<P extends CurvePoint<any, P>, PC extends CurvePointCons<P>>(\n  c: PC,\n  points: P[],\n  windowSize: number\n): (scalars: bigint[]) => P {\n  /**\n   * Performance Analysis of Window-based Precomputation\n   *\n   * Base Case (256-bit scalar, 8-bit window):\n   * - Standard precomputation requires:\n   *   - 31 additions per scalar \u00D7 256 scalars = 7,936 ops\n   *   - Plus 255 summary additions = 8,191 total ops\n   *   Note: Summary additions can be optimized via accumulator\n   *\n   * Chunked Precomputation Analysis:\n   * - Using 32 chunks requires:\n   *   - 255 additions per chunk\n   *   - 256 doublings\n   *   - Total: (255 \u00D7 32) + 256 = 8,416 ops\n   *\n   * Memory Usage Comparison:\n   * Window Size | Standard Points | Chunked Points\n   * ------------|-----------------|---------------\n   *     4-bit   |     520         |      15\n   *     8-bit   |    4,224        |     255\n   *    10-bit   |   13,824        |   1,023\n   *    16-bit   |  557,056        |  65,535\n   *\n   * Key Advantages:\n   * 1. Enables larger window sizes due to reduced memory overhead\n   * 2. More efficient for smaller scalar counts:\n   *    - 16 chunks: (16 \u00D7 255) + 256 = 4,336 ops\n   *    - ~2x faster than standard 8,191 ops\n   *\n   * Limitations:\n   * - Not suitable for plain precomputes (requires 256 constant doublings)\n   * - Performance degrades with larger scalar counts:\n   *   - Optimal for ~256 scalars\n   *   - Less efficient for 4096+ scalars (Pippenger preferred)\n   */\n  const fieldN = c.Fn;\n  validateW(windowSize, fieldN.BITS);\n  validateMSMPoints(points, c);\n  const zero = c.ZERO;\n  const tableSize = 2 ** windowSize - 1; // table size (without zero)\n  const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n  const MASK = bitMask(windowSize);\n  const tables = points.map((p: P) => {\n    const res = [];\n    for (let i = 0, acc = p; i < tableSize; i++) {\n      res.push(acc);\n      acc = acc.add(p);\n    }\n    return res;\n  });\n  return (scalars: bigint[]): P => {\n    validateMSMScalars(scalars, fieldN);\n    if (scalars.length > points.length)\n      throw new Error('array of scalars must be smaller than array of points');\n    let res = zero;\n    for (let i = 0; i < chunks; i++) {\n      // No need to double if accumulator is still zero.\n      if (res !== zero) for (let j = 0; j < windowSize; j++) res = res.double();\n      const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n      for (let j = 0; j < scalars.length; j++) {\n        const n = scalars[j];\n        const curr = Number((n >> shiftBy) & MASK);\n        if (!curr) continue; // skip zero scalars chunks\n        res = res.add(tables[j][curr - 1]);\n      }\n    }\n    return res;\n  };\n}\n\nexport type ValidCurveParams<T> = {\n  p: bigint;\n  n: bigint;\n  h: bigint;\n  a: T;\n  b?: T;\n  d?: T;\n  Gx: T;\n  Gy: T;\n};\n\nfunction createField<T>(order: bigint, field?: IField<T>, isLE?: boolean): IField<T> {\n  if (field) {\n    if (field.ORDER !== order) throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n    validateField(field);\n    return field;\n  } else {\n    return Field(order, { isLE }) as unknown as IField<T>;\n  }\n}\nexport type FpFn<T> = { Fp: IField<T>; Fn: IField<bigint> };\n\n/** Validates CURVE opts and creates fields */\nexport function createCurveFields<T>(\n  type: 'weierstrass' | 'edwards',\n  CURVE: ValidCurveParams<T>,\n  curveOpts: Partial<FpFn<T>> = {},\n  FpFnLE?: boolean\n): FpFn<T> & { CURVE: ValidCurveParams<T> } {\n  if (FpFnLE === undefined) FpFnLE = type === 'edwards';\n  if (!CURVE || typeof CURVE !== 'object') throw new Error(`expected valid ${type} CURVE object`);\n  for (const p of ['p', 'n', 'h'] as const) {\n    const val = CURVE[p];\n    if (!(typeof val === 'bigint' && val > _0n))\n      throw new Error(`CURVE.${p} must be positive bigint`);\n  }\n  const Fp = createField(CURVE.p, curveOpts.Fp, FpFnLE);\n  const Fn = createField(CURVE.n, curveOpts.Fn, FpFnLE);\n  const _b: 'b' | 'd' = type === 'weierstrass' ? 'b' : 'd';\n  const params = ['Gx', 'Gy', 'a', _b] as const;\n  for (const p of params) {\n    // @ts-ignore\n    if (!Fp.isValid(CURVE[p]))\n      throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n  }\n  CURVE = Object.freeze(Object.assign({}, CURVE));\n  return { CURVE, Fp, Fn };\n}\n\ntype KeygenFn = (\n  seed?: Uint8Array,\n  isCompressed?: boolean\n) => { secretKey: Uint8Array; publicKey: Uint8Array };\nexport function createKeygen(\n  randomSecretKey: Function,\n  getPublicKey: Signer['getPublicKey']\n): KeygenFn {\n  return function keygen(seed?: Uint8Array) {\n    const secretKey = randomSecretKey(seed);\n    return { secretKey, publicKey: getPublicKey(secretKey) };\n  };\n}\n", "/**\n * Twisted Edwards curve. The formula is: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2.\n * For design rationale of types / exports, see weierstrass module documentation.\n * Untwisted Edwards curves exist, but they aren't used in real-world protocols.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  abool,\n  abytes,\n  aInRange,\n  bytesToHex,\n  bytesToNumberLE,\n  concatBytes,\n  copyBytes,\n  hexToBytes,\n  isBytes,\n  memoized,\n  notImplemented,\n  validateObject,\n  randomBytes as wcRandomBytes,\n  type FHash,\n  type Signer,\n} from '../utils.ts';\nimport {\n  createCurveFields,\n  createKeygen,\n  normalizeZ,\n  wNAF,\n  type AffinePoint,\n  type CurveLengths,\n  type CurvePoint,\n  type CurvePointCons,\n} from './curve.ts';\nimport { type IField } from './modular.ts';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n\n/** Instance of Extended Point with coordinates in X, Y, Z, T. */\nexport interface EdwardsPoint extends CurvePoint<bigint, EdwardsPoint> {\n  /** extended X coordinate. Different from affine x. */\n  readonly X: bigint;\n  /** extended Y coordinate. Different from affine y. */\n  readonly Y: bigint;\n  /** extended Z coordinate */\n  readonly Z: bigint;\n  /** extended T coordinate */\n  readonly T: bigint;\n}\n/** Static methods of Extended Point with coordinates in X, Y, Z, T. */\nexport interface EdwardsPointCons extends CurvePointCons<EdwardsPoint> {\n  new (X: bigint, Y: bigint, Z: bigint, T: bigint): EdwardsPoint;\n  CURVE(): EdwardsOpts;\n  fromBytes(bytes: Uint8Array, zip215?: boolean): EdwardsPoint;\n  fromHex(hex: string, zip215?: boolean): EdwardsPoint;\n}\n\n/**\n * Twisted Edwards curve options.\n *\n * * a: formula param\n * * d: formula param\n * * p: prime characteristic (order) of finite field, in which arithmetics is done\n * * n: order of prime subgroup a.k.a total amount of valid curve points\n * * h: cofactor. h*n is group order; n is subgroup order\n * * Gx: x coordinate of generator point a.k.a. base point\n * * Gy: y coordinate of generator point\n */\nexport type EdwardsOpts = Readonly<{\n  p: bigint;\n  n: bigint;\n  h: bigint;\n  a: bigint;\n  d: bigint;\n  Gx: bigint;\n  Gy: bigint;\n}>;\n\n/**\n * Extra curve options for Twisted Edwards.\n *\n * * Fp: redefined Field over curve.p\n * * Fn: redefined Field over curve.n\n * * uvRatio: helper function for decompression, calculating \u221A(u/v)\n */\nexport type EdwardsExtraOpts = Partial<{\n  Fp: IField<bigint>;\n  Fn: IField<bigint>;\n  FpFnLE: boolean;\n  uvRatio: (u: bigint, v: bigint) => { isValid: boolean; value: bigint };\n}>;\n\n/**\n * EdDSA (Edwards Digital Signature algorithm) options.\n *\n * * hash: hash function used to hash secret keys and messages\n * * adjustScalarBytes: clears bits to get valid field element\n * * domain: Used for hashing\n * * mapToCurve: for hash-to-curve standard\n * * prehash: RFC 8032 pre-hashing of messages to sign() / verify()\n * * randomBytes: function generating random bytes, used for randomSecretKey\n */\nexport type EdDSAOpts = Partial<{\n  adjustScalarBytes: (bytes: Uint8Array) => Uint8Array;\n  domain: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array;\n  mapToCurve: (scalar: bigint[]) => AffinePoint<bigint>;\n  prehash: FHash;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n}>;\n\n/**\n * EdDSA (Edwards Digital Signature algorithm) interface.\n *\n * Allows to create and verify signatures, create public and secret keys.\n */\nexport interface EdDSA {\n  keygen: (seed?: Uint8Array) => { secretKey: Uint8Array; publicKey: Uint8Array };\n  getPublicKey: (secretKey: Uint8Array) => Uint8Array;\n  sign: (\n    message: Uint8Array,\n    secretKey: Uint8Array,\n    options?: { context?: Uint8Array }\n  ) => Uint8Array;\n  verify: (\n    sig: Uint8Array,\n    message: Uint8Array,\n    publicKey: Uint8Array,\n    options?: { context?: Uint8Array; zip215: boolean }\n  ) => boolean;\n  Point: EdwardsPointCons;\n  utils: {\n    randomSecretKey: (seed?: Uint8Array) => Uint8Array;\n    isValidSecretKey: (secretKey: Uint8Array) => boolean;\n    isValidPublicKey: (publicKey: Uint8Array, zip215?: boolean) => boolean;\n\n    /**\n     * Converts ed public key to x public key.\n     *\n     * There is NO `fromMontgomery`:\n     * - There are 2 valid ed25519 points for every x25519, with flipped coordinate\n     * - Sometimes there are 0 valid ed25519 points, because x25519 *additionally*\n     *   accepts inputs on the quadratic twist, which can't be moved to ed25519\n     *\n     * @example\n     * ```js\n     * const someonesPub_ed = ed25519.getPublicKey(ed25519.utils.randomSecretKey());\n     * const someonesPub = ed25519.utils.toMontgomery(someonesPub);\n     * const aPriv = x25519.utils.randomSecretKey();\n     * const shared = x25519.getSharedSecret(aPriv, someonesPub)\n     * ```\n     */\n    toMontgomery: (publicKey: Uint8Array) => Uint8Array;\n    /**\n     * Converts ed secret key to x secret key.\n     * @example\n     * ```js\n     * const someonesPub = x25519.getPublicKey(x25519.utils.randomSecretKey());\n     * const aPriv_ed = ed25519.utils.randomSecretKey();\n     * const aPriv = ed25519.utils.toMontgomerySecret(aPriv_ed);\n     * const shared = x25519.getSharedSecret(aPriv, someonesPub)\n     * ```\n     */\n    toMontgomerySecret: (secretKey: Uint8Array) => Uint8Array;\n    getExtendedPublicKey: (key: Uint8Array) => {\n      head: Uint8Array;\n      prefix: Uint8Array;\n      scalar: bigint;\n      point: EdwardsPoint;\n      pointBytes: Uint8Array;\n    };\n  };\n  lengths: CurveLengths;\n}\n\nfunction isEdValidXY(Fp: IField<bigint>, CURVE: EdwardsOpts, x: bigint, y: bigint): boolean {\n  const x2 = Fp.sqr(x);\n  const y2 = Fp.sqr(y);\n  const left = Fp.add(Fp.mul(CURVE.a, x2), y2);\n  const right = Fp.add(Fp.ONE, Fp.mul(CURVE.d, Fp.mul(x2, y2)));\n  return Fp.eql(left, right);\n}\n\nexport function edwards(params: EdwardsOpts, extraOpts: EdwardsExtraOpts = {}): EdwardsPointCons {\n  const validated = createCurveFields('edwards', params, extraOpts, extraOpts.FpFnLE);\n  const { Fp, Fn } = validated;\n  let CURVE = validated.CURVE as EdwardsOpts;\n  const { h: cofactor } = CURVE;\n  validateObject(extraOpts, {}, { uvRatio: 'function' });\n\n  // Important:\n  // There are some places where Fp.BYTES is used instead of nByteLength.\n  // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n  // TODO: test and find curves which behave otherwise.\n  const MASK = _2n << (BigInt(Fn.BYTES * 8) - _1n);\n  const modP = (n: bigint) => Fp.create(n); // Function overrides\n\n  // sqrt(u/v)\n  const uvRatio =\n    extraOpts.uvRatio ||\n    ((u: bigint, v: bigint) => {\n      try {\n        return { isValid: true, value: Fp.sqrt(Fp.div(u, v)) };\n      } catch (e) {\n        return { isValid: false, value: _0n };\n      }\n    });\n\n  // Validate whether the passed curve params are valid.\n  // equation ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2 should work for generator point.\n  if (!isEdValidXY(Fp, CURVE, CURVE.Gx, CURVE.Gy))\n    throw new Error('bad curve params: generator point');\n\n  /**\n   * Asserts coordinate is valid: 0 <= n < MASK.\n   * Coordinates >= Fp.ORDER are allowed for zip215.\n   */\n  function acoord(title: string, n: bigint, banZero = false) {\n    const min = banZero ? _1n : _0n;\n    aInRange('coordinate ' + title, n, min, MASK);\n    return n;\n  }\n\n  function aedpoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('EdwardsPoint expected');\n  }\n  // Converts Extended point to default (x, y) coordinates.\n  // Can accept precomputed Z^-1 - for example, from invertBatch.\n  const toAffineMemo = memoized((p: Point, iz?: bigint): AffinePoint<bigint> => {\n    const { X, Y, Z } = p;\n    const is0 = p.is0();\n    if (iz == null) iz = is0 ? _8n : (Fp.inv(Z) as bigint); // 8 was chosen arbitrarily\n    const x = modP(X * iz);\n    const y = modP(Y * iz);\n    const zz = Fp.mul(Z, iz);\n    if (is0) return { x: _0n, y: _1n };\n    if (zz !== _1n) throw new Error('invZ was invalid');\n    return { x, y };\n  });\n  const assertValidMemo = memoized((p: Point) => {\n    const { a, d } = CURVE;\n    if (p.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n    // Equation in affine coordinates: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2\n    // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX\u00B2 + Y\u00B2)Z\u00B2 = Z\u2074 + dX\u00B2Y\u00B2\n    const { X, Y, Z, T } = p;\n    const X2 = modP(X * X); // X\u00B2\n    const Y2 = modP(Y * Y); // Y\u00B2\n    const Z2 = modP(Z * Z); // Z\u00B2\n    const Z4 = modP(Z2 * Z2); // Z\u2074\n    const aX2 = modP(X2 * a); // aX\u00B2\n    const left = modP(Z2 * modP(aX2 + Y2)); // (aX\u00B2 + Y\u00B2)Z\u00B2\n    const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z\u2074 + dX\u00B2Y\u00B2\n    if (left !== right) throw new Error('bad point: equation left != right (1)');\n    // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n    const XY = modP(X * Y);\n    const ZT = modP(Z * T);\n    if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    return true;\n  });\n\n  // Extended Point works in extended coordinates: (X, Y, Z, T) \u220B (x=X/Z, y=Y/Z, T=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point implements EdwardsPoint {\n    // base / generator point\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    // zero / infinity / identity point\n    static readonly ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    // math field\n    static readonly Fp = Fp;\n    // scalar field\n    static readonly Fn = Fn;\n\n    readonly X: bigint;\n    readonly Y: bigint;\n    readonly Z: bigint;\n    readonly T: bigint;\n\n    constructor(X: bigint, Y: bigint, Z: bigint, T: bigint) {\n      this.X = acoord('x', X);\n      this.Y = acoord('y', Y);\n      this.Z = acoord('z', Z, true);\n      this.T = acoord('t', T);\n      Object.freeze(this);\n    }\n\n    static CURVE(): EdwardsOpts {\n      return CURVE;\n    }\n\n    static fromAffine(p: AffinePoint<bigint>): Point {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const { x, y } = p || {};\n      acoord('x', x);\n      acoord('y', y);\n      return new Point(x, y, _1n, modP(x * y));\n    }\n\n    // Uses algo from RFC8032 5.1.3.\n    static fromBytes(bytes: Uint8Array, zip215 = false): Point {\n      const len = Fp.BYTES;\n      const { a, d } = CURVE;\n      bytes = copyBytes(abytes(bytes, len, 'point'));\n      abool(zip215, 'zip215');\n      const normed = copyBytes(bytes); // copy again, we'll manipulate it\n      const lastByte = bytes[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = bytesToNumberLE(normed);\n\n      // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n      // RFC8032 prohibits >= p, but ZIP215 doesn't\n      // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n      // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n      const max = zip215 ? MASK : Fp.ORDER;\n      aInRange('point.y', y, _0n, max);\n\n      // Ed25519: x\u00B2 = (y\u00B2-1)/(dy\u00B2+1) mod p. Ed448: x\u00B2 = (y\u00B2-1)/(dy\u00B2-1) mod p. Generic case:\n      // ax\u00B2+y\u00B2=1+dx\u00B2y\u00B2 => y\u00B2-1=dx\u00B2y\u00B2-ax\u00B2 => y\u00B2-1=x\u00B2(dy\u00B2-a) => x\u00B2=(y\u00B2-1)/(dy\u00B2-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y\u00B2 - 1\n      const v = modP(d * y2 - a); // v = d y\u00B2 + 1.\n      let { isValid, value: x } = uvRatio(u, v); // \u221A(u/v)\n      if (!isValid) throw new Error('bad point: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n      if (!zip215 && x === _0n && isLastByteOdd)\n        // if x=0 and x_0 = 1, fail\n        throw new Error('bad point: x=0 and x_0=1');\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({ x, y });\n    }\n\n    static fromHex(hex: string, zip215 = false): Point {\n      return Point.fromBytes(hexToBytes(hex), zip215);\n    }\n\n    get x(): bigint {\n      return this.toAffine().x;\n    }\n    get y(): bigint {\n      return this.toAffine().y;\n    }\n\n    precompute(windowSize: number = 8, isLazy = true) {\n      wnaf.createCache(this, windowSize);\n      if (!isLazy) this.multiply(_2n); // random number\n      return this;\n    }\n\n    // Useful in fromAffine() - not for fromBytes(), which always created valid points.\n    assertValidity(): void {\n      assertValidMemo(this);\n    }\n\n    // Compare one point to another.\n    equals(other: Point): boolean {\n      aedpoint(other);\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      const { X: X2, Y: Y2, Z: Z2 } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n\n    is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    negate(): Point {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.X), this.Y, this.Z, modP(-this.T));\n    }\n\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double(): Point {\n      const { a } = CURVE;\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other: Point) {\n      aedpoint(other);\n      const { a, d } = CURVE;\n      const { X: X1, Y: Y1, Z: Z1, T: T1 } = this;\n      const { X: X2, Y: Y2, Z: Z2, T: T2 } = other;\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    subtract(other: Point): Point {\n      return this.add(other.negate());\n    }\n\n    // Constant-time multiplication.\n    multiply(scalar: bigint): Point {\n      // 1 <= scalar < L\n      if (!Fn.isValidNot0(scalar)) throw new Error('invalid scalar: expected 1 <= sc < curve.n');\n      const { p, f } = wnaf.cached(this, scalar, (p) => normalizeZ(Point, p));\n      return normalizeZ(Point, [p, f])[0];\n    }\n\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n    multiplyUnsafe(scalar: bigint, acc = Point.ZERO): Point {\n      // 0 <= scalar < L\n      if (!Fn.isValid(scalar)) throw new Error('invalid scalar: expected 0 <= sc < curve.n');\n      if (scalar === _0n) return Point.ZERO;\n      if (this.is0() || scalar === _1n) return this;\n      return wnaf.unsafe(this, scalar, (p) => normalizeZ(Point, p), acc);\n    }\n\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder(): boolean {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree(): boolean {\n      return wnaf.unsafe(this, CURVE.n).is0();\n    }\n\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(invertedZ?: bigint): AffinePoint<bigint> {\n      return toAffineMemo(this, invertedZ);\n    }\n\n    clearCofactor(): Point {\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    toBytes(): Uint8Array {\n      const { x, y } = this.toAffine();\n      // Fp.toBytes() allows non-canonical encoding of y (>= p).\n      const bytes = Fp.toBytes(y);\n      // Each y has 2 valid points: (x, y), (x,-y).\n      // When compressing, it's enough to store y and use the last byte to encode sign of x\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0;\n      return bytes;\n    }\n    toHex(): string {\n      return bytesToHex(this.toBytes());\n    }\n\n    toString() {\n      return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n    }\n  }\n  const wnaf = new wNAF(Point, Fn.BITS);\n  Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n  return Point;\n}\n\n/**\n * Base class for prime-order points like Ristretto255 and Decaf448.\n * These points eliminate cofactor issues by representing equivalence classes\n * of Edwards curve points.\n */\nexport abstract class PrimeEdwardsPoint<T extends PrimeEdwardsPoint<T>>\n  implements CurvePoint<bigint, T>\n{\n  static BASE: PrimeEdwardsPoint<any>;\n  static ZERO: PrimeEdwardsPoint<any>;\n  static Fp: IField<bigint>;\n  static Fn: IField<bigint>;\n\n  protected readonly ep: EdwardsPoint;\n\n  constructor(ep: EdwardsPoint) {\n    this.ep = ep;\n  }\n\n  // Abstract methods that must be implemented by subclasses\n  abstract toBytes(): Uint8Array;\n  abstract equals(other: T): boolean;\n\n  // Static methods that must be implemented by subclasses\n  static fromBytes(_bytes: Uint8Array): any {\n    notImplemented();\n  }\n\n  static fromHex(_hex: string): any {\n    notImplemented();\n  }\n\n  get x(): bigint {\n    return this.toAffine().x;\n  }\n  get y(): bigint {\n    return this.toAffine().y;\n  }\n\n  // Common implementations\n  clearCofactor(): T {\n    // no-op for prime-order groups\n    return this as any;\n  }\n\n  assertValidity(): void {\n    this.ep.assertValidity();\n  }\n\n  toAffine(invertedZ?: bigint): AffinePoint<bigint> {\n    return this.ep.toAffine(invertedZ);\n  }\n\n  toHex(): string {\n    return bytesToHex(this.toBytes());\n  }\n\n  toString(): string {\n    return this.toHex();\n  }\n\n  isTorsionFree(): boolean {\n    return true;\n  }\n\n  isSmallOrder(): boolean {\n    return false;\n  }\n\n  add(other: T): T {\n    this.assertSame(other);\n    return this.init(this.ep.add(other.ep));\n  }\n\n  subtract(other: T): T {\n    this.assertSame(other);\n    return this.init(this.ep.subtract(other.ep));\n  }\n\n  multiply(scalar: bigint): T {\n    return this.init(this.ep.multiply(scalar));\n  }\n\n  multiplyUnsafe(scalar: bigint): T {\n    return this.init(this.ep.multiplyUnsafe(scalar));\n  }\n\n  double(): T {\n    return this.init(this.ep.double());\n  }\n\n  negate(): T {\n    return this.init(this.ep.negate());\n  }\n\n  precompute(windowSize?: number, isLazy?: boolean): T {\n    return this.init(this.ep.precompute(windowSize, isLazy));\n  }\n\n  // Helper methods\n  abstract is0(): boolean;\n  protected abstract assertSame(other: T): void;\n  protected abstract init(ep: EdwardsPoint): T;\n}\n\n/**\n * Initializes EdDSA signatures over given Edwards curve.\n */\nexport function eddsa(Point: EdwardsPointCons, cHash: FHash, eddsaOpts: EdDSAOpts = {}): EdDSA {\n  if (typeof cHash !== 'function') throw new Error('\"hash\" function param is required');\n  validateObject(\n    eddsaOpts,\n    {},\n    {\n      adjustScalarBytes: 'function',\n      randomBytes: 'function',\n      domain: 'function',\n      prehash: 'function',\n      mapToCurve: 'function',\n    }\n  );\n\n  const { prehash } = eddsaOpts;\n  const { BASE, Fp, Fn } = Point;\n\n  const randomBytes = eddsaOpts.randomBytes || wcRandomBytes;\n  const adjustScalarBytes = eddsaOpts.adjustScalarBytes || ((bytes: Uint8Array) => bytes);\n  const domain =\n    eddsaOpts.domain ||\n    ((data: Uint8Array, ctx: Uint8Array, phflag: boolean) => {\n      abool(phflag, 'phflag');\n      if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n      return data;\n    }); // NOOP\n\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash: Uint8Array): bigint {\n    return Fn.create(bytesToNumberLE(hash)); // Not Fn.fromBytes: it has length limit\n  }\n\n  // Get the hashed private scalar per RFC8032 5.1.5\n  function getPrivateScalar(key: Uint8Array) {\n    const len = lengths.secretKey;\n    abytes(key, lengths.secretKey, 'secretKey');\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = abytes(cHash(key), 2 * len, 'hashedSecretKey');\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    return { head, prefix, scalar };\n  }\n\n  /** Convenience method that creates public key from scalar. RFC8032 5.1.5 */\n  function getExtendedPublicKey(secretKey: Uint8Array) {\n    const { head, prefix, scalar } = getPrivateScalar(secretKey);\n    const point = BASE.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toBytes();\n    return { head, prefix, scalar, point, pointBytes };\n  }\n\n  /** Calculates EdDSA pub key. RFC8032 5.1.5. */\n  function getPublicKey(secretKey: Uint8Array): Uint8Array {\n    return getExtendedPublicKey(secretKey).pointBytes;\n  }\n\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context: Uint8Array = Uint8Array.of(), ...msgs: Uint8Array[]) {\n    const msg = concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, abytes(context, undefined, 'context'), !!prehash)));\n  }\n\n  /** Signs message with secret key. RFC8032 5.1.6 */\n  function sign(\n    msg: Uint8Array,\n    secretKey: Uint8Array,\n    options: { context?: Uint8Array } = {}\n  ): Uint8Array {\n    msg = abytes(msg, undefined, 'message');\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const { prefix, scalar, pointBytes } = getExtendedPublicKey(secretKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = BASE.multiply(r).toBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = Fn.create(r + k * scalar); // S = (r + k * s) mod L\n    if (!Fn.isValid(s)) throw new Error('sign failed: invalid s'); // 0 <= s < L\n    const rs = concatBytes(R, Fn.toBytes(s));\n    return abytes(rs, lengths.signature, 'result');\n  }\n\n  // verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\n  const verifyOpts: { context?: Uint8Array; zip215?: boolean } = { zip215: true };\n\n  /**\n   * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n   * An extended group equation is checked.\n   */\n  function verify(\n    sig: Uint8Array,\n    msg: Uint8Array,\n    publicKey: Uint8Array,\n    options = verifyOpts\n  ): boolean {\n    const { context, zip215 } = options;\n    const len = lengths.signature;\n    sig = abytes(sig, len, 'signature');\n    msg = abytes(msg, undefined, 'message');\n    publicKey = abytes(publicKey, lengths.publicKey, 'publicKey');\n    if (zip215 !== undefined) abool(zip215, 'zip215');\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n\n    const mid = len / 2;\n    const r = sig.subarray(0, mid);\n    const s = bytesToNumberLE(sig.subarray(mid, len));\n    let A, R, SB;\n    try {\n      // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n      // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n      // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n      A = Point.fromBytes(publicKey, zip215);\n      R = Point.fromBytes(r, zip215);\n      SB = BASE.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n    if (!zip215 && A.isSmallOrder()) return false; // zip215 allows public keys of small order\n\n    const k = hashDomainToScalar(context, R.toBytes(), A.toBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // Extended group equation\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().is0();\n  }\n\n  const _size = Fp.BYTES; // 32 for ed25519, 57 for ed448\n  const lengths = {\n    secretKey: _size,\n    publicKey: _size,\n    signature: 2 * _size,\n    seed: _size,\n  };\n  function randomSecretKey(seed = randomBytes(lengths.seed)): Uint8Array {\n    return abytes(seed, lengths.seed, 'seed');\n  }\n\n  function isValidSecretKey(key: Uint8Array): boolean {\n    return isBytes(key) && key.length === Fn.BYTES;\n  }\n\n  function isValidPublicKey(key: Uint8Array, zip215?: boolean): boolean {\n    try {\n      return !!Point.fromBytes(key, zip215);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  const utils = {\n    getExtendedPublicKey,\n    randomSecretKey,\n    isValidSecretKey,\n    isValidPublicKey,\n    /**\n     * Converts ed public key to x public key. Uses formula:\n     * - ed25519:\n     *   - `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n     *   - `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n     * - ed448:\n     *   - `(u, v) = ((y-1)/(y+1), sqrt(156324)*u/x)`\n     *   - `(x, y) = (sqrt(156324)*u/v, (1+u)/(1-u))`\n     */\n    toMontgomery(publicKey: Uint8Array): Uint8Array {\n      const { y } = Point.fromBytes(publicKey);\n      const size = lengths.publicKey;\n      const is25519 = size === 32;\n      if (!is25519 && size !== 57) throw new Error('only defined for 25519 and 448');\n      const u = is25519 ? Fp.div(_1n + y, _1n - y) : Fp.div(y - _1n, y + _1n);\n      return Fp.toBytes(u);\n    },\n    toMontgomerySecret(secretKey: Uint8Array): Uint8Array {\n      const size = lengths.secretKey;\n      abytes(secretKey, size);\n      const hashed = cHash(secretKey.subarray(0, size));\n      return adjustScalarBytes(hashed).subarray(0, size);\n    },\n  };\n\n  return Object.freeze({\n    keygen: createKeygen(randomSecretKey, getPublicKey),\n    getPublicKey,\n    sign,\n    verify,\n    utils,\n    Point,\n    lengths,\n  }) satisfies Signer;\n}\n", "/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  abytes,\n  aInRange,\n  bytesToNumberLE,\n  copyBytes,\n  numberToBytesLE,\n  randomBytes,\n  validateObject,\n  type CryptoKeys,\n} from '../utils.ts';\nimport { createKeygen, type CurveLengths } from './curve.ts';\nimport { mod } from './modular.ts';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\n\nexport type MontgomeryOpts = {\n  P: bigint; // finite field prime\n  type: 'x25519' | 'x448';\n  adjustScalarBytes: (bytes: Uint8Array) => Uint8Array;\n  powPminus2: (x: bigint) => bigint;\n  randomBytes?: (bytesLength?: number) => Uint8Array;\n};\n\nexport type MontgomeryECDH = {\n  scalarMult: (scalar: Uint8Array, u: Uint8Array) => Uint8Array;\n  scalarMultBase: (scalar: Uint8Array) => Uint8Array;\n  getSharedSecret: (secretKeyA: Uint8Array, publicKeyB: Uint8Array) => Uint8Array;\n  getPublicKey: (secretKey: Uint8Array) => Uint8Array;\n  utils: {\n    randomSecretKey: () => Uint8Array;\n  };\n  GuBytes: Uint8Array;\n  lengths: CurveLengths;\n  keygen: (seed?: Uint8Array) => { secretKey: Uint8Array; publicKey: Uint8Array };\n};\n\nfunction validateOpts(curve: MontgomeryOpts) {\n  validateObject(curve, {\n    adjustScalarBytes: 'function',\n    powPminus2: 'function',\n  });\n  return Object.freeze({ ...curve } as const);\n}\n\nexport function montgomery(curveDef: MontgomeryOpts): MontgomeryECDH {\n  const CURVE = validateOpts(curveDef);\n  const { P, type, adjustScalarBytes, powPminus2, randomBytes: rand } = CURVE;\n  const is25519 = type === 'x25519';\n  if (!is25519 && type !== 'x448') throw new Error('invalid type');\n  const randomBytes_ = rand || randomBytes;\n\n  const montgomeryBits = is25519 ? 255 : 448;\n  const fieldLen = is25519 ? 32 : 56;\n  const Gu = is25519 ? BigInt(9) : BigInt(5);\n  // RFC 7748 #5:\n  // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519 and\n  // (156326 - 2) / 4 = 39081 for curve448/X448\n  // const a = is25519 ? 156326n : 486662n;\n  const a24 = is25519 ? BigInt(121665) : BigInt(39081);\n  // RFC: x25519 \"the resulting integer is of the form 2^254 plus\n  // eight times a value between 0 and 2^251 - 1 (inclusive)\"\n  // x448: \"2^447 plus four times a value between 0 and 2^445 - 1 (inclusive)\"\n  const minScalar = is25519 ? _2n ** BigInt(254) : _2n ** BigInt(447);\n  const maxAdded = is25519\n    ? BigInt(8) * _2n ** BigInt(251) - _1n\n    : BigInt(4) * _2n ** BigInt(445) - _1n;\n  const maxScalar = minScalar + maxAdded + _1n; // (inclusive)\n  const modP = (n: bigint) => mod(n, P);\n  const GuBytes = encodeU(Gu);\n  function encodeU(u: bigint): Uint8Array {\n    return numberToBytesLE(modP(u), fieldLen);\n  }\n  function decodeU(u: Uint8Array): bigint {\n    const _u = copyBytes(abytes(u, fieldLen, 'uCoordinate'));\n    // RFC: When receiving such an array, implementations of X25519\n    // (but not X448) MUST mask the most significant bit in the final byte.\n    if (is25519) _u[31] &= 127; // 0b0111_1111\n    // RFC: Implementations MUST accept non-canonical values and process them as\n    // if they had been reduced modulo the field prime.  The non-canonical\n    // values are 2^255 - 19 through 2^255 - 1 for X25519 and 2^448 - 2^224\n    // - 1 through 2^448 - 1 for X448.\n    return modP(bytesToNumberLE(_u));\n  }\n  function decodeScalar(scalar: Uint8Array): bigint {\n    return bytesToNumberLE(adjustScalarBytes(copyBytes(abytes(scalar, fieldLen, 'scalar'))));\n  }\n  function scalarMult(scalar: Uint8Array, u: Uint8Array): Uint8Array {\n    const pu = montgomeryLadder(decodeU(u), decodeScalar(scalar));\n    // Some public keys are useless, of low-order. Curve author doesn't think\n    // it needs to be validated, but we do it nonetheless.\n    // https://cr.yp.to/ecdh.html#validate\n    if (pu === _0n) throw new Error('invalid private or public key received');\n    return encodeU(pu);\n  }\n  // Computes public key from private. By doing scalar multiplication of base point.\n  function scalarMultBase(scalar: Uint8Array): Uint8Array {\n    return scalarMult(scalar, GuBytes);\n  }\n  const getPublicKey = scalarMultBase;\n  const getSharedSecret = scalarMult;\n\n  // cswap from RFC7748 \"example code\"\n  function cswap(swap: bigint, x_2: bigint, x_3: bigint): { x_2: bigint; x_3: bigint } {\n    // dummy = mask(swap) AND (x_2 XOR x_3)\n    // Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n    // and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    const dummy = modP(swap * (x_2 - x_3));\n    x_2 = modP(x_2 - dummy); // x_2 = x_2 XOR dummy\n    x_3 = modP(x_3 + dummy); // x_3 = x_3 XOR dummy\n    return { x_2, x_3 };\n  }\n\n  /**\n   * Montgomery x-only multiplication ladder.\n   * @param pointU u coordinate (x) on Montgomery Curve 25519\n   * @param scalar by which the point would be multiplied\n   * @returns new Point on Montgomery curve\n   */\n  function montgomeryLadder(u: bigint, scalar: bigint): bigint {\n    aInRange('u', u, _0n, P);\n    aInRange('scalar', scalar, minScalar, maxScalar);\n    const k = scalar;\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n      const k_t = (k >> t) & _1n;\n      swap ^= k_t;\n      ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n      ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n      swap = k_t;\n\n      const A = x_2 + z_2;\n      const AA = modP(A * A);\n      const B = x_2 - z_2;\n      const BB = modP(B * B);\n      const E = AA - BB;\n      const C = x_3 + z_3;\n      const D = x_3 - z_3;\n      const DA = modP(D * A);\n      const CB = modP(C * B);\n      const dacb = DA + CB;\n      const da_cb = DA - CB;\n      x_3 = modP(dacb * dacb);\n      z_3 = modP(x_1 * modP(da_cb * da_cb));\n      x_2 = modP(AA * BB);\n      z_2 = modP(E * (AA + modP(a24 * E)));\n    }\n    ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n    ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n    const z2 = powPminus2(z_2); // `Fp.pow(x, P - _2n)` is much slower equivalent\n    return modP(x_2 * z2); // Return x_2 * (z_2^(p - 2))\n  }\n  const lengths = {\n    secretKey: fieldLen,\n    publicKey: fieldLen,\n    seed: fieldLen,\n  };\n  const randomSecretKey = (seed = randomBytes_(fieldLen)) => {\n    abytes(seed, lengths.seed, 'seed');\n    return seed;\n  };\n  const utils = { randomSecretKey };\n\n  return Object.freeze({\n    keygen: createKeygen(randomSecretKey, getPublicKey),\n    getSharedSecret,\n    getPublicKey,\n    scalarMult,\n    scalarMultBase,\n    utils,\n    GuBytes: GuBytes.slice(),\n    lengths,\n  }) satisfies CryptoKeys;\n}\n", "/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha2.js';\nimport { abytes, concatBytes, hexToBytes } from '@noble/hashes/utils.js';\nimport { type AffinePoint } from './abstract/curve.ts';\nimport {\n  eddsa,\n  edwards,\n  PrimeEdwardsPoint,\n  type EdDSA,\n  type EdDSAOpts,\n  type EdwardsOpts,\n  type EdwardsPoint,\n  type EdwardsPointCons,\n} from './abstract/edwards.ts';\nimport {\n  _DST_scalar,\n  createHasher,\n  expand_message_xmd,\n  type H2CDSTOpts,\n  type H2CHasher,\n  type H2CHasherBase,\n} from './abstract/hash-to-curve.ts';\nimport {\n  FpInvertBatch,\n  FpSqrtEven,\n  isNegativeLE,\n  mod,\n  pow2,\n  type IField,\n} from './abstract/modular.ts';\nimport { montgomery, type MontgomeryECDH } from './abstract/montgomery.ts';\nimport { createORPF, type OPRF } from './abstract/oprf.ts';\nimport { asciiToBytes, bytesToNumberLE, equalBytes } from './utils.ts';\n\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\n\n// P = 2n**255n - 19n\nconst ed25519_CURVE_p = BigInt(\n  '0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed'\n);\n// N = 2n**252n + 27742317777372353535851937790883648493n\n// a = Fp.create(BigInt(-1))\n// d = -121665/121666 a.k.a. Fp.neg(121665 * Fp.inv(121666))\nconst ed25519_CURVE: EdwardsOpts = /* @__PURE__ */ (() => ({\n  p: ed25519_CURVE_p,\n  n: BigInt('0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed'),\n  h: _8n,\n  a: BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec'),\n  d: BigInt('0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3'),\n  Gx: BigInt('0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'),\n  Gy: BigInt('0x6666666666666666666666666666666666666666666666666666666666666658'),\n}))();\n\nfunction ed25519_pow_2_252_3(x: bigint) {\n  // prettier-ignore\n  const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n  const P = ed25519_CURVE_p;\n  const x2 = (x * x) % P;\n  const b2 = (x2 * x) % P; // x^3, 11\n  const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n  const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n  const b10 = (pow2(b5, _5n, P) * b5) % P;\n  const b20 = (pow2(b10, _10n, P) * b10) % P;\n  const b40 = (pow2(b20, _20n, P) * b20) % P;\n  const b80 = (pow2(b40, _40n, P) * b40) % P;\n  const b160 = (pow2(b80, _80n, P) * b80) % P;\n  const b240 = (pow2(b160, _80n, P) * b80) % P;\n  const b250 = (pow2(b240, _10n, P) * b10) % P;\n  const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return { pow_p_5_8, b2 };\n}\n\nfunction adjustScalarBytes(bytes: Uint8Array): Uint8Array {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\n// Fp.sqrt(Fp.neg(1))\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n// sqrt(u/v)\nfunction uvRatio(u: bigint, v: bigint): { isValid: boolean; value: bigint } {\n  const P = ed25519_CURVE_p;\n  const v3 = mod(v * v * v, P); // v\u00B3\n  const v7 = mod(v3 * v3 * v, P); // v\u2077\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv\u00B3)(uv\u2077)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx\u00B2\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx\u00B2 = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx\u00B2 = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx\u00B2 = -u\u221A(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return { isValid: useRoot1 || useRoot2, value: x };\n}\n\nconst ed25519_Point = /* @__PURE__ */ edwards(ed25519_CURVE, { uvRatio });\nconst Fp = /* @__PURE__ */ (() => ed25519_Point.Fp)();\nconst Fn = /* @__PURE__ */ (() => ed25519_Point.Fn)();\n\nfunction ed25519_domain(data: Uint8Array, ctx: Uint8Array, phflag: boolean) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(\n    asciiToBytes('SigEd25519 no Ed25519 collisions'),\n    new Uint8Array([phflag ? 1 : 0, ctx.length]),\n    ctx,\n    data\n  );\n}\n\nfunction ed(opts: EdDSAOpts) {\n  return eddsa(ed25519_Point, sha512, Object.assign({ adjustScalarBytes }, opts));\n}\n\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * ```js\n * import { ed25519 } from '@noble/curves/ed25519.js';\n * const { secretKey, publicKey } = ed25519.keygen();\n * // const publicKey = ed25519.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello noble');\n * const sig = ed25519.sign(msg, secretKey);\n * const isValid = ed25519.verify(sig, msg, pub); // ZIP215\n * // RFC8032 / FIPS 186-5\n * const isValid2 = ed25519.verify(sig, msg, pub, { zip215: false });\n * ```\n */\nexport const ed25519: EdDSA = /* @__PURE__ */ ed({});\n/** Context version of ed25519 (ctx for domain separation). See {@link ed25519} */\nexport const ed25519ctx: EdDSA = /* @__PURE__ */ ed({ domain: ed25519_domain });\n/** Prehashed version of ed25519. See {@link ed25519} */\nexport const ed25519ph: EdDSA = /* @__PURE__ */ ed({ domain: ed25519_domain, prehash: sha512 });\n\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * ```js\n * import { x25519 } from '@noble/curves/ed25519.js';\n * const alice = x25519.keygen();\n * const bob = x25519.keygen();\n * const shared = x25519.getSharedSecret(alice.secretKey, bob.publicKey);\n * ```\n */\nexport const x25519: MontgomeryECDH = /* @__PURE__ */ (() => {\n  const P = ed25519_CURVE_p;\n  return montgomery({\n    P,\n    type: 'x25519',\n    powPminus2: (x: bigint): bigint => {\n      // x^(p-2) aka x^(2^255-21)\n      const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n      return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n  });\n})();\n\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (ed25519_CURVE_p + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n\n/**\n * RFC 9380 method `map_to_curve_elligator2_curve25519`. Experimental name: may be renamed later.\n * @private\n */\n// prettier-ignore\nexport function _map_to_curve_elligator2_curve25519(u: bigint): {\n  xMn: bigint, xMd: bigint, yMn: bigint, yMd: bigint\n} {\n  const ELL2_C4 = (ed25519_CURVE_p - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n  const ELL2_J = BigInt(486662);\n\n  let tv1 = Fp.sqr(u);          //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n);       //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J);     //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd);         //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd);    //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J);//  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n);       //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2);       //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n);       //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd);        //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3);            //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd);       //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1);       //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3);       //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3);       //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11);            //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd);       //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1);    //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1);   //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u);     //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2);   //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1);   //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21);            //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd);       //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2);    //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1);             //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd);       //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1);    //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3);  //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd!(y);         //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\n\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u: bigint) {\n  const { xMn, xMd, yMn, yMd } = _map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n  // map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n  const [xd_inv, yd_inv] = FpInvertBatch(Fp, [xd, yd], true); // batch division\n  return { x: Fp.mul(xn, xd_inv), y: Fp.mul(yn, yd_inv) }; //  13. return (xn, xd, yn, yd)\n}\n\n/** Hashing to ed25519 points / field. RFC 9380 methods. */\nexport const ed25519_hasher: H2CHasher<EdwardsPointCons> = /* @__PURE__ */ (() =>\n  createHasher(\n    ed25519_Point,\n    (scalars: bigint[]) => map_to_curve_elligator2_edwards25519(scalars[0]),\n    {\n      DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n      encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n      p: ed25519_CURVE_p,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha512,\n    }\n  ))();\n\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// \u221A(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt(\n  '25063068953384623474111414158702152701244531502492656460079210482610430750235'\n);\n// 1 / \u221A(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt(\n  '54469307008909316920995813868745141605393597292927456921205312896311721017578'\n);\n// 1-d\u00B2\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt(\n  '1159843021668779879193775521855586647937357759715417654439879720876111806838'\n);\n// (d-1)\u00B2\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt(\n  '40440834346308536858101042469323190826248399146238708352240133220865137265952'\n);\n// Calculates 1/\u221A(number)\nconst invertSqrt = (number: bigint) => uvRatio(_1n, number);\n\nconst MAX_255B = /* @__PURE__ */ BigInt(\n  '0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n);\nconst bytes255ToNumberLE = (bytes: Uint8Array) => Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n\n/**\n * Computes Elligator map for Ristretto255.\n * Described in [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#appendix-B) and on\n * the [website](https://ristretto.group/formulas/elligator.html).\n */\nfunction calcElligatorRistrettoMap(r0: bigint): EdwardsPoint {\n  const { d } = ed25519_CURVE;\n  const P = ed25519_CURVE_p;\n  const mod = (n: bigint) => Fp.create(n);\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519_Point(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n\n/**\n * Wrapper over Edwards Point for ristretto255.\n *\n * Each ed25519/EdwardsPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like EdwardsPoint,\n * but it should work in its own namespace: do not combine those two.\n * See [RFC9496](https://www.rfc-editor.org/rfc/rfc9496).\n */\nclass _RistrettoPoint extends PrimeEdwardsPoint<_RistrettoPoint> {\n  // Do NOT change syntax: the following gymnastics is done,\n  // because typescript strips comments, which makes bundlers disable tree-shaking.\n  // prettier-ignore\n  static BASE: _RistrettoPoint =\n    /* @__PURE__ */ (() => new _RistrettoPoint(ed25519_Point.BASE))();\n  // prettier-ignore\n  static ZERO: _RistrettoPoint =\n    /* @__PURE__ */ (() => new _RistrettoPoint(ed25519_Point.ZERO))();\n  // prettier-ignore\n  static Fp: IField<bigint> =\n    /* @__PURE__ */ (() => Fp)();\n  // prettier-ignore\n  static Fn: IField<bigint> =\n    /* @__PURE__ */ (() => Fn)();\n\n  constructor(ep: EdwardsPoint) {\n    super(ep);\n  }\n\n  static fromAffine(ap: AffinePoint<bigint>): _RistrettoPoint {\n    return new _RistrettoPoint(ed25519_Point.fromAffine(ap));\n  }\n\n  protected assertSame(other: _RistrettoPoint): void {\n    if (!(other instanceof _RistrettoPoint)) throw new Error('RistrettoPoint expected');\n  }\n\n  protected init(ep: EdwardsPoint): _RistrettoPoint {\n    return new _RistrettoPoint(ep);\n  }\n\n  static fromBytes(bytes: Uint8Array): _RistrettoPoint {\n    abytes(bytes, 32);\n    const { a, d } = ed25519_CURVE;\n    const P = ed25519_CURVE_p;\n    const mod = (n: bigint) => Fp.create(n);\n    const s = bytes255ToNumberLE(bytes);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(Fp.toBytes(s), bytes) || isNegativeLE(s, P))\n      throw new Error('invalid ristretto255 encoding 1');\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n)\n      throw new Error('invalid ristretto255 encoding 2');\n    return new _RistrettoPoint(new ed25519_Point(x, y, _1n, t));\n  }\n\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-decode).\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex: string): _RistrettoPoint {\n    return _RistrettoPoint.fromBytes(hexToBytes(hex));\n  }\n\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-encode).\n   */\n  toBytes(): Uint8Array {\n    let { X, Y, Z, T } = this.ep;\n    const P = ed25519_CURVE_p;\n    const mod = (n: bigint) => Fp.create(n);\n    const u1 = mod(mod(Z + Y) * mod(Z - Y)); // 1\n    const u2 = mod(X * Y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * T); // 6\n    let D: bigint; // 7\n    if (isNegativeLE(T * zInv, P)) {\n      let _x = mod(Y * SQRT_M1);\n      let _y = mod(X * SQRT_M1);\n      X = _x;\n      Y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(X * zInv, P)) Y = mod(-Y); // 9\n    let s = mod((Z - Y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return Fp.toBytes(s); // 11\n  }\n\n  /**\n   * Compares two Ristretto points.\n   * Described in [RFC9496](https://www.rfc-editor.org/rfc/rfc9496#name-equals).\n   */\n  equals(other: _RistrettoPoint): boolean {\n    this.assertSame(other);\n    const { X: X1, Y: Y1 } = this.ep;\n    const { X: X2, Y: Y2 } = other.ep;\n    const mod = (n: bigint) => Fp.create(n);\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n\n  is0(): boolean {\n    return this.equals(_RistrettoPoint.ZERO);\n  }\n}\n\nexport const ristretto255: {\n  Point: typeof _RistrettoPoint;\n} = { Point: _RistrettoPoint };\n\n/** Hashing to ristretto255 points / field. RFC 9380 methods. */\nexport const ristretto255_hasher: H2CHasherBase<typeof _RistrettoPoint> = {\n  Point: _RistrettoPoint,\n  /**\n  * Spec: https://www.rfc-editor.org/rfc/rfc9380.html#name-hashing-to-ristretto255. Caveats:\n  * * There are no test vectors\n  * * encodeToCurve / mapToCurve is undefined\n  * * mapToCurve would be `calcElligatorRistrettoMap(scalars[0])`, not ristretto255_map!\n  * * hashToScalar is undefined too, so we just use OPRF implementation\n  * * We cannot re-use 'createHasher', because ristretto255_map is different algorithm/RFC\n    (os2ip -> bytes255ToNumberLE)\n  * * mapToCurve == calcElligatorRistrettoMap, hashToCurve == ristretto255_map\n  * * hashToScalar is undefined in RFC9380 for ristretto, we are using version from OPRF here, using bytes255ToNumblerLE will create different result if we use bytes255ToNumberLE as os2ip\n  * * current version is closest to spec.\n  */\n  hashToCurve(msg: Uint8Array, options?: H2CDSTOpts): _RistrettoPoint {\n    // == 'hash_to_ristretto255'\n    const DST = options?.DST || 'ristretto255_XMD:SHA-512_R255MAP_RO_';\n    const xmd = expand_message_xmd(msg, DST, 64, sha512);\n    // NOTE: RFC 9380 incorrectly calls this function 'ristretto255_map', in RFC 9496 map was function inside (per point)\n    // That also lead to confustion that ristretto255_map is mapToCurve (it is not! it is old hashToCurve)\n    return ristretto255_hasher.deriveToCurve!(xmd);\n  },\n  hashToScalar(msg: Uint8Array, options: H2CDSTOpts = { DST: _DST_scalar }) {\n    const xmd = expand_message_xmd(msg, options.DST, 64, sha512);\n    return Fn.create(bytesToNumberLE(xmd));\n  },\n  /**\n   * HashToCurve-like construction based on RFC 9496 (Element Derivation).\n   * Converts 64 uniform random bytes into a curve point.\n   *\n   * WARNING: This represents an older hash-to-curve construction, preceding the finalization of RFC 9380.\n   * It was later reused as a component in the newer `hash_to_ristretto255` function defined in RFC 9380.\n   */\n  deriveToCurve(bytes: Uint8Array): _RistrettoPoint {\n    // https://www.rfc-editor.org/rfc/rfc9496.html#name-element-derivation\n    abytes(bytes, 64);\n    const r1 = bytes255ToNumberLE(bytes.subarray(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(bytes.subarray(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new _RistrettoPoint(R1.add(R2));\n  },\n};\n\n/** ristretto255 OPRF, defined in RFC 9497. */\nexport const ristretto255_oprf: OPRF = /* @__PURE__ */ (() =>\n  createORPF({\n    name: 'ristretto255-SHA512',\n    Point: _RistrettoPoint,\n    hash: sha512,\n    hashToGroup: ristretto255_hasher.hashToCurve,\n    hashToScalar: ristretto255_hasher.hashToScalar,\n  }))();\n\n/**\n * Weird / bogus points, useful for debugging.\n * All 8 ed25519 points of 8-torsion subgroup can be generated from the point\n * T = `26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05`.\n * \u27E8T\u27E9 = { O, T, 2T, 3T, 4T, 5T, 6T, 7T }\n */\nexport const ED25519_TORSION_SUBGROUP: string[] = [\n  '0100000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n  '0000000000000000000000000000000000000000000000000000000000000080',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n", "/**\n * Signing a message failed\n */\nexport class SigningError extends Error {\n  constructor (message = 'An error occurred while signing a message') {\n    super(message)\n    this.name = 'SigningError'\n  }\n}\n\n/**\n * Verifying a message signature failed\n */\nexport class VerificationError extends Error {\n  constructor (message = 'An error occurred while verifying a message') {\n    super(message)\n    this.name = 'VerificationError'\n  }\n}\n\n/**\n * WebCrypto was not available in the current context\n */\nexport class WebCryptoMissingError extends Error {\n  constructor (message = 'Missing Web Crypto API') {\n    super(message)\n    this.name = 'WebCryptoMissingError'\n  }\n}\n", "/* eslint-env browser */\n\nimport { WebCryptoMissingError } from '../errors.js'\n\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexport default {\n  get (win = globalThis) {\n    const nativeCrypto = win.crypto\n\n    if (nativeCrypto?.subtle == null) {\n      throw new WebCryptoMissingError(\n        'Missing Web Crypto API. ' +\n        'The most likely cause of this error is that this page is being accessed ' +\n        'from an insecure context (i.e. not HTTPS). For more information and ' +\n        'possible resolutions see ' +\n        'https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api'\n      )\n    }\n\n    return nativeCrypto\n  }\n}\n", "import webcrypto from './webcrypto.js'\n\nexport default webcrypto\n", "import { ed25519 as ed } from '@noble/curves/ed25519.js'\nimport { toString as uint8arrayToString } from 'uint8arrays/to-string'\nimport crypto from '../../webcrypto/index.js'\nimport type { Uint8ArrayKeyPair } from '../interface.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst PUBLIC_KEY_BYTE_LENGTH = 32\nconst PRIVATE_KEY_BYTE_LENGTH = 64 // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32\n\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength }\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength }\n\n// memoize support result to skip additional awaits every time we use an ed key\nlet ed25519Supported: boolean | undefined\nconst webCryptoEd25519SupportedPromise = (async () => {\n  try {\n    await crypto.get().subtle.generateKey({ name: 'Ed25519' }, true, ['sign', 'verify'])\n    return true\n  } catch {\n    return false\n  }\n})()\n\nexport function generateKey (): Uint8ArrayKeyPair {\n  // the actual private key (32 bytes)\n  const privateKeyRaw = ed.utils.randomSecretKey()\n  const publicKey = ed.getPublicKey(privateKeyRaw)\n\n  // concatenated the public key to the private key\n  const privateKey = concatKeys(privateKeyRaw, publicKey)\n\n  return {\n    privateKey,\n    publicKey\n  }\n}\n\nexport function generateKeyFromSeed (seed: Uint8Array): Uint8ArrayKeyPair {\n  if (seed.length !== KEYS_BYTE_LENGTH) {\n    throw new TypeError('\"seed\" must be 32 bytes in length.')\n  } else if (!(seed instanceof Uint8Array)) {\n    throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.')\n  }\n\n  // based on node forges algorithm, the seed is used directly as private key\n  const privateKeyRaw = seed\n  const publicKey = ed.getPublicKey(privateKeyRaw)\n\n  const privateKey = concatKeys(privateKeyRaw, publicKey)\n\n  return {\n    privateKey,\n    publicKey\n  }\n}\n\nasync function hashAndSignWebCrypto (privateKey: Uint8Array, msg: Uint8Array | Uint8ArrayList): Promise<Uint8Array> {\n  let privateKeyRaw: Uint8Array\n  if (privateKey.length === PRIVATE_KEY_BYTE_LENGTH) {\n    privateKeyRaw = privateKey.subarray(0, 32)\n  } else {\n    privateKeyRaw = privateKey\n  }\n\n  const jwk: JsonWebKey = {\n    crv: 'Ed25519',\n    kty: 'OKP',\n    x: uint8arrayToString(privateKey.subarray(32), 'base64url'),\n    d: uint8arrayToString(privateKeyRaw, 'base64url'),\n    ext: true,\n    key_ops: ['sign']\n  }\n\n  const key = await crypto.get().subtle.importKey('jwk', jwk, { name: 'Ed25519' }, true, ['sign'])\n  const sig = await crypto.get().subtle.sign({ name: 'Ed25519' }, key, msg instanceof Uint8Array ? msg : msg.subarray())\n\n  return new Uint8Array(sig, 0, sig.byteLength)\n}\n\nexport function hashAndSignNoble (privateKey: Uint8Array, msg: Uint8Array | Uint8ArrayList): Uint8Array {\n  const privateKeyRaw = privateKey.subarray(0, KEYS_BYTE_LENGTH)\n\n  return ed.sign(msg instanceof Uint8Array ? msg : msg.subarray(), privateKeyRaw)\n}\n\nexport async function hashAndSign (privateKey: Uint8Array, msg: Uint8Array | Uint8ArrayList): Promise<Uint8Array> {\n  if (ed25519Supported == null) {\n    ed25519Supported = await webCryptoEd25519SupportedPromise\n  }\n\n  if (ed25519Supported) {\n    return hashAndSignWebCrypto(privateKey, msg)\n  }\n\n  return hashAndSignNoble(privateKey, msg)\n}\n\nasync function hashAndVerifyWebCrypto (publicKey: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): Promise<boolean> {\n  if (publicKey.buffer instanceof ArrayBuffer) {\n    const key = await crypto.get().subtle.importKey('raw', publicKey.buffer, { name: 'Ed25519' }, false, ['verify'])\n    const isValid = await crypto.get().subtle.verify({ name: 'Ed25519' }, key, sig, msg instanceof Uint8Array ? msg : msg.subarray())\n    return isValid\n  }\n\n  throw new TypeError('WebCrypto does not support SharedArrayBuffer for Ed25519 keys')\n}\n\nexport function hashAndVerifyNoble (publicKey: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): boolean {\n  return ed.verify(sig, msg instanceof Uint8Array ? msg : msg.subarray(), publicKey)\n}\n\nexport async function hashAndVerify (publicKey: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): Promise<boolean> {\n  if (ed25519Supported == null) {\n    ed25519Supported = await webCryptoEd25519SupportedPromise\n  }\n\n  if (ed25519Supported) {\n    return hashAndVerifyWebCrypto(publicKey, sig, msg)\n  }\n\n  return hashAndVerifyNoble(publicKey, sig, msg)\n}\n\nfunction concatKeys (privateKeyRaw: Uint8Array, publicKey: Uint8Array): Uint8Array {\n  const privateKey = new Uint8Array(PRIVATE_KEY_BYTE_LENGTH)\n  for (let i = 0; i < KEYS_BYTE_LENGTH; i++) {\n    privateKey[i] = privateKeyRaw[i]\n    privateKey[KEYS_BYTE_LENGTH + i] = publicKey[i]\n  }\n  return privateKey\n}\n", "import { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nexport function base64urlToBuffer (str: string, len?: number): Uint8Array {\n  let buf = uint8ArrayFromString(str, 'base64urlpad')\n\n  if (len != null) {\n    if (buf.length > len) {\n      throw new Error('byte array longer than desired length')\n    }\n\n    buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf])\n  }\n\n  return buf\n}\n\nexport function isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  if (thing == null) {\n    return false\n  }\n\n  return typeof thing.then === 'function' &&\n    typeof thing.catch === 'function' &&\n    typeof thing.finally === 'function'\n}\n", "import { base58btc } from 'multiformats/bases/base58'\nimport { CID } from 'multiformats/cid'\nimport { identity } from 'multiformats/hashes/identity'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { isPromise } from '../../util.ts'\nimport { publicKeyToProtobuf } from '../index.js'\nimport { ensureEd25519Key } from './utils.js'\nimport * as crypto from './index.js'\nimport type { Ed25519PublicKey as Ed25519PublicKeyInterface, Ed25519PrivateKey as Ed25519PrivateKeyInterface, AbortOptions } from '@libp2p/interface'\nimport type { Digest } from 'multiformats/hashes/digest'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class Ed25519PublicKey implements Ed25519PublicKeyInterface {\n  public readonly type = 'Ed25519'\n  public readonly raw: Uint8Array\n\n  constructor (key: Uint8Array) {\n    this.raw = ensureEd25519Key(key, crypto.publicKeyLength)\n  }\n\n  toMultihash (): Digest<0x0, number> {\n    return identity.digest(publicKeyToProtobuf(this))\n  }\n\n  toCID (): CID<unknown, 114, 0x0, 1> {\n    return CID.createV1(114, this.toMultihash())\n  }\n\n  toString (): string {\n    return base58btc.encode(this.toMultihash().bytes).substring(1)\n  }\n\n  equals (key?: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array, options?: AbortOptions): boolean | Promise<boolean> {\n    options?.signal?.throwIfAborted()\n    const result = crypto.hashAndVerify(this.raw, sig, data)\n\n    if (isPromise<boolean>(result)) {\n      return result.then(res => {\n        options?.signal?.throwIfAborted()\n        return res\n      })\n    }\n\n    return result\n  }\n}\n\nexport class Ed25519PrivateKey implements Ed25519PrivateKeyInterface {\n  public readonly type = 'Ed25519'\n  public readonly raw: Uint8Array\n  public readonly publicKey: Ed25519PublicKey\n\n  // key       - 64 byte Uint8Array containing private key\n  // publicKey - 32 byte Uint8Array containing public key\n  constructor (key: Uint8Array, publicKey: Uint8Array) {\n    this.raw = ensureEd25519Key(key, crypto.privateKeyLength)\n    this.publicKey = new Ed25519PublicKey(publicKey)\n  }\n\n  equals (key?: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList, options?: AbortOptions): Uint8Array | Promise<Uint8Array> {\n    options?.signal?.throwIfAborted()\n    const sig = crypto.hashAndSign(this.raw, message)\n\n    if (isPromise<Uint8Array>(sig)) {\n      return sig.then(res => {\n        options?.signal?.throwIfAborted()\n        return res\n      })\n    }\n\n    options?.signal?.throwIfAborted()\n    return sig\n  }\n}\n", "import { InvalidParametersError } from '@libp2p/interface'\nimport { Ed25519PublicKey as Ed25519PublicKeyClass, Ed25519PrivateKey as Ed25519PrivateKeyClass } from './ed25519.js'\nimport * as crypto from './index.js'\nimport type { Ed25519PublicKey, Ed25519PrivateKey } from '@libp2p/interface'\n\nexport function unmarshalEd25519PrivateKey (bytes: Uint8Array): Ed25519PrivateKey {\n  // Try the old, redundant public key version\n  if (bytes.length > crypto.privateKeyLength) {\n    bytes = ensureEd25519Key(bytes, crypto.privateKeyLength + crypto.publicKeyLength)\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength)\n    const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length)\n    return new Ed25519PrivateKeyClass(privateKeyBytes, publicKeyBytes)\n  }\n\n  bytes = ensureEd25519Key(bytes, crypto.privateKeyLength)\n  const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength)\n  const publicKeyBytes = bytes.subarray(crypto.publicKeyLength)\n  return new Ed25519PrivateKeyClass(privateKeyBytes, publicKeyBytes)\n}\n\nexport function unmarshalEd25519PublicKey (bytes: Uint8Array): Ed25519PublicKey {\n  bytes = ensureEd25519Key(bytes, crypto.publicKeyLength)\n  return new Ed25519PublicKeyClass(bytes)\n}\n\nexport async function generateEd25519KeyPair (): Promise<Ed25519PrivateKey> {\n  const { privateKey, publicKey } = crypto.generateKey()\n  return new Ed25519PrivateKeyClass(privateKey, publicKey)\n}\n\nexport async function generateEd25519KeyPairFromSeed (seed: Uint8Array): Promise<Ed25519PrivateKey> {\n  const { privateKey, publicKey } = crypto.generateKeyFromSeed(seed)\n  return new Ed25519PrivateKeyClass(privateKey, publicKey)\n}\n\nexport function ensureEd25519Key (key: Uint8Array, length: number): Uint8Array {\n  key = Uint8Array.from(key ?? [])\n  if (key.length !== length) {\n    throw new InvalidParametersError(`Key must be a Uint8Array of length ${length}, got ${key.length}`)\n  }\n  return key\n}\n", "/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst N1 = Math.pow(2, 7)\nconst N2 = Math.pow(2, 14)\nconst N3 = Math.pow(2, 21)\nconst N4 = Math.pow(2, 28)\nconst N5 = Math.pow(2, 35)\nconst N6 = Math.pow(2, 42)\nconst N7 = Math.pow(2, 49)\n\n/** Most significant bit of a byte */\nconst MSB = 0x80\n/** Rest of the bits in a byte */\nconst REST = 0x7f\n\nexport function encodingLength (value: number): number {\n  if (value < N1) {\n    return 1\n  }\n\n  if (value < N2) {\n    return 2\n  }\n\n  if (value < N3) {\n    return 3\n  }\n\n  if (value < N4) {\n    return 4\n  }\n\n  if (value < N5) {\n    return 5\n  }\n\n  if (value < N6) {\n    return 6\n  }\n\n  if (value < N7) {\n    return 7\n  }\n\n  if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n    throw new RangeError('Could not encode varint')\n  }\n\n  return 8\n}\n\nexport function encodeUint8Array (value: number, buf: Uint8Array, offset: number = 0): Uint8Array {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 7: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 6: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 5: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 4: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 3: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 2: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 1: {\n      buf[offset++] = (value & 0xFF)\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function encodeUint8ArrayList (value: number, buf: Uint8ArrayList, offset: number = 0): Uint8ArrayList {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 7: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 6: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 5: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 4: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 3: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 2: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 1: {\n      buf.set(offset++, (value & 0xFF))\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function decodeUint8Array (buf: Uint8Array, offset: number): number {\n  let b = buf[offset]\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 1]\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 2]\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 3]\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 4]\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 5]\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 6]\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 7]\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function decodeUint8ArrayList (buf: Uint8ArrayList, offset: number): number {\n  let b = buf.get(offset)\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 1)\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 2)\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 3)\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 4)\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 5)\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 6)\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 7)\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function encode (value: number): Uint8Array\nexport function encode (value: number, buf: Uint8Array, offset?: number): Uint8Array\nexport function encode (value: number, buf: Uint8ArrayList, offset?: number): Uint8ArrayList\nexport function encode <T extends Uint8Array | Uint8ArrayList = Uint8Array> (value: number, buf?: T, offset: number = 0): T {\n  if (buf == null) {\n    buf = allocUnsafe(encodingLength(value)) as T\n  }\n  if (buf instanceof Uint8Array) {\n    return encodeUint8Array(value, buf, offset) as T\n  } else {\n    return encodeUint8ArrayList(value, buf, offset) as T\n  }\n}\n\nexport function decode (buf: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n  if (buf instanceof Uint8Array) {\n    return decodeUint8Array(buf, offset)\n  } else {\n    return decodeUint8ArrayList(buf, offset)\n  }\n}\n", "const f32 = new Float32Array([-0])\nconst f8b = new Uint8Array(f32.buffer)\n\n/**\n * Writes a 32 bit float to a buffer using little endian byte order\n */\nexport function writeFloatLE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[0]\n  buf[pos + 1] = f8b[1]\n  buf[pos + 2] = f8b[2]\n  buf[pos + 3] = f8b[3]\n}\n\n/**\n * Writes a 32 bit float to a buffer using big endian byte order\n */\nexport function writeFloatBE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[3]\n  buf[pos + 1] = f8b[2]\n  buf[pos + 2] = f8b[1]\n  buf[pos + 3] = f8b[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using little endian byte order\n */\nexport function readFloatLE (buf: Uint8Array, pos: number): number {\n  f8b[0] = buf[pos]\n  f8b[1] = buf[pos + 1]\n  f8b[2] = buf[pos + 2]\n  f8b[3] = buf[pos + 3]\n  return f32[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using big endian byte order\n */\nexport function readFloatBE (buf: Uint8Array, pos: number): number {\n  f8b[3] = buf[pos]\n  f8b[2] = buf[pos + 1]\n  f8b[1] = buf[pos + 2]\n  f8b[0] = buf[pos + 3]\n  return f32[0]\n}\n\nconst f64 = new Float64Array([-0])\nconst d8b = new Uint8Array(f64.buffer)\n\n/**\n * Writes a 64 bit double to a buffer using little endian byte order\n */\nexport function writeDoubleLE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[0]\n  buf[pos + 1] = d8b[1]\n  buf[pos + 2] = d8b[2]\n  buf[pos + 3] = d8b[3]\n  buf[pos + 4] = d8b[4]\n  buf[pos + 5] = d8b[5]\n  buf[pos + 6] = d8b[6]\n  buf[pos + 7] = d8b[7]\n}\n\n/**\n * Writes a 64 bit double to a buffer using big endian byte order\n */\nexport function writeDoubleBE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[7]\n  buf[pos + 1] = d8b[6]\n  buf[pos + 2] = d8b[5]\n  buf[pos + 3] = d8b[4]\n  buf[pos + 4] = d8b[3]\n  buf[pos + 5] = d8b[2]\n  buf[pos + 6] = d8b[1]\n  buf[pos + 7] = d8b[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using little endian byte order\n */\nexport function readDoubleLE (buf: Uint8Array, pos: number): number {\n  d8b[0] = buf[pos]\n  d8b[1] = buf[pos + 1]\n  d8b[2] = buf[pos + 2]\n  d8b[3] = buf[pos + 3]\n  d8b[4] = buf[pos + 4]\n  d8b[5] = buf[pos + 5]\n  d8b[6] = buf[pos + 6]\n  d8b[7] = buf[pos + 7]\n  return f64[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using big endian byte order\n */\nexport function readDoubleBE (buf: Uint8Array, pos: number): number {\n  d8b[7] = buf[pos]\n  d8b[6] = buf[pos + 1]\n  d8b[5] = buf[pos + 2]\n  d8b[4] = buf[pos + 3]\n  d8b[3] = buf[pos + 4]\n  d8b[2] = buf[pos + 5]\n  d8b[1] = buf[pos + 6]\n  d8b[0] = buf[pos + 7]\n  return f64[0]\n}\n", "// the largest BigInt we can safely downcast to a Number\nconst MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER)\nconst MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER)\n\n/**\n * Constructs new long bits.\n *\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @function Object() { [native code] }\n * @param {number} lo - Low 32 bits, unsigned\n * @param {number} hi - High 32 bits, unsigned\n */\nexport class LongBits {\n  public lo: number\n  public hi: number\n\n  constructor (lo: number, hi: number) {\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits\n     */\n    this.lo = lo | 0\n\n    /**\n     * High bits\n     */\n    this.hi = hi | 0\n  }\n\n  /**\n   * Converts this long bits to a possibly unsafe JavaScript number\n   */\n  toNumber (unsigned: boolean = false): number {\n    if (!unsigned && (this.hi >>> 31) > 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(lo + hi * 4294967296)\n    }\n    return this.lo + this.hi * 4294967296\n  }\n\n  /**\n   * Converts this long bits to a bigint\n   */\n  toBigInt (unsigned: boolean = false): bigint {\n    if (unsigned) {\n      return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n    }\n\n    if ((this.hi >>> 31) !== 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(BigInt(lo) + (BigInt(hi) << 32n))\n    }\n\n    return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n  }\n\n  /**\n   * Converts this long bits to a string\n   */\n  toString (unsigned: boolean = false): string {\n    return this.toBigInt(unsigned).toString()\n  }\n\n  /**\n   * Zig-zag encodes this long bits\n   */\n  zzEncode (): this {\n    const mask = this.hi >> 31\n    this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\n    this.lo = (this.lo << 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Zig-zag decodes this long bits\n   */\n  zzDecode (): this {\n    const mask = -(this.lo & 1)\n    this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\n    this.hi = (this.hi >>> 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Calculates the length of this longbits when encoded as a varint.\n   */\n  length (): number {\n    const part0 = this.lo\n    const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0\n    const part2 = this.hi >>> 24\n    return part2 === 0\n      ? part1 === 0\n        ? part0 < 16384\n          ? part0 < 128 ? 1 : 2\n          : part0 < 2097152 ? 3 : 4\n        : part1 < 16384\n          ? part1 < 128 ? 5 : 6\n          : part1 < 2097152 ? 7 : 8\n      : part2 < 128 ? 9 : 10\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromBigInt (value: bigint): LongBits {\n    if (value === 0n) {\n      return zero\n    }\n\n    if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {\n      return this.fromNumber(Number(value))\n    }\n\n    const negative = value < 0n\n\n    if (negative) {\n      value = -value\n    }\n\n    let hi = value >> 32n\n    let lo = value - (hi << 32n)\n\n    if (negative) {\n      hi = ~hi | 0n\n      lo = ~lo | 0n\n\n      if (++lo > TWO_32) {\n        lo = 0n\n        if (++hi > TWO_32) { hi = 0n }\n      }\n    }\n\n    return new LongBits(Number(lo), Number(hi))\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromNumber (value: number): LongBits {\n    if (value === 0) { return zero }\n    const sign = value < 0\n    if (sign) { value = -value }\n    let lo = value >>> 0\n    let hi = (value - lo) / 4294967296 >>> 0\n    if (sign) {\n      hi = ~hi >>> 0\n      lo = ~lo >>> 0\n      if (++lo > 4294967295) {\n        lo = 0\n        if (++hi > 4294967295) { hi = 0 }\n      }\n    }\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Constructs new long bits from a number, long or string\n   */\n  static from (value: bigint | number | string | { low: number, high: number }): LongBits {\n    if (typeof value === 'number') {\n      return LongBits.fromNumber(value)\n    }\n    if (typeof value === 'bigint') {\n      return LongBits.fromBigInt(value)\n    }\n    if (typeof value === 'string') {\n      return LongBits.fromBigInt(BigInt(value))\n    }\n    return value.low != null || value.high != null ? new LongBits(value.low >>> 0, value.high >>> 0) : zero\n  }\n}\n\nconst zero = new LongBits(0, 0)\nzero.toBigInt = function () { return 0n }\nzero.zzEncode = zero.zzDecode = function () { return this }\nzero.length = function () { return 1 }\n\nconst TWO_32 = 4294967296n\n", "/**\n * Calculates the UTF8 byte length of a string\n */\nexport function length (string: string): number {\n  let len = 0\n  let c = 0\n  for (let i = 0; i < string.length; ++i) {\n    c = string.charCodeAt(i)\n\n    if (c < 128) {\n      len += 1\n    } else if (c < 2048) {\n      len += 2\n    } else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i\n      len += 4\n    } else {\n      len += 3\n    }\n  }\n\n  return len\n}\n\n/**\n * Reads UTF8 bytes as a string\n */\nexport function read (buffer: Uint8Array, start: number, end: number): string {\n  const len = end - start\n\n  if (len < 1) {\n    return ''\n  }\n\n  let parts: string[] | undefined\n  const chunk: number[] = []\n  let i = 0 // char offset\n  let t: number // temporary\n\n  while (start < end) {\n    t = buffer[start++]\n\n    if (t < 128) {\n      chunk[i++] = t\n    } else if (t > 191 && t < 224) {\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63\n    } else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000\n      chunk[i++] = 0xD800 + (t >> 10)\n      chunk[i++] = 0xDC00 + (t & 1023)\n    } else {\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63\n    }\n\n    if (i > 8191) {\n      (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk))\n      i = 0\n    }\n  }\n\n  if (parts != null) {\n    if (i > 0) {\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))\n    }\n\n    return parts.join('')\n  }\n\n  return String.fromCharCode.apply(String, chunk.slice(0, i))\n}\n\n/**\n * Writes a string as UTF8 bytes\n */\nexport function write (string: string, buffer: Uint8Array, offset: number): number {\n  const start = offset\n  let c1 // character 1\n  let c2 // character 2\n\n  for (let i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i)\n\n    if (c1 < 128) {\n      buffer[offset++] = c1\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192\n      buffer[offset++] = c1 & 63 | 128\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF)\n      ++i\n      buffer[offset++] = c1 >> 18 | 240\n      buffer[offset++] = c1 >> 12 & 63 | 128\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    } else {\n      buffer[offset++] = c1 >> 12 | 224\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    }\n  }\n\n  return offset - start\n}\n", "import { decodeUint8Array, encodingLength } from 'uint8-varint'\nimport { readFloatLE, readDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport * as utf8 from './utf8.js'\nimport type { Reader } from '../index.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/* istanbul ignore next */\nfunction indexOutOfRange (reader: Reader, writeLength?: number): RangeError {\n  return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`)\n}\n\nfunction readFixed32End (buf: Uint8Array, end: number): number { // note that this uses `end`, not `pos`\n  return (buf[end - 4] |\n        buf[end - 3] << 8 |\n        buf[end - 2] << 16 |\n        buf[end - 1] << 24) >>> 0\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n */\nexport class Uint8ArrayReader implements Reader {\n  public buf: Uint8Array\n  public pos: number\n  public len: number\n\n  public _slice = Uint8Array.prototype.subarray\n\n  constructor (buffer: Uint8Array) {\n    /**\n     * Read buffer\n     */\n    this.buf = buffer\n\n    /**\n     * Read buffer position\n     */\n    this.pos = 0\n\n    /**\n     * Read buffer length\n     */\n    this.len = buffer.length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value\n   */\n  uint32 (): number {\n    let value = 4294967295\n\n    value = (this.buf[this.pos] & 127) >>> 0; if (this.buf[this.pos++] < 128) { return value }\n    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0; if (this.buf[this.pos++] < 128) { return value }\n    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) { return value }\n    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) { return value }\n    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0; if (this.buf[this.pos++] < 128) { return value }\n\n    if ((this.pos += 5) > this.len) {\n      this.pos = this.len\n      throw indexOutOfRange(this, 10)\n    }\n\n    return value\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value\n   */\n  int32 (): number {\n    return this.uint32() | 0\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 32 bit value\n   */\n  sint32 (): number {\n    const value = this.uint32()\n    return value >>> 1 ^ -(value & 1) | 0\n  }\n\n  /**\n   * Reads a varint as a boolean\n   */\n  bool (): boolean {\n    return this.uint32() !== 0\n  }\n\n  /**\n   * Reads fixed 32 bits as an unsigned 32 bit integer\n   */\n  fixed32 (): number {\n    if (this.pos + 4 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const res = readFixed32End(this.buf, this.pos += 4)\n\n    return res\n  }\n\n  /**\n   * Reads fixed 32 bits as a signed 32 bit integer\n   */\n  sfixed32 (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const res = readFixed32End(this.buf, this.pos += 4) | 0\n\n    return res\n  }\n\n  /**\n   * Reads a float (32 bit) as a number\n   */\n  float (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const value = readFloatLE(this.buf, this.pos)\n    this.pos += 4\n    return value\n  }\n\n  /**\n   * Reads a double (64 bit float) as a number\n   */\n  double (): number {\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const value = readDoubleLE(this.buf, this.pos)\n    this.pos += 8\n    return value\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint\n   */\n  bytes (): Uint8Array {\n    const length = this.uint32()\n    const start = this.pos\n    const end = this.pos + length\n\n    /* istanbul ignore if */\n    if (end > this.len) {\n      throw indexOutOfRange(this, length)\n    }\n\n    this.pos += length\n\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n      ? new Uint8Array(0)\n      : this.buf.subarray(start, end)\n  }\n\n  /**\n   * Reads a string preceded by its byte length as a varint\n   */\n  string (): string {\n    const bytes = this.bytes()\n    return utf8.read(bytes, 0, bytes.length)\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint\n   */\n  skip (length?: number): this {\n    if (typeof length === 'number') {\n      /* istanbul ignore if */\n      if (this.pos + length > this.len) { throw indexOutOfRange(this, length) }\n      this.pos += length\n    } else {\n      do {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n      } while ((this.buf[this.pos++] & 128) !== 0)\n    }\n    return this\n  }\n\n  /**\n   * Skips the next element of the specified wire type\n   */\n  skipType (wireType: number): this {\n    switch (wireType) {\n      case 0:\n        this.skip()\n        break\n      case 1:\n        this.skip(8)\n        break\n      case 2:\n        this.skip(this.uint32())\n        break\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType)\n        }\n        break\n      case 5:\n        this.skip(4)\n        break\n\n        /* istanbul ignore next */\n      default:\n        throw Error(`invalid wire type ${wireType} at offset ${this.pos}`)\n    }\n    return this\n  }\n\n  private readLongVarint (): LongBits {\n    // tends to deopt with local vars for octet etc.\n    const bits = new LongBits(0, 0)\n    let i = 0\n    if (this.len - this.pos > 4) { // fast route (lo)\n      for (; i < 4; ++i) {\n        // 1st..4th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 5th\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0\n      if (this.buf[this.pos++] < 128) { return bits }\n      i = 0\n    } else {\n      for (; i < 3; ++i) {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) { throw indexOutOfRange(this) }\n        // 1st..3th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 4th\n      bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0\n      return bits\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n      for (; i < 5; ++i) {\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    } else {\n      for (; i < 5; ++i) {\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    }\n\n    throw Error('invalid varint encoding')\n  }\n\n  private readFixed64 (): LongBits {\n    if (this.pos + 8 > this.len) {\n      throw indexOutOfRange(this, 8)\n    }\n\n    const lo = readFixed32End(this.buf, this.pos += 4)\n    const hi = readFixed32End(this.buf, this.pos += 4)\n\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64 (): bigint {\n    return this.readLongVarint().toBigInt()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  int64Number (): number {\n    return this.readLongVarint().toNumber()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a string\n   */\n  int64String (): string {\n    return this.readLongVarint().toString()\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64 (): bigint {\n    return this.readLongVarint().toBigInt(true)\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  uint64Number (): number {\n    const value = decodeUint8Array(this.buf, this.pos)\n    this.pos += encodingLength(value)\n    return value\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a string\n   */\n  uint64String (): string {\n    return this.readLongVarint().toString(true)\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64 (): bigint {\n    return this.readLongVarint().zzDecode().toBigInt()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * possibly unsafe JavaScript number\n   */\n  sint64Number (): number {\n    return this.readLongVarint().zzDecode().toNumber()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * string\n   */\n  sint64String (): string {\n    return this.readLongVarint().zzDecode().toString()\n  }\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a possibly unsafe JavaScript number\n   */\n  fixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a string\n   */\n  fixed64String (): string {\n    return this.readFixed64().toString()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe\n   * JavaScript number\n   */\n  sfixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a string\n   */\n  sfixed64String (): string {\n    return this.readFixed64().toString()\n  }\n}\n\nexport function createReader (buf: Uint8Array | Uint8ArrayList): Reader {\n  return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray())\n}\n", "import { createReader } from './utils/reader.js'\nimport type { Codec, DecodeOptions } from './codec.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport function decodeMessage <T> (buf: Uint8Array | Uint8ArrayList, codec: Pick<Codec<T>, 'decode'>, opts?: DecodeOptions<T>): T {\n  const reader = createReader(buf)\n\n  return codec.decode(reader, undefined, opts)\n}\n", "import { allocUnsafe } from 'uint8arrays/alloc'\n\n/**\n * A general purpose buffer pool\n */\nexport default function pool (size?: number): (size: number) => Uint8Array {\n  const SIZE = size ?? 8192\n  const MAX = SIZE >>> 1\n  let slab: Uint8Array\n  let offset = SIZE\n  return function poolAlloc (size: number) {\n    if (size < 1 || size > MAX) {\n      return allocUnsafe(size)\n    }\n\n    if (offset + size > SIZE) {\n      slab = allocUnsafe(SIZE)\n      offset = 0\n    }\n\n    const buf = slab.subarray(offset, offset += size)\n\n    if ((offset & 7) !== 0) {\n      // align to 32 bit\n      offset = (offset | 7) + 1\n    }\n\n    return buf\n  }\n}\n", "import { encodeUint8Array, encodingLength } from 'uint8-varint'\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { writeFloatLE, writeDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport pool from './pool.js'\nimport * as utf8 from './utf8.js'\nimport type { Writer } from '../index.js'\n\ninterface WriterOperation<T> {\n  (val: T, buf: Uint8Array, pos: number): any\n}\n\n/**\n * Constructs a new writer operation instance.\n *\n * @classdesc Scheduled writer operation\n */\nclass Op<T> {\n  /**\n   * Function to call\n   */\n  public fn: WriterOperation<T>\n\n  /**\n   * Value byte length\n   */\n  public len: number\n\n  /**\n   * Next operation\n   */\n  public next?: Op<any>\n\n  /**\n   * Value to write\n   */\n  public val: T\n\n  constructor (fn: WriterOperation<T>, len: number, val: T) {\n    this.fn = fn\n    this.len = len\n    this.next = undefined\n    this.val = val // type varies\n  }\n}\n\n/* istanbul ignore next */\nfunction noop (): void {}\n\n/**\n * Constructs a new writer state instance\n */\nclass State {\n  /**\n   * Current head\n   */\n  public head: Op<any>\n\n  /**\n   * Current tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Current buffer length\n   */\n  public len: number\n\n  /**\n   * Next state\n   */\n  public next?: State\n\n  constructor (writer: Uint8ArrayWriter) {\n    this.head = writer.head\n    this.tail = writer.tail\n    this.len = writer.len\n    this.next = writer.states\n  }\n}\n\nconst bufferPool = pool()\n\n/**\n * Allocates a buffer of the specified size\n */\nfunction alloc (size: number): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return allocUnsafe(size)\n  }\n\n  return bufferPool(size)\n}\n\n/**\n * When a value is written, the writer calculates its byte length and puts it into a linked\n * list of operations to perform when finish() is called. This both allows us to allocate\n * buffers of the exact required size and reduces the amount of work we have to do compared\n * to first calculating over objects and then encoding over objects. In our case, the encoding\n * part is just a linked list walk calling operations with already prepared values.\n */\nclass Uint8ArrayWriter implements Writer {\n  /**\n   * Current length\n   */\n  public len: number\n\n  /**\n   * Operations head\n   */\n  public head: Op<any>\n\n  /**\n   * Operations tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Linked forked states\n   */\n  public states?: any\n\n  constructor () {\n    this.len = 0\n    this.head = new Op(noop, 0, 0)\n    this.tail = this.head\n    this.states = null\n  }\n\n  /**\n   * Pushes a new operation to the queue\n   */\n  _push (fn: WriterOperation<any>, len: number, val: any): this {\n    this.tail = this.tail.next = new Op(fn, len, val)\n    this.len += len\n\n    return this\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as a varint\n   */\n  uint32 (value: number): this {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n      (value = value >>> 0) <\n                128\n        ? 1\n        : value < 16384\n          ? 2\n          : value < 2097152\n            ? 3\n            : value < 268435456\n              ? 4\n              : 5,\n      value)).len\n    return this\n  }\n\n  /**\n   * Writes a signed 32 bit value as a varint`\n   */\n  int32 (value: number): this {\n    return value < 0\n      ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n      : this.uint32(value)\n  }\n\n  /**\n   * Writes a 32 bit value as a varint, zig-zag encoded\n   */\n  sint32 (value: number): this {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64Number (value: number): this {\n    return this._push(encodeUint8Array, encodingLength(value), value)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64String (value: string): this {\n    return this.uint64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64 (value: bigint): this {\n    return this.uint64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64Number (value: number): this {\n    return this.uint64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64String (value: string): this {\n    return this.uint64String(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64Number (value: number): this {\n    const bits = LongBits.fromNumber(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64String (value: string): this {\n    return this.sint64(BigInt(value))\n  }\n\n  /**\n   * Writes a boolish value as a varint\n   */\n  bool (value: boolean): this {\n    return this._push(writeByte, 1, value ? 1 : 0)\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as fixed 32 bits\n   */\n  fixed32 (value: number): this {\n    return this._push(writeFixed32, 4, value >>> 0)\n  }\n\n  /**\n   * Writes a signed 32 bit value as fixed 32 bits\n   */\n  sfixed32 (value: number): this {\n    return this.fixed32(value)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64Number (value: number): this {\n    const bits = LongBits.fromNumber(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64String (value: string): this {\n    return this.fixed64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64 (value: bigint): this {\n    return this.fixed64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64Number (value: number): this {\n    return this.fixed64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64String (value: string): this {\n    return this.fixed64String(value)\n  }\n\n  /**\n   * Writes a float (32 bit)\n   */\n  float (value: number): this {\n    return this._push(writeFloatLE, 4, value)\n  }\n\n  /**\n   * Writes a double (64 bit float).\n   *\n   * @function\n   * @param {number} value - Value to write\n   * @returns {Writer} `this`\n   */\n  double (value: number): this {\n    return this._push(writeDoubleLE, 8, value)\n  }\n\n  /**\n   * Writes a sequence of bytes\n   */\n  bytes (value: Uint8Array): this {\n    const len = value.length >>> 0\n\n    if (len === 0) {\n      return this._push(writeByte, 1, 0)\n    }\n\n    return this.uint32(len)._push(writeBytes, len, value)\n  }\n\n  /**\n   * Writes a string\n   */\n  string (value: string): this {\n    const len = utf8.length(value)\n    return len !== 0\n      ? this.uint32(len)._push(utf8.write, len, value)\n      : this._push(writeByte, 1, 0)\n  }\n\n  /**\n   * Forks this writer's state by pushing it to a stack.\n   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n   */\n  fork (): this {\n    this.states = new State(this)\n    this.head = this.tail = new Op(noop, 0, 0)\n    this.len = 0\n    return this\n  }\n\n  /**\n   * Resets this instance to the last state\n   */\n  reset (): this {\n    if (this.states != null) {\n      this.head = this.states.head\n      this.tail = this.states.tail\n      this.len = this.states.len\n      this.states = this.states.next\n    } else {\n      this.head = this.tail = new Op(noop, 0, 0)\n      this.len = 0\n    }\n    return this\n  }\n\n  /**\n   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n   */\n  ldelim (): this {\n    const head = this.head\n    const tail = this.tail\n    const len = this.len\n    this.reset().uint32(len)\n    if (len !== 0) {\n      this.tail.next = head.next // skip noop\n      this.tail = tail\n      this.len += len\n    }\n    return this\n  }\n\n  /**\n   * Finishes the write operation\n   */\n  finish (): Uint8Array {\n    let head = this.head.next // skip noop\n    const buf = alloc(this.len)\n    let pos = 0\n    while (head != null) {\n      head.fn(head.val, buf, pos)\n      pos += head.len\n      head = head.next\n    }\n    // this.head = this.tail = null;\n    return buf\n  }\n}\n\nfunction writeByte (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n}\n\nfunction writeVarint32 (val: number, buf: Uint8Array, pos: number): void {\n  while (val > 127) {\n    buf[pos++] = val & 127 | 128\n    val >>>= 7\n  }\n  buf[pos] = val\n}\n\n/**\n * Constructs a new varint writer operation instance.\n *\n * @classdesc Scheduled varint writer operation\n */\nclass VarintOp extends Op<number> {\n  public next?: Op<any>\n\n  constructor (len: number, val: number) {\n    super(writeVarint32, len, val)\n    this.next = undefined\n  }\n}\n\nfunction writeVarint64 (val: LongBits, buf: Uint8Array, pos: number): void {\n  while (val.hi !== 0) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\n    val.hi >>>= 7\n  }\n  while (val.lo > 127) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = val.lo >>> 7\n  }\n  buf[pos++] = val.lo\n}\n\nfunction writeFixed32 (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n  buf[pos + 1] = val >>> 8 & 255\n  buf[pos + 2] = val >>> 16 & 255\n  buf[pos + 3] = val >>> 24\n}\n\nfunction writeBytes (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos)\n}\n\nif (globalThis.Buffer != null) {\n  Uint8ArrayWriter.prototype.bytes = function (value: Uint8Array) {\n    const len = value.length >>> 0\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeBytesBuffer, len, value)\n    }\n\n    return this\n  }\n\n  Uint8ArrayWriter.prototype.string = function (value: string) {\n    const len = globalThis.Buffer.byteLength(value)\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeStringBuffer, len, value)\n    }\n\n    return this\n  }\n}\n\nfunction writeBytesBuffer (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos) // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n  // also works for plain array values\n}\n\nfunction writeStringBuffer (val: string, buf: Uint8Array, pos: number): void {\n  if (val.length < 40) {\n    // plain js is faster for short strings (probably due to redundant assertions)\n    utf8.write(val, buf, pos)\n    // @ts-expect-error buf isn't a Uint8Array?\n  } else if (buf.utf8Write != null) {\n    // @ts-expect-error buf isn't a Uint8Array?\n    buf.utf8Write(val, pos)\n  } else {\n    buf.set(uint8ArrayFromString(val), pos)\n  }\n}\n\n/**\n * Creates a new writer\n */\nexport function createWriter (): Writer {\n  return new Uint8ArrayWriter()\n}\n", "import { createWriter } from './utils/writer.js'\nimport type { Codec } from './codec.js'\n\nexport function encodeMessage <T> (message: Partial<T>, codec: Pick<Codec<T>, 'encode'>): Uint8Array {\n  const w = createWriter()\n\n  codec.encode(message, w, {\n    lengthDelimited: false\n  })\n\n  return w.finish()\n}\n", "import type { Writer, Reader } from './index.js'\n\n// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport enum CODEC_TYPES {\n  VARINT = 0,\n  BIT64,\n  LENGTH_DELIMITED,\n  START_GROUP,\n  END_GROUP,\n  BIT32\n}\n\nexport interface EncodeOptions {\n  lengthDelimited?: boolean\n  writeDefaults?: boolean\n}\n\nexport interface EncodeFunction<T> {\n  (value: Partial<T>, writer: Writer, opts?: EncodeOptions): void\n}\n\n// protobuf types that contain multiple values\ntype CollectionTypes = any[] | Map<any, any>\n\n// protobuf types that are not collections or messages\ntype PrimitiveTypes = boolean | number | string | bigint | Uint8Array\n\n// recursive array/map field length limits\ntype CollectionLimits <T> = {\n  [K in keyof T]: T[K] extends CollectionTypes ? number :\n    T[K] extends PrimitiveTypes ? never : Limits<T[K]>\n}\n\n// recursive array member array/map field length limits\ntype ArrayElementLimits <T> = {\n  [K in keyof T as `${string & K}$`]: T[K] extends Array<infer ElementType> ?\n      (ElementType extends PrimitiveTypes ? never : Limits<ElementType>) :\n      (T[K] extends PrimitiveTypes ? never : Limits<T[K]>)\n}\n\n// recursive map value array/map field length limits\ntype MapValueLimits <T> = {\n  [K in keyof T as `${string & K}$value`]: T[K] extends Map<any, infer MapValueType> ?\n      (MapValueType extends PrimitiveTypes ? never : Limits<MapValueType>) :\n      (T[K] extends PrimitiveTypes ? never : Limits<T[K]>)\n}\n\n// union of collection and array elements\ntype Limits<T> = Partial<CollectionLimits<T> & ArrayElementLimits<T> & MapValueLimits<T>>\n\nexport interface DecodeOptions<T> {\n  /**\n   * Runtime-specified limits for lengths of repeated/map fields\n   */\n  limits?: Limits<T>\n}\n\nexport interface DecodeFunction<T> {\n  (reader: Reader, length?: number, opts?: DecodeOptions<T>): T\n}\n\nexport interface Codec<T> {\n  name: string\n  type: CODEC_TYPES\n  encode: EncodeFunction<T>\n  decode: DecodeFunction<T>\n}\n\nexport function createCodec <T> (name: string, type: CODEC_TYPES, encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T> {\n  return {\n    name,\n    type,\n    encode,\n    decode\n  }\n}\n", "import { createCodec, CODEC_TYPES } from '../codec.js'\nimport type { DecodeFunction, EncodeFunction, Codec } from '../codec.js'\n\nexport function enumeration <T> (v: any): Codec<T> {\n  function findValue (val: string | number): number {\n    // Use the reverse mapping to look up the enum key for the stored value\n    // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n    if (v[val.toString()] == null) {\n      throw new Error('Invalid enum value')\n    }\n\n    return v[val]\n  }\n\n  const encode: EncodeFunction<number | string> = function enumEncode (val, writer) {\n    const enumValue = findValue(val)\n\n    writer.int32(enumValue)\n  }\n\n  const decode: DecodeFunction<number | string> = function enumDecode (reader) {\n    const val = reader.int32()\n\n    return findValue(val)\n  }\n\n  // @ts-expect-error yeah yeah\n  return createCodec('enum', CODEC_TYPES.VARINT, encode, decode)\n}\n", "import { createCodec, CODEC_TYPES } from '../codec.js'\nimport type { EncodeFunction, DecodeFunction, Codec } from '../codec.js'\n\nexport interface Factory<A, T> {\n  new (obj: A): T\n}\n\nexport function message <T> (encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T> {\n  return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode)\n}\n", "/**\n * @packageDocumentation\n *\n * This module contains serialization/deserialization code used when encoding/decoding protobufs.\n *\n * It should be declared as a dependency of your project:\n *\n * ```console\n * npm i protons-runtime\n * ```\n */\n\nimport type { Codec } from './codec.js'\n\nexport interface FieldDef {\n  name: string\n  codec: Codec<any>\n  optional?: true\n  repeats?: true\n  packed?: true\n}\n\nexport {\n  decodeMessage\n} from './decode.js'\n\nexport {\n  encodeMessage\n} from './encode.js'\n\nexport { enumeration } from './codecs/enum.js'\nexport { message } from './codecs/message.js'\nexport { createReader as reader } from './utils/reader.js'\nexport { createWriter as writer } from './utils/writer.js'\nexport type { Codec, EncodeOptions, DecodeOptions } from './codec.js'\n\nexport interface Writer {\n  /**\n   * Current length\n   */\n  len: number\n\n  /**\n   * Writes an unsigned 32 bit value as a varint\n   */\n  uint32(value: number): this\n\n  /**\n   * Writes a signed 32 bit value as a varint`\n   */\n  int32(value: number): this\n\n  /**\n   * Writes a 32 bit value as a varint, zig-zag encoded\n   */\n  sint32(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64(value: bigint): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64Number(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64String(value: string): this\n\n  /**\n   * Writes a boolish value as a varint\n   */\n  bool(value: boolean): this\n\n  /**\n   * Writes an unsigned 32 bit value as fixed 32 bits\n   */\n  fixed32(value: number): this\n\n  /**\n   * Writes a signed 32 bit value as fixed 32 bits\n   */\n  sfixed32(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64(value: bigint): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64Number(value: number): this\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64String(value: string): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64(value: bigint): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64Number(value: number): this\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64String(value: string): this\n\n  /**\n   * Writes a float (32 bit)\n   */\n  float(value: number): this\n\n  /**\n   * Writes a double (64 bit float)\n   */\n  double(value: number): this\n\n  /**\n   * Writes a sequence of bytes\n   */\n  bytes(value: Uint8Array): this\n\n  /**\n   * Writes a string\n   */\n  string(value: string): this\n\n  /**\n   * Forks this writer's state by pushing it to a stack.\n   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n   */\n  fork(): this\n\n  /**\n   * Resets this instance to the last state.\n   */\n  reset(): this\n\n  /**\n   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n   */\n  ldelim(): this\n\n  /**\n   * Finishes the write operation\n   */\n  finish(): Uint8Array\n}\n\nexport interface Reader {\n  /**\n   * Read buffer\n   */\n  buf: Uint8Array\n\n  /**\n   * Read buffer position\n   */\n  pos: number\n\n  /**\n   * Read buffer length\n   */\n  len: number\n\n  /**\n   * Reads a varint as an unsigned 32 bit value\n   */\n  uint32(): number\n\n  /**\n   * Reads a varint as a signed 32 bit value\n   */\n  int32(): number\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 32 bit value\n   */\n  sint32(): number\n\n  /**\n   * Reads a varint as a boolean\n   */\n  bool(): boolean\n\n  /**\n   * Reads fixed 32 bits as an unsigned 32 bit integer\n   */\n  fixed32(): number\n\n  /**\n   * Reads fixed 32 bits as a signed 32 bit integer\n   */\n  sfixed32(): number\n\n  /**\n   * Reads a float (32 bit) as a number\n   */\n  float(): number\n\n  /**\n   * Reads a double (64 bit float) as a number\n   */\n  double(): number\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint\n   */\n  bytes(): Uint8Array\n\n  /**\n   * Reads a string preceded by its byte length as a varint\n   */\n  string(): string\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varints`\n   */\n  skip(length?: number): void\n\n  /**\n   * Skips the next element of the specified wire type\n   */\n  skipType(wireType: number): void\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64(): bigint\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64Number(): number\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64String(): string\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64(): bigint\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64Number(): number\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64String(): string\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64(): bigint\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64Number(): number\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64String(): string\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64(): bigint\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64Number(): number\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64String(): string\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64(): bigint\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64Number(): number\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64String(): string\n}\n\n/**\n * This will be removed in a future release\n *\n * @deprecated\n */\nexport class CodeError extends Error {\n  public code: string\n\n  constructor (message: string, code: string) {\n    super(message)\n\n    this.code = code\n  }\n}\n\n/**\n * Thrown when a repeated field has too many elements\n */\nexport class MaxLengthError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_MAX_LENGTH'\n  public name = 'MaxLengthError'\n}\n\n/**\n * Thrown when a map has too many elements\n */\nexport class MaxSizeError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_MAX_SIZE'\n  public name = 'MaxSizeError'\n}\n\nexport class ParseError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_PARSE_ERROR'\n  public name = 'ParseError'\n}\n\nexport class NoMessagesFoundError extends Error {\n  /**\n   * This will be removed in a future release\n   *\n   * @deprecated use the `.name` property instead\n   */\n  public code = 'ERR_NO_MESSAGES_FOUND'\n  public name = 'NoMessagesFoundError'\n}\n", "import { decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime'\nimport type { Codec, DecodeOptions } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport enum KeyType {\n  RSA = 'RSA',\n  Ed25519 = 'Ed25519',\n  secp256k1 = 'secp256k1',\n  ECDSA = 'ECDSA'\n}\n\nenum __KeyTypeValues {\n  RSA = 0,\n  Ed25519 = 1,\n  secp256k1 = 2,\n  ECDSA = 3\n}\n\nexport namespace KeyType {\n  export const codec = (): Codec<KeyType> => {\n    return enumeration<KeyType>(__KeyTypeValues)\n  }\n}\nexport interface PublicKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PublicKey {\n  let _codec: Codec<PublicKey>\n\n  export const codec = (): Codec<PublicKey> => {\n    if (_codec == null) {\n      _codec = message<PublicKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length, opts = {}) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            }\n            case 2: {\n              obj.Data = reader.bytes()\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PublicKey>): Uint8Array => {\n    return encodeMessage(obj, PublicKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList, opts?: DecodeOptions<PublicKey>): PublicKey => {\n    return decodeMessage(buf, PublicKey.codec(), opts)\n  }\n}\n\nexport interface PrivateKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PrivateKey {\n  let _codec: Codec<PrivateKey>\n\n  export const codec = (): Codec<PrivateKey> => {\n    if (_codec == null) {\n      _codec = message<PrivateKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length, opts = {}) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            }\n            case 2: {\n              obj.Data = reader.bytes()\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PrivateKey>): Uint8Array => {\n    return encodeMessage(obj, PrivateKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList, opts?: DecodeOptions<PrivateKey>): PrivateKey => {\n    return decodeMessage(buf, PrivateKey.codec(), opts)\n  }\n}\n", "import { InvalidParametersError, InvalidPublicKeyError } from '@libp2p/interface'\nimport { sha256 } from '@noble/hashes/sha2.js'\nimport { create } from 'multiformats/hashes/digest'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport * as pb from '../keys.js'\nimport { decodeDer, encodeBitString, encodeInteger, encodeSequence } from './der.js'\nimport { RSAPrivateKey as RSAPrivateKeyClass, RSAPublicKey as RSAPublicKeyClass } from './rsa.js'\nimport { generateRSAKey, rsaKeySize } from './index.js'\nimport type { JWKKeyPair } from '../interface.js'\nimport type { RSAPrivateKey, RSAPublicKey } from '@libp2p/interface'\nimport type { Digest } from 'multiformats/hashes/digest'\n\nexport const MAX_RSA_KEY_SIZE = 8192\nconst SHA2_256_CODE = 0x12\nconst MAX_RSA_JWK_SIZE = 1062\n\nconst RSA_ALGORITHM_IDENTIFIER = Uint8Array.from([\n  0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00\n])\n\n/**\n * Convert a PKCS#1 in ASN1 DER format to a JWK private key\n */\nexport function pkcs1ToJwk (bytes: Uint8Array): JsonWebKey {\n  const message = decodeDer(bytes)\n\n  return pkcs1MessageToJwk(message)\n}\n\n/**\n * Convert a PKCS#1 in ASN1 DER format to a JWK private key\n */\nexport function pkcs1MessageToJwk (message: any): JsonWebKey {\n  return {\n    n: uint8ArrayToString(message[1], 'base64url'),\n    e: uint8ArrayToString(message[2], 'base64url'),\n    d: uint8ArrayToString(message[3], 'base64url'),\n    p: uint8ArrayToString(message[4], 'base64url'),\n    q: uint8ArrayToString(message[5], 'base64url'),\n    dp: uint8ArrayToString(message[6], 'base64url'),\n    dq: uint8ArrayToString(message[7], 'base64url'),\n    qi: uint8ArrayToString(message[8], 'base64url'),\n    kty: 'RSA'\n  }\n}\n\n/**\n * Convert a JWK private key into PKCS#1 in ASN1 DER format\n */\nexport function jwkToPkcs1 (jwk: JsonWebKey): Uint8Array {\n  if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n    throw new InvalidParametersError('JWK was missing components')\n  }\n\n  return encodeSequence([\n    encodeInteger(Uint8Array.from([0])),\n    encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),\n    encodeInteger(uint8ArrayFromString(jwk.e, 'base64url')),\n    encodeInteger(uint8ArrayFromString(jwk.d, 'base64url')),\n    encodeInteger(uint8ArrayFromString(jwk.p, 'base64url')),\n    encodeInteger(uint8ArrayFromString(jwk.q, 'base64url')),\n    encodeInteger(uint8ArrayFromString(jwk.dp, 'base64url')),\n    encodeInteger(uint8ArrayFromString(jwk.dq, 'base64url')),\n    encodeInteger(uint8ArrayFromString(jwk.qi, 'base64url'))\n  ]).subarray()\n}\n\n/**\n * Convert a PKIX in ASN1 DER format to a JWK public key\n */\nexport function pkixToJwk (bytes: Uint8Array): JsonWebKey {\n  const message = decodeDer(bytes, {\n    offset: 0\n  })\n\n  return pkixMessageToJwk(message)\n}\n\nexport function pkixMessageToJwk (message: any): JsonWebKey {\n  const keys = decodeDer(message[1], {\n    offset: 0\n  })\n\n  // this looks fragile but DER is a canonical format so we are safe to have\n  // deeply property chains like this\n  return {\n    kty: 'RSA',\n    n: uint8ArrayToString(\n      keys[0],\n      'base64url'\n    ),\n    e: uint8ArrayToString(\n      keys[1],\n      'base64url'\n    )\n  }\n}\n\n/**\n * Convert a JWK public key to PKIX in ASN1 DER format\n */\nexport function jwkToPkix (jwk: JsonWebKey): Uint8Array {\n  if (jwk.n == null || jwk.e == null) {\n    throw new InvalidParametersError('JWK was missing components')\n  }\n\n  const subjectPublicKeyInfo = encodeSequence([\n    RSA_ALGORITHM_IDENTIFIER,\n    encodeBitString(\n      encodeSequence([\n        encodeInteger(uint8ArrayFromString(jwk.n, 'base64url')),\n        encodeInteger(uint8ArrayFromString(jwk.e, 'base64url'))\n      ])\n    )\n  ])\n\n  return subjectPublicKeyInfo.subarray()\n}\n\n/**\n * Turn PKCS#1 DER bytes into a PrivateKey\n */\nexport function pkcs1ToRSAPrivateKey (bytes: Uint8Array): RSAPrivateKey {\n  const message = decodeDer(bytes)\n\n  return pkcs1MessageToRSAPrivateKey(message)\n}\n\n/**\n * Turn PKCS#1 DER bytes into a PrivateKey\n */\nexport function pkcs1MessageToRSAPrivateKey (message: any): RSAPrivateKey {\n  const jwk = pkcs1MessageToJwk(message)\n\n  return jwkToRSAPrivateKey(jwk)\n}\n\n/**\n * Turn a PKIX message into a PublicKey\n */\nexport function pkixToRSAPublicKey (bytes: Uint8Array, digest?: Digest<18, number>): RSAPublicKey {\n  if (bytes.byteLength >= MAX_RSA_JWK_SIZE) {\n    throw new InvalidPublicKeyError('Key size is too large')\n  }\n\n  const message = decodeDer(bytes, {\n    offset: 0\n  })\n\n  return pkixMessageToRSAPublicKey(message, bytes, digest)\n}\n\nexport function pkixMessageToRSAPublicKey (message: any, bytes: Uint8Array, digest?: Digest<18, number>): RSAPublicKey {\n  const jwk = pkixMessageToJwk(message)\n\n  if (digest == null) {\n    const hash = sha256(pb.PublicKey.encode({\n      Type: pb.KeyType.RSA,\n      Data: bytes\n    }))\n    digest = create(SHA2_256_CODE, hash)\n  }\n\n  return new RSAPublicKeyClass(jwk, digest)\n}\n\nexport function jwkToRSAPrivateKey (jwk: JsonWebKey): RSAPrivateKey {\n  if (rsaKeySize(jwk) > MAX_RSA_KEY_SIZE) {\n    throw new InvalidParametersError('Key size is too large')\n  }\n\n  const keys = jwkToJWKKeyPair(jwk)\n  const hash = sha256(pb.PublicKey.encode({\n    Type: pb.KeyType.RSA,\n    Data: jwkToPkix(keys.publicKey)\n  }))\n  const digest = create(SHA2_256_CODE, hash)\n\n  return new RSAPrivateKeyClass(keys.privateKey, new RSAPublicKeyClass(keys.publicKey, digest))\n}\n\nexport async function generateRSAKeyPair (bits: number): Promise<RSAPrivateKey> {\n  if (bits > MAX_RSA_KEY_SIZE) {\n    throw new InvalidParametersError('Key size is too large')\n  }\n\n  const keys = await generateRSAKey(bits)\n  const hash = sha256(pb.PublicKey.encode({\n    Type: pb.KeyType.RSA,\n    Data: jwkToPkix(keys.publicKey)\n  }))\n  const digest = create(SHA2_256_CODE, hash)\n\n  return new RSAPrivateKeyClass(keys.privateKey, new RSAPublicKeyClass(keys.publicKey, digest))\n}\n\n/**\n * Takes a jwk key and returns a JWK KeyPair\n */\nexport function jwkToJWKKeyPair (key: JsonWebKey): JWKKeyPair {\n  if (key == null) {\n    throw new InvalidParametersError('Missing key parameter')\n  }\n\n  return {\n    privateKey: key,\n    publicKey: {\n      kty: key.kty,\n      n: key.n,\n      e: key.e\n    }\n  }\n}\n", "import { base58btc } from 'multiformats/bases/base58'\nimport { CID } from 'multiformats/cid'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { hashAndSign, utils, hashAndVerify } from './index.js'\nimport type { RSAPublicKey as RSAPublicKeyInterface, RSAPrivateKey as RSAPrivateKeyInterface, AbortOptions } from '@libp2p/interface'\nimport type { Digest } from 'multiformats/hashes/digest'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class RSAPublicKey implements RSAPublicKeyInterface {\n  public readonly type = 'RSA'\n  public readonly jwk: JsonWebKey\n  private _raw?: Uint8Array\n  private readonly _multihash: Digest<18, number>\n\n  constructor (jwk: JsonWebKey, digest: Digest<18, number>) {\n    this.jwk = jwk\n    this._multihash = digest\n  }\n\n  get raw (): Uint8Array {\n    if (this._raw == null) {\n      this._raw = utils.jwkToPkix(this.jwk)\n    }\n\n    return this._raw\n  }\n\n  toMultihash (): Digest<18, number> {\n    return this._multihash\n  }\n\n  toCID (): CID<unknown, 114, 18, 1> {\n    return CID.createV1(114, this._multihash)\n  }\n\n  toString (): string {\n    return base58btc.encode(this.toMultihash().bytes).substring(1)\n  }\n\n  equals (key?: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array, options?: AbortOptions): boolean | Promise<boolean> {\n    return hashAndVerify(this.jwk, sig, data, options)\n  }\n}\n\nexport class RSAPrivateKey implements RSAPrivateKeyInterface {\n  public readonly type = 'RSA'\n  public readonly jwk: JsonWebKey\n  private _raw?: Uint8Array\n  public readonly publicKey: RSAPublicKey\n\n  constructor (jwk: JsonWebKey, publicKey: RSAPublicKey) {\n    this.jwk = jwk\n    this.publicKey = publicKey\n  }\n\n  get raw (): Uint8Array {\n    if (this._raw == null) {\n      this._raw = utils.jwkToPkcs1(this.jwk)\n    }\n\n    return this._raw\n  }\n\n  equals (key: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList, options?: AbortOptions): Uint8Array | Promise<Uint8Array> {\n    return hashAndSign(this.jwk, message, options)\n  }\n}\n", "import { InvalidParametersError } from '@libp2p/interface'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport randomBytes from '../../random-bytes.js'\nimport webcrypto from '../../webcrypto/index.js'\nimport * as utils from './utils.js'\nimport type { JWKKeyPair } from '../interface.js'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport const RSAES_PKCS1_V1_5_OID = '1.2.840.113549.1.1.1'\nexport { utils }\n\nexport async function generateRSAKey (bits: number, options?: AbortOptions): Promise<JWKKeyPair> {\n  const pair = await webcrypto.get().subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: bits,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['sign', 'verify']\n  )\n  options?.signal?.throwIfAborted()\n\n  const keys = await exportKey(pair, options)\n\n  return {\n    privateKey: keys[0],\n    publicKey: keys[1]\n  }\n}\n\nexport { randomBytes as getRandomValues }\n\nexport async function hashAndSign (key: JsonWebKey, msg: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<Uint8Array> {\n  const privateKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['sign']\n  )\n  options?.signal?.throwIfAborted()\n\n  const sig = await webcrypto.get().subtle.sign(\n    { name: 'RSASSA-PKCS1-v1_5' },\n    privateKey,\n    msg instanceof Uint8Array ? msg : msg.subarray()\n  )\n  options?.signal?.throwIfAborted()\n\n  return new Uint8Array(sig, 0, sig.byteLength)\n}\n\nexport async function hashAndVerify (key: JsonWebKey, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<boolean> {\n  const publicKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['verify']\n  )\n  options?.signal?.throwIfAborted()\n\n  const result = await webcrypto.get().subtle.verify(\n    { name: 'RSASSA-PKCS1-v1_5' },\n    publicKey,\n    sig,\n    msg instanceof Uint8Array ? msg : msg.subarray()\n  )\n  options?.signal?.throwIfAborted()\n\n  return result\n}\n\nasync function exportKey (pair: CryptoKeyPair, options?: AbortOptions): Promise<[JsonWebKey, JsonWebKey]> {\n  if (pair.privateKey == null || pair.publicKey == null) {\n    throw new InvalidParametersError('Private and public key are required')\n  }\n\n  const result = await Promise.all([\n    webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n    webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n  ])\n  options?.signal?.throwIfAborted()\n\n  return result\n}\n\nexport function rsaKeySize (jwk: JsonWebKey): number {\n  if (jwk.kty !== 'RSA') {\n    throw new InvalidParametersError('invalid key type')\n  } else if (jwk.n == null) {\n    throw new InvalidParametersError('invalid key modulus')\n  }\n  const bytes = uint8ArrayFromString(jwk.n, 'base64url')\n  return bytes.length * 8\n}\n", "/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, type CHash, type Hash } from './utils.ts';\n\n/** Internal class for HMAC. */\nexport class _HMAC<T extends Hash<T>> implements Hash<_HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, key: Uint8Array) {\n    ahash(hash);\n    abytes(key, undefined, 'key');\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    clean(pad);\n  }\n  update(buf: Uint8Array): this {\n    aexists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    abytes(out, this.outputLen, 'output');\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: _HMAC<T>): _HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  clone(): _HMAC<T> {\n    return this._cloneInto();\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac: {\n  (hash: CHash, key: Uint8Array, message: Uint8Array): Uint8Array;\n  create(hash: CHash, key: Uint8Array): _HMAC<any>;\n} = (hash: CHash, key: Uint8Array, message: Uint8Array): Uint8Array =>\n  new _HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Uint8Array) => new _HMAC<any>(hash, key);\n", "/**\n * Short Weierstrass curve methods. The formula is: y\u00B2 = x\u00B3 + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac as nobleHmac } from '@noble/hashes/hmac.js';\nimport { ahash } from '@noble/hashes/utils.js';\nimport {\n  abool,\n  abytes,\n  aInRange,\n  bitLen,\n  bitMask,\n  bytesToHex,\n  bytesToNumberBE,\n  concatBytes,\n  createHmacDrbg,\n  hexToBytes,\n  isBytes,\n  memoized,\n  numberToHexUnpadded,\n  validateObject,\n  randomBytes as wcRandomBytes,\n  type CHash,\n  type Signer,\n} from '../utils.ts';\nimport {\n  createCurveFields,\n  createKeygen,\n  mulEndoUnsafe,\n  negateCt,\n  normalizeZ,\n  wNAF,\n  type AffinePoint,\n  type CurveLengths,\n  type CurvePoint,\n  type CurvePointCons,\n} from './curve.ts';\nimport {\n  FpInvertBatch,\n  getMinHashLength,\n  mapHashToField,\n  validateField,\n  type IField,\n} from './modular.ts';\n\nexport type { AffinePoint };\n\ntype EndoBasis = [[bigint, bigint], [bigint, bigint]];\n/**\n * When Weierstrass curve has `a=0`, it becomes Koblitz curve.\n * Koblitz curves allow using **efficiently-computable GLV endomorphism \u03C8**.\n * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n *\n * Endomorphism consists of beta, lambda and splitScalar:\n *\n * 1. GLV endomorphism \u03C8 transforms a point: `P = (x, y) \u21A6 \u03C8(P) = (\u03B2\u00B7x mod p, y)`\n * 2. GLV scalar decomposition transforms a scalar: `k \u2261 k\u2081 + k\u2082\u00B7\u03BB (mod n)`\n * 3. Then these are combined: `k\u00B7P = k\u2081\u00B7P + k\u2082\u00B7\u03C8(P)`\n * 4. Two 128-bit point-by-scalar multiplications + one point addition is faster than\n *    one 256-bit multiplication.\n *\n * where\n * * beta: \u03B2 \u2208 F\u209A with \u03B2\u00B3 = 1, \u03B2 \u2260 1\n * * lambda: \u03BB \u2208 F\u2099 with \u03BB\u00B3 = 1, \u03BB \u2260 1\n * * splitScalar decomposes k \u21A6 k\u2081, k\u2082, by using reduced basis vectors.\n *   Gauss lattice reduction calculates them from initial basis vectors `(n, 0), (-\u03BB, 0)`\n *\n * Check out `test/misc/endomorphism.js` and\n * [gist](https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066).\n */\nexport type EndomorphismOpts = {\n  beta: bigint;\n  basises?: EndoBasis;\n  splitScalar?: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\n// We construct basis in such way that den is always positive and equals n, but num sign depends on basis (not on secret value)\nconst divNearest = (num: bigint, den: bigint) => (num + (num >= 0 ? den : -den) / _2n) / den;\n\nexport type ScalarEndoParts = { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n\n/**\n * Splits scalar for GLV endomorphism.\n */\nexport function _splitEndoScalar(k: bigint, basis: EndoBasis, n: bigint): ScalarEndoParts {\n  // Split scalar into two such that part is ~half bits: `abs(part) < sqrt(N)`\n  // Since part can be negative, we need to do this on point.\n  // TODO: verifyScalar function which consumes lambda\n  const [[a1, b1], [a2, b2]] = basis;\n  const c1 = divNearest(b2 * k, n);\n  const c2 = divNearest(-b1 * k, n);\n  // |k1|/|k2| is < sqrt(N), but can be negative.\n  // If we do `k1 mod N`, we'll get big scalar (`> sqrt(N)`): so, we do cheaper negation instead.\n  let k1 = k - c1 * a1 - c2 * a2;\n  let k2 = -c1 * b1 - c2 * b2;\n  const k1neg = k1 < _0n;\n  const k2neg = k2 < _0n;\n  if (k1neg) k1 = -k1;\n  if (k2neg) k2 = -k2;\n  // Double check that resulting scalar less than half bits of N: otherwise wNAF will fail.\n  // This should only happen on wrong basises. Also, math inside is too complex and I don't trust it.\n  const MAX_NUM = bitMask(Math.ceil(bitLen(n) / 2)) + _1n; // Half bits of N\n  if (k1 < _0n || k1 >= MAX_NUM || k2 < _0n || k2 >= MAX_NUM) {\n    throw new Error('splitScalar (endomorphism): failed, k=' + k);\n  }\n  return { k1neg, k1, k2neg, k2 };\n}\n\n/**\n * Option to enable hedged signatures with improved security.\n *\n * * Randomly generated k is bad, because broken CSPRNG would leak private keys.\n * * Deterministic k (RFC6979) is better; but is suspectible to fault attacks.\n *\n * We allow using technique described in RFC6979 3.6: additional k', a.k.a. adding randomness\n * to deterministic sig. If CSPRNG is broken & randomness is weak, it would STILL be as secure\n * as ordinary sig without ExtraEntropy.\n *\n * * `true` means \"fetch data, from CSPRNG, incorporate it into k generation\"\n * * `false` means \"disable extra entropy, use purely deterministic k\"\n * * `Uint8Array` passed means \"incorporate following data into k generation\"\n *\n * https://paulmillr.com/posts/deterministic-signatures/\n */\nexport type ECDSAExtraEntropy = boolean | Uint8Array;\n/**\n * - `compact` is the default format\n * - `recovered` is the same as compact, but with an extra byte indicating recovery byte\n * - `der` is ASN.1 DER encoding\n */\nexport type ECDSASignatureFormat = 'compact' | 'recovered' | 'der';\n/**\n * - `prehash`: (default: true) indicates whether to do sha256(message).\n *   When a custom hash is used, it must be set to `false`.\n */\nexport type ECDSARecoverOpts = {\n  prehash?: boolean;\n};\n/**\n * - `prehash`: (default: true) indicates whether to do sha256(message).\n *   When a custom hash is used, it must be set to `false`.\n * - `lowS`: (default: true) prohibits signatures which have (sig.s >= CURVE.n/2n).\n *   Compatible with BTC/ETH. Setting `lowS: false` allows to create malleable signatures,\n *   which is default openssl behavior.\n *   Non-malleable signatures can still be successfully verified in openssl.\n * - `format`: (default: 'compact') 'compact' or 'recovered' with recovery byte\n */\nexport type ECDSAVerifyOpts = {\n  prehash?: boolean;\n  lowS?: boolean;\n  format?: ECDSASignatureFormat;\n};\n/**\n * - `prehash`: (default: true) indicates whether to do sha256(message).\n *   When a custom hash is used, it must be set to `false`.\n * - `lowS`: (default: true) prohibits signatures which have (sig.s >= CURVE.n/2n).\n *   Compatible with BTC/ETH. Setting `lowS: false` allows to create malleable signatures,\n *   which is default openssl behavior.\n *   Non-malleable signatures can still be successfully verified in openssl.\n * - `format`: (default: 'compact') 'compact' or 'recovered' with recovery byte\n * - `extraEntropy`: (default: false) creates sigs with increased security, see {@link ECDSAExtraEntropy}\n */\nexport type ECDSASignOpts = {\n  prehash?: boolean;\n  lowS?: boolean;\n  format?: ECDSASignatureFormat;\n  extraEntropy?: ECDSAExtraEntropy;\n};\n\nfunction validateSigFormat(format: string): ECDSASignatureFormat {\n  if (!['compact', 'recovered', 'der'].includes(format))\n    throw new Error('Signature format must be \"compact\", \"recovered\", or \"der\"');\n  return format as ECDSASignatureFormat;\n}\n\nfunction validateSigOpts<T extends ECDSASignOpts, D extends Required<ECDSASignOpts>>(\n  opts: T,\n  def: D\n): Required<ECDSASignOpts> {\n  const optsn: ECDSASignOpts = {};\n  for (let optName of Object.keys(def)) {\n    // @ts-ignore\n    optsn[optName] = opts[optName] === undefined ? def[optName] : opts[optName];\n  }\n  abool(optsn.lowS!, 'lowS');\n  abool(optsn.prehash!, 'prehash');\n  if (optsn.format !== undefined) validateSigFormat(optsn.format);\n  return optsn as Required<ECDSASignOpts>;\n}\n\n/** Instance methods for 3D XYZ projective points. */\nexport interface WeierstrassPoint<T> extends CurvePoint<T, WeierstrassPoint<T>> {\n  /** projective X coordinate. Different from affine x. */\n  readonly X: T;\n  /** projective Y coordinate. Different from affine y. */\n  readonly Y: T;\n  /** projective z coordinate */\n  readonly Z: T;\n  /** affine x coordinate. Different from projective X. */\n  get x(): T;\n  /** affine y coordinate. Different from projective Y. */\n  get y(): T;\n  /** Encodes point using IEEE P1363 (DER) encoding. First byte is 2/3/4. Default = isCompressed. */\n  toBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n}\n\n/** Static methods for 3D XYZ projective points. */\nexport interface WeierstrassPointCons<T> extends CurvePointCons<WeierstrassPoint<T>> {\n  /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n  new (X: T, Y: T, Z: T): WeierstrassPoint<T>;\n  CURVE(): WeierstrassOpts<T>;\n}\n\n/**\n * Weierstrass curve options.\n *\n * * p: prime characteristic (order) of finite field, in which arithmetics is done\n * * n: order of prime subgroup a.k.a total amount of valid curve points\n * * h: cofactor, usually 1. h*n is group order; n is subgroup order\n * * a: formula param, must be in field of p\n * * b: formula param, must be in field of p\n * * Gx: x coordinate of generator point a.k.a. base point\n * * Gy: y coordinate of generator point\n */\nexport type WeierstrassOpts<T> = Readonly<{\n  p: bigint;\n  n: bigint;\n  h: bigint;\n  a: T;\n  b: T;\n  Gx: T;\n  Gy: T;\n}>;\n\n// When a cofactor != 1, there can be an effective methods to:\n// 1. Determine whether a point is torsion-free\n// 2. Clear torsion component\nexport type WeierstrassExtraOpts<T> = Partial<{\n  Fp: IField<T>;\n  Fn: IField<bigint>;\n  allowInfinityPoint: boolean;\n  endo: EndomorphismOpts;\n  isTorsionFree: (c: WeierstrassPointCons<T>, point: WeierstrassPoint<T>) => boolean;\n  clearCofactor: (c: WeierstrassPointCons<T>, point: WeierstrassPoint<T>) => WeierstrassPoint<T>;\n  fromBytes: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes: (\n    c: WeierstrassPointCons<T>,\n    point: WeierstrassPoint<T>,\n    isCompressed: boolean\n  ) => Uint8Array;\n}>;\n\n/**\n * Options for ECDSA signatures over a Weierstrass curve.\n *\n * * lowS: (default: true) whether produced / verified signatures occupy low half of ecdsaOpts.p. Prevents malleability.\n * * hmac: (default: noble-hashes hmac) function, would be used to init hmac-drbg for k generation.\n * * randomBytes: (default: webcrypto os-level CSPRNG) custom method for fetching secure randomness.\n * * bits2int, bits2int_modN: used in sigs, sometimes overridden by curves\n */\nexport type ECDSAOpts = Partial<{\n  lowS: boolean;\n  hmac: (key: Uint8Array, message: Uint8Array) => Uint8Array;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  bits2int: (bytes: Uint8Array) => bigint;\n  bits2int_modN: (bytes: Uint8Array) => bigint;\n}>;\n\n/**\n * Elliptic Curve Diffie-Hellman interface.\n * Provides keygen, secret-to-public conversion, calculating shared secrets.\n */\nexport interface ECDH {\n  keygen: (seed?: Uint8Array) => { secretKey: Uint8Array; publicKey: Uint8Array };\n  getPublicKey: (secretKey: Uint8Array, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (\n    secretKeyA: Uint8Array,\n    publicKeyB: Uint8Array,\n    isCompressed?: boolean\n  ) => Uint8Array;\n  Point: WeierstrassPointCons<bigint>;\n  utils: {\n    isValidSecretKey: (secretKey: Uint8Array) => boolean;\n    isValidPublicKey: (publicKey: Uint8Array, isCompressed?: boolean) => boolean;\n    randomSecretKey: (seed?: Uint8Array) => Uint8Array;\n  };\n  lengths: CurveLengths;\n}\n\n/**\n * ECDSA interface.\n * Only supported for prime fields, not Fp2 (extension fields).\n */\nexport interface ECDSA extends ECDH {\n  sign: (message: Uint8Array, secretKey: Uint8Array, opts?: ECDSASignOpts) => Uint8Array;\n  verify: (\n    signature: Uint8Array,\n    message: Uint8Array,\n    publicKey: Uint8Array,\n    opts?: ECDSAVerifyOpts\n  ) => boolean;\n  recoverPublicKey(signature: Uint8Array, message: Uint8Array, opts?: ECDSARecoverOpts): Uint8Array;\n  Signature: ECDSASignatureCons;\n}\nexport class DERErr extends Error {\n  constructor(m = '') {\n    super(m);\n  }\n}\nexport type IDER = {\n  // asn.1 DER encoding utils\n  Err: typeof DERErr;\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string) => string;\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array };\n  };\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string;\n    decode(data: Uint8Array): bigint;\n  };\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint };\n  hexFromSig(sig: { r: bigint; s: bigint }): string;\n};\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER: IDER = {\n  // asn.1 DER encoding utils\n  Err: DERErr,\n  // Basic building block is TLV (Tag-Length-Value)\n  _tlv: {\n    encode: (tag: number, data: string): string => {\n      const { Err: E } = DER;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length & 1) throw new E('tlv.encode: unpadded data');\n      const dataLen = data.length / 2;\n      const len = numberToHexUnpadded(dataLen);\n      if ((len.length / 2) & 0b1000_0000) throw new E('tlv.encode: long form length too big');\n      // length of length with long form flag\n      const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 0b1000_0000) : '';\n      const t = numberToHexUnpadded(tag);\n      return t + lenLen + len + data;\n    },\n    // v - value, l - left bytes (unparsed)\n    decode(tag: number, data: Uint8Array): { v: Uint8Array; l: Uint8Array } {\n      const { Err: E } = DER;\n      let pos = 0;\n      if (tag < 0 || tag > 256) throw new E('tlv.encode: wrong tag');\n      if (data.length < 2 || data[pos++] !== tag) throw new E('tlv.decode: wrong tlv');\n      const first = data[pos++];\n      const isLong = !!(first & 0b1000_0000); // First bit of first length byte is flag for short/long form\n      let length = 0;\n      if (!isLong) length = first;\n      else {\n        // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n        const lenLen = first & 0b0111_1111;\n        if (!lenLen) throw new E('tlv.decode(long): indefinite length not supported');\n        if (lenLen > 4) throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n        const lengthBytes = data.subarray(pos, pos + lenLen);\n        if (lengthBytes.length !== lenLen) throw new E('tlv.decode: length bytes not complete');\n        if (lengthBytes[0] === 0) throw new E('tlv.decode(long): zero leftmost byte');\n        for (const b of lengthBytes) length = (length << 8) | b;\n        pos += lenLen;\n        if (length < 128) throw new E('tlv.decode(long): not minimal encoding');\n      }\n      const v = data.subarray(pos, pos + length);\n      if (v.length !== length) throw new E('tlv.decode: wrong value length');\n      return { v, l: data.subarray(pos + length) };\n    },\n  },\n  // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n  // since we always use positive integers here. It must always be empty:\n  // - add zero byte if exists\n  // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n  _int: {\n    encode(num: bigint): string {\n      const { Err: E } = DER;\n      if (num < _0n) throw new E('integer: negative integers are not allowed');\n      let hex = numberToHexUnpadded(num);\n      // Pad with zero byte if negative flag is present\n      if (Number.parseInt(hex[0], 16) & 0b1000) hex = '00' + hex;\n      if (hex.length & 1) throw new E('unexpected DER parsing assertion: unpadded hex');\n      return hex;\n    },\n    decode(data: Uint8Array): bigint {\n      const { Err: E } = DER;\n      if (data[0] & 0b1000_0000) throw new E('invalid signature integer: negative');\n      if (data[0] === 0x00 && !(data[1] & 0b1000_0000))\n        throw new E('invalid signature integer: unnecessary leading zero');\n      return bytesToNumberBE(data);\n    },\n  },\n  toSig(bytes: Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E, _int: int, _tlv: tlv } = DER;\n    const data = abytes(bytes, undefined, 'signature');\n    const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n    if (seqLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n    const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n    if (sLeftBytes.length) throw new E('invalid signature: left bytes after parsing');\n    return { r: int.decode(rBytes), s: int.decode(sBytes) };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    const { _tlv: tlv, _int: int } = DER;\n    const rs = tlv.encode(0x02, int.encode(sig.r));\n    const ss = tlv.encode(0x02, int.encode(sig.s));\n    const seq = rs + ss;\n    return tlv.encode(0x30, seq);\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\n/**\n * Creates weierstrass Point constructor, based on specified curve options.\n *\n * See {@link WeierstrassOpts}.\n *\n * @example\n```js\nconst opts = {\n  p: 0xfffffffffffffffffffffffffffffffeffffac73n,\n  n: 0x100000000000000000001b8fa16dfab9aca16b6b3n,\n  h: 1n,\n  a: 0n,\n  b: 7n,\n  Gx: 0x3b4c382ce37aa192a4019e763036f4f5dd4d7ebbn,\n  Gy: 0x938cf935318fdced6bc28286531733c3f03c4feen,\n};\nconst secp160k1_Point = weierstrass(opts);\n```\n */\nexport function weierstrass<T>(\n  params: WeierstrassOpts<T>,\n  extraOpts: WeierstrassExtraOpts<T> = {}\n): WeierstrassPointCons<T> {\n  const validated = createCurveFields('weierstrass', params, extraOpts);\n  const { Fp, Fn } = validated;\n  let CURVE = validated.CURVE as WeierstrassOpts<T>;\n  const { h: cofactor, n: CURVE_ORDER } = CURVE;\n  validateObject(\n    extraOpts,\n    {},\n    {\n      allowInfinityPoint: 'boolean',\n      clearCofactor: 'function',\n      isTorsionFree: 'function',\n      fromBytes: 'function',\n      toBytes: 'function',\n      endo: 'object',\n    }\n  );\n\n  const { endo } = extraOpts;\n  if (endo) {\n    // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n    if (!Fp.is0(CURVE.a) || typeof endo.beta !== 'bigint' || !Array.isArray(endo.basises)) {\n      throw new Error('invalid endo: expected \"beta\": bigint and \"basises\": array');\n    }\n  }\n\n  const lengths = getWLengths(Fp, Fn);\n\n  function assertCompressionIsSupported() {\n    if (!Fp.isOdd) throw new Error('compression is not supported: Field does not have .isOdd()');\n  }\n\n  // Implements IEEE P1363 point encoding\n  function pointToBytes(\n    _c: WeierstrassPointCons<T>,\n    point: WeierstrassPoint<T>,\n    isCompressed: boolean\n  ): Uint8Array {\n    const { x, y } = point.toAffine();\n    const bx = Fp.toBytes(x);\n    abool(isCompressed, 'isCompressed');\n    if (isCompressed) {\n      assertCompressionIsSupported();\n      const hasEvenY = !Fp.isOdd!(y);\n      return concatBytes(pprefix(hasEvenY), bx);\n    } else {\n      return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n    }\n  }\n  function pointFromBytes(bytes: Uint8Array) {\n    abytes(bytes, undefined, 'Point');\n    const { publicKey: comp, publicKeyUncompressed: uncomp } = lengths; // e.g. for 32-byte: 33, 65\n    const length = bytes.length;\n    const head = bytes[0];\n    const tail = bytes.subarray(1);\n    // No actual validation is done here: use .assertValidity()\n    if (length === comp && (head === 0x02 || head === 0x03)) {\n      const x = Fp.fromBytes(tail);\n      if (!Fp.isValid(x)) throw new Error('bad point: is not on curve, wrong x');\n      const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n      let y: T;\n      try {\n        y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n      } catch (sqrtError) {\n        const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n        throw new Error('bad point: is not on curve, sqrt error' + err);\n      }\n      assertCompressionIsSupported();\n      const evenY = Fp.isOdd!(y);\n      const evenH = (head & 1) === 1; // ECDSA-specific\n      if (evenH !== evenY) y = Fp.neg(y);\n      return { x, y };\n    } else if (length === uncomp && head === 0x04) {\n      // TODO: more checks\n      const L = Fp.BYTES;\n      const x = Fp.fromBytes(tail.subarray(0, L));\n      const y = Fp.fromBytes(tail.subarray(L, L * 2));\n      if (!isValidXY(x, y)) throw new Error('bad point: is not on curve');\n      return { x, y };\n    } else {\n      throw new Error(\n        `bad point: got length ${length}, expected compressed=${comp} or uncompressed=${uncomp}`\n      );\n    }\n  }\n\n  const encodePoint = extraOpts.toBytes || pointToBytes;\n  const decodePoint = extraOpts.fromBytes || pointFromBytes;\n  function weierstrassEquation(x: T): T {\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x\u00B2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, CURVE.a)), CURVE.b); // x\u00B3 + a * x + b\n  }\n\n  // TODO: move top-level\n  /** Checks whether equation holds for given x, y: y\u00B2 == x\u00B3 + ax + b */\n  function isValidXY(x: T, y: T): boolean {\n    const left = Fp.sqr(y); // y\u00B2\n    const right = weierstrassEquation(x); // x\u00B3 + ax + b\n    return Fp.eql(left, right);\n  }\n\n  // Validate whether the passed curve params are valid.\n  // Test 1: equation y\u00B2 = x\u00B3 + ax + b should work for generator point.\n  if (!isValidXY(CURVE.Gx, CURVE.Gy)) throw new Error('bad curve params: generator point');\n\n  // Test 2: discriminant \u0394 part should be non-zero: 4a\u00B3 + 27b\u00B2 != 0.\n  // Guarantees curve is genus-1, smooth (non-singular).\n  const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n  const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n  if (Fp.is0(Fp.add(_4a3, _27b2))) throw new Error('bad curve params: a or b');\n\n  /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n  function acoord(title: string, n: T, banZero = false) {\n    if (!Fp.isValid(n) || (banZero && Fp.is0(n))) throw new Error(`bad point coordinate ${title}`);\n    return n;\n  }\n\n  function aprjpoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('Weierstrass Point expected');\n  }\n\n  function splitEndoScalarN(k: bigint) {\n    if (!endo || !endo.basises) throw new Error('no endo');\n    return _splitEndoScalar(k, endo.basises, Fn.ORDER);\n  }\n\n  // Memoized toAffine / validity check. They are heavy. Points are immutable.\n\n  // Converts Projective point to affine (x, y) coordinates.\n  // Can accept precomputed Z^-1 - for example, from invertBatch.\n  // (X, Y, Z) \u220B (x=X/Z, y=Y/Z)\n  const toAffineMemo = memoized((p: Point, iz?: T): AffinePoint<T> => {\n    const { X, Y, Z } = p;\n    // Fast-path for normalized points\n    if (Fp.eql(Z, Fp.ONE)) return { x: X, y: Y };\n    const is0 = p.is0();\n    // If invZ was 0, we return zero point. However we still want to execute\n    // all operations, so we replace invZ with a random number, 1.\n    if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(Z);\n    const x = Fp.mul(X, iz);\n    const y = Fp.mul(Y, iz);\n    const zz = Fp.mul(Z, iz);\n    if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n    if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n    return { x, y };\n  });\n  // NOTE: on exception this will crash 'cached' and no value will be set.\n  // Otherwise true will be return\n  const assertValidMemo = memoized((p: Point) => {\n    if (p.is0()) {\n      // (0, 1, 0) aka ZERO is invalid in most contexts.\n      // In BLS, ZERO can be serialized, so we allow it.\n      // (0, 0, 0) is invalid representation of ZERO.\n      if (extraOpts.allowInfinityPoint && !Fp.is0(p.Y)) return;\n      throw new Error('bad point: ZERO');\n    }\n    // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n    const { x, y } = p.toAffine();\n    if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not field elements');\n    if (!isValidXY(x, y)) throw new Error('bad point: equation left != right');\n    if (!p.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    return true;\n  });\n\n  function finishEndo(\n    endoBeta: EndomorphismOpts['beta'],\n    k1p: Point,\n    k2p: Point,\n    k1neg: boolean,\n    k2neg: boolean\n  ) {\n    k2p = new Point(Fp.mul(k2p.X, endoBeta), k2p.Y, k2p.Z);\n    k1p = negateCt(k1neg, k1p);\n    k2p = negateCt(k2neg, k2p);\n    return k1p.add(k2p);\n  }\n\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) \u220B (x=X/Z, y=Y/Z).\n   * Default Point works in 2d / affine coordinates: (x, y).\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements WeierstrassPoint<T> {\n    // base / generator point\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    // math field\n    static readonly Fp = Fp;\n    // scalar field\n    static readonly Fn = Fn;\n\n    readonly X: T;\n    readonly Y: T;\n    readonly Z: T;\n\n    /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n    constructor(X: T, Y: T, Z: T) {\n      this.X = acoord('x', X);\n      this.Y = acoord('y', Y, true);\n      this.Z = acoord('z', Z);\n      Object.freeze(this);\n    }\n\n    static CURVE(): WeierstrassOpts<T> {\n      return CURVE;\n    }\n\n    /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n      if (Fp.is0(x) && Fp.is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    static fromBytes(bytes: Uint8Array): Point {\n      const P = Point.fromAffine(decodePoint(abytes(bytes, undefined, 'point')));\n      P.assertValidity();\n      return P;\n    }\n\n    static fromHex(hex: string): Point {\n      return Point.fromBytes(hexToBytes(hex));\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     *\n     * @param windowSize\n     * @param isLazy true will defer table computation until the first multiplication\n     * @returns\n     */\n    precompute(windowSize: number = 8, isLazy = true): Point {\n      wnaf.createCache(this, windowSize);\n      if (!isLazy) this.multiply(_3n); // random number\n      return this;\n    }\n\n    // TODO: return `this`\n    /** A point on curve is valid if it conforms to equation. */\n    assertValidity(): void {\n      assertValidMemo(this);\n    }\n\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (!Fp.isOdd) throw new Error(\"Field doesn't support isOdd\");\n      return !Fp.isOdd(y);\n    }\n\n    /** Compare one point to another. */\n    equals(other: Point): boolean {\n      aprjpoint(other);\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      const { X: X2, Y: Y2, Z: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n    negate(): Point {\n      return new Point(this.X, Fp.neg(this.Y), this.Z);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      aprjpoint(other);\n      const { X: X1, Y: Y1, Z: Z1 } = this;\n      const { X: X2, Y: Y2, Z: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      const { endo } = extraOpts;\n      if (!Fn.isValidNot0(scalar)) throw new Error('invalid scalar: out of range'); // 0 is invalid\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const mul = (n: bigint) => wnaf.cached(this, n, (p) => normalizeZ(Point, p));\n      /** See docs for {@link EndomorphismOpts} */\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(scalar);\n        const { p: k1p, f: k1f } = mul(k1);\n        const { p: k2p, f: k2f } = mul(k2);\n        fake = k1f.add(k2f);\n        point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n      } else {\n        const { p, f } = mul(scalar);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return normalizeZ(Point, [point, fake])[0];\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed secret key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(sc: bigint): Point {\n      const { endo } = extraOpts;\n      const p = this as Point;\n      if (!Fn.isValid(sc)) throw new Error('invalid scalar: out of range'); // 0 is valid\n      if (sc === _0n || p.is0()) return Point.ZERO; // 0\n      if (sc === _1n) return p; // 1\n      if (wnaf.hasCache(this)) return this.multiply(sc); // precomputes\n      // We don't have method for double scalar multiplication (aP + bQ):\n      // Even with using Strauss-Shamir trick, it's 35% slower than na\u00EFve mul+add.\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = splitEndoScalarN(sc);\n        const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2); // 30% faster vs wnaf.unsafe\n        return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n      } else {\n        return wnaf.unsafe(p, sc);\n      }\n    }\n\n    /**\n     * Converts Projective point to affine (x, y) coordinates.\n     * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n     */\n    toAffine(invertedZ?: T): AffinePoint<T> {\n      return toAffineMemo(this, invertedZ);\n    }\n\n    /**\n     * Checks whether Point is free of torsion elements (is in prime subgroup).\n     * Always torsion-free for cofactor=1 curves.\n     */\n    isTorsionFree(): boolean {\n      const { isTorsionFree } = extraOpts;\n      if (cofactor === _1n) return true;\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      return wnaf.unsafe(this, CURVE_ORDER).is0();\n    }\n\n    clearCofactor(): Point {\n      const { clearCofactor } = extraOpts;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    isSmallOrder(): boolean {\n      // can we use this.clearCofactor()?\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    toBytes(isCompressed = true): Uint8Array {\n      abool(isCompressed, 'isCompressed');\n      this.assertValidity();\n      return encodePoint(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return bytesToHex(this.toBytes(isCompressed));\n    }\n\n    toString() {\n      return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n    }\n  }\n  const bits = Fn.BITS;\n  const wnaf = new wNAF(Point, extraOpts.endo ? Math.ceil(bits / 2) : bits);\n  Point.BASE.precompute(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n  return Point;\n}\n\n/** Methods of ECDSA signature instance. */\nexport interface ECDSASignature {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  addRecoveryBit(recovery: number): ECDSASignature & { readonly recovery: number };\n  hasHighS(): boolean;\n  recoverPublicKey(messageHash: Uint8Array): WeierstrassPoint<bigint>;\n  toBytes(format?: string): Uint8Array;\n  toHex(format?: string): string;\n}\n/** Methods of ECDSA signature constructor. */\nexport type ECDSASignatureCons = {\n  new (r: bigint, s: bigint, recovery?: number): ECDSASignature;\n  fromBytes(bytes: Uint8Array, format?: ECDSASignatureFormat): ECDSASignature;\n  fromHex(hex: string, format?: ECDSASignatureFormat): ECDSASignature;\n};\n\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY: boolean): Uint8Array {\n  return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(\n  Fp: IField<T>,\n  Z: T\n): (u: T, v: T) => { isValid: boolean; value: T } {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n): (u: T) => { x: T; y: T } {\n  validateField(Fp);\n  const { A, B, Z } = opts;\n  if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n  if (!Fp.isOdd) throw new Error('Field does not have .isOdd()');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n    x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n\nfunction getWLengths<T>(Fp: IField<T>, Fn: IField<bigint>) {\n  return {\n    secretKey: Fn.BYTES,\n    publicKey: 1 + Fp.BYTES,\n    publicKeyUncompressed: 1 + 2 * Fp.BYTES,\n    publicKeyHasPrefix: true,\n    signature: 2 * Fn.BYTES,\n  };\n}\n\n/**\n * Sometimes users only need getPublicKey, getSharedSecret, and secret key handling.\n * This helper ensures no signature functionality is present. Less code, smaller bundle size.\n */\nexport function ecdh(\n  Point: WeierstrassPointCons<bigint>,\n  ecdhOpts: { randomBytes?: (bytesLength?: number) => Uint8Array } = {}\n): ECDH {\n  const { Fn } = Point;\n  const randomBytes_ = ecdhOpts.randomBytes || wcRandomBytes;\n  const lengths = Object.assign(getWLengths(Point.Fp, Fn), { seed: getMinHashLength(Fn.ORDER) });\n\n  function isValidSecretKey(secretKey: Uint8Array) {\n    try {\n      const num = Fn.fromBytes(secretKey);\n      return Fn.isValidNot0(num);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  function isValidPublicKey(publicKey: Uint8Array, isCompressed?: boolean): boolean {\n    const { publicKey: comp, publicKeyUncompressed } = lengths;\n    try {\n      const l = publicKey.length;\n      if (isCompressed === true && l !== comp) return false;\n      if (isCompressed === false && l !== publicKeyUncompressed) return false;\n      return !!Point.fromBytes(publicKey);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Produces cryptographically secure secret key from random of size\n   * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n   */\n  function randomSecretKey(seed = randomBytes_(lengths.seed)): Uint8Array {\n    return mapHashToField(abytes(seed, lengths.seed, 'seed'), Fn.ORDER);\n  }\n\n  /**\n   * Computes public key for a secret key. Checks for validity of the secret key.\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(secretKey: Uint8Array, isCompressed = true): Uint8Array {\n    return Point.BASE.multiply(Fn.fromBytes(secretKey)).toBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: Uint8Array): boolean | undefined {\n    const { secretKey, publicKey, publicKeyUncompressed } = lengths;\n    if (!isBytes(item)) return undefined;\n    if (('_lengths' in Fn && Fn._lengths) || secretKey === publicKey) return undefined;\n    const l = abytes(item, undefined, 'key').length;\n    return l === publicKey || l === publicKeyUncompressed;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from secret key A and public key B.\n   * Checks: 1) secret key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(\n    secretKeyA: Uint8Array,\n    publicKeyB: Uint8Array,\n    isCompressed = true\n  ): Uint8Array {\n    if (isProbPub(secretKeyA) === true) throw new Error('first arg must be private key');\n    if (isProbPub(publicKeyB) === false) throw new Error('second arg must be public key');\n    const s = Fn.fromBytes(secretKeyA);\n    const b = Point.fromBytes(publicKeyB); // checks for being on-curve\n    return b.multiply(s).toBytes(isCompressed);\n  }\n\n  const utils = {\n    isValidSecretKey,\n    isValidPublicKey,\n    randomSecretKey,\n  };\n  const keygen = createKeygen(randomSecretKey, getPublicKey);\n\n  return Object.freeze({ getPublicKey, getSharedSecret, keygen, Point, utils, lengths });\n}\n\n/**\n * Creates ECDSA signing interface for given elliptic curve `Point` and `hash` function.\n *\n * @param Point created using {@link weierstrass} function\n * @param hash used for 1) message prehash-ing 2) k generation in `sign`, using hmac_drbg(hash)\n * @param ecdsaOpts rarely needed, see {@link ECDSAOpts}\n *\n * @example\n * ```js\n * const p256_Point = weierstrass(...);\n * const p256_sha256 = ecdsa(p256_Point, sha256);\n * const p256_sha224 = ecdsa(p256_Point, sha224);\n * const p256_sha224_r = ecdsa(p256_Point, sha224, { randomBytes: (length) => { ... } });\n * ```\n */\nexport function ecdsa(\n  Point: WeierstrassPointCons<bigint>,\n  hash: CHash,\n  ecdsaOpts: ECDSAOpts = {}\n): ECDSA {\n  ahash(hash);\n  validateObject(\n    ecdsaOpts,\n    {},\n    {\n      hmac: 'function',\n      lowS: 'boolean',\n      randomBytes: 'function',\n      bits2int: 'function',\n      bits2int_modN: 'function',\n    }\n  );\n  ecdsaOpts = Object.assign({}, ecdsaOpts);\n  const randomBytes = ecdsaOpts.randomBytes || wcRandomBytes;\n  const hmac = ecdsaOpts.hmac || ((key, msg) => nobleHmac(hash, key, msg));\n\n  const { Fp, Fn } = Point;\n  const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n  const { keygen, getPublicKey, getSharedSecret, utils, lengths } = ecdh(Point, ecdsaOpts);\n  const defaultSigOpts: Required<ECDSASignOpts> = {\n    prehash: true,\n    lowS: typeof ecdsaOpts.lowS === 'boolean' ? ecdsaOpts.lowS : true,\n    format: 'compact' as ECDSASignatureFormat,\n    extraEntropy: false,\n  };\n  const hasLargeCofactor = CURVE_ORDER * _2n < Fp.ORDER; // Won't CURVE().h > 2n be more effective?\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n  function validateRS(title: string, num: bigint): bigint {\n    if (!Fn.isValidNot0(num))\n      throw new Error(`invalid signature ${title}: out of range 1..Point.Fn.ORDER`);\n    return num;\n  }\n  function assertSmallCofactor(): void {\n    // ECDSA recovery is hard for cofactor > 1 curves.\n    // In sign, `r = q.x mod n`, and here we recover q.x from r.\n    // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n    // However, for cofactor>1, r+n may not get q.x:\n    // r+n*i would need to be done instead where i is unknown.\n    // To easily get i, we either need to:\n    // a. increase amount of valid recid values (4, 5...); OR\n    // b. prohibit non-prime-order signatures (recid > 1).\n    if (hasLargeCofactor)\n      throw new Error('\"recovered\" sig type is not supported for cofactor >2 curves');\n  }\n  function validateSigLength(bytes: Uint8Array, format: ECDSASignatureFormat) {\n    validateSigFormat(format);\n    const size = lengths.signature!;\n    const sizer = format === 'compact' ? size : format === 'recovered' ? size + 1 : undefined;\n    return abytes(bytes, sizer);\n  }\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports compact, recovered & DER representations.\n   */\n  class Signature implements ECDSASignature {\n    readonly r: bigint;\n    readonly s: bigint;\n    readonly recovery?: number;\n\n    constructor(r: bigint, s: bigint, recovery?: number) {\n      this.r = validateRS('r', r); // r in [1..N-1];\n      this.s = validateRS('s', s); // s in [1..N-1];\n      if (recovery != null) {\n        assertSmallCofactor();\n        if (![0, 1, 2, 3].includes(recovery)) throw new Error('invalid recovery id');\n        this.recovery = recovery;\n      }\n      Object.freeze(this);\n    }\n\n    static fromBytes(\n      bytes: Uint8Array,\n      format: ECDSASignatureFormat = defaultSigOpts.format\n    ): Signature {\n      validateSigLength(bytes, format);\n      let recid: number | undefined;\n      if (format === 'der') {\n        const { r, s } = DER.toSig(abytes(bytes));\n        return new Signature(r, s);\n      }\n      if (format === 'recovered') {\n        recid = bytes[0];\n        format = 'compact';\n        bytes = bytes.subarray(1);\n      }\n      const L = lengths.signature! / 2;\n      const r = bytes.subarray(0, L);\n      const s = bytes.subarray(L, L * 2);\n      return new Signature(Fn.fromBytes(r), Fn.fromBytes(s), recid);\n    }\n\n    static fromHex(hex: string, format?: ECDSASignatureFormat) {\n      return this.fromBytes(hexToBytes(hex), format);\n    }\n\n    private assertRecovery(): number {\n      const { recovery } = this;\n      if (recovery == null) throw new Error('invalid recovery id: must be present');\n      return recovery;\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(messageHash: Uint8Array): WeierstrassPoint<bigint> {\n      const { r, s } = this;\n      const recovery = this.assertRecovery();\n      const radj = recovery === 2 || recovery === 3 ? r + CURVE_ORDER : r;\n      if (!Fp.isValid(radj)) throw new Error('invalid recovery id: sig.r+curve.n != R.x');\n      const x = Fp.toBytes(radj);\n      const R = Point.fromBytes(concatBytes(pprefix((recovery & 1) === 0), x));\n      const ir = Fn.inv(radj); // r^-1\n      const h = bits2int_modN(abytes(messageHash, undefined, 'msgHash')); // Truncate hash\n      const u1 = Fn.create(-h * ir); // -hr^-1\n      const u2 = Fn.create(s * ir); // sr^-1\n      // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n      const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n      if (Q.is0()) throw new Error('invalid recovery: point at infinify');\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    toBytes(format: ECDSASignatureFormat = defaultSigOpts.format) {\n      validateSigFormat(format);\n      if (format === 'der') return hexToBytes(DER.hexFromSig(this));\n      const { r, s } = this;\n      const rb = Fn.toBytes(r);\n      const sb = Fn.toBytes(s);\n      if (format === 'recovered') {\n        assertSmallCofactor();\n        return concatBytes(Uint8Array.of(this.assertRecovery()), rb, sb);\n      }\n      return concatBytes(rb, sb);\n    }\n\n    toHex(format?: ECDSASignatureFormat) {\n      return bytesToHex(this.toBytes(format));\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    ecdsaOpts.bits2int ||\n    function bits2int_def(bytes: Uint8Array): bigint {\n      // Our custom check \"just in case\", for protection against DoS\n      if (bytes.length > 8192) throw new Error('input is too large');\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    ecdsaOpts.bits2int_modN ||\n    function bits2int_modN_def(bytes: Uint8Array): bigint {\n      return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // Pads output with zero as per spec\n  const ORDER_MASK = bitMask(fnBits);\n  /** Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`. */\n  function int2octets(num: bigint): Uint8Array {\n    // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n    aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n    return Fn.toBytes(num);\n  }\n\n  function validateMsgAndHash(message: Uint8Array, prehash: boolean) {\n    abytes(message, undefined, 'message');\n    return prehash ? abytes(hash(message), undefined, 'prehashed message') : message;\n  }\n\n  /**\n   * Steps A, D of RFC6979 3.2.\n   * Creates RFC6979 seed; converts msg/privKey to numbers.\n   * Used only in sign, not in verify.\n   *\n   * Warning: we cannot assume here that message has same amount of bytes as curve order,\n   * this will be invalid at least for P521. Also it can be bigger for P224 + SHA256.\n   */\n  function prepSig(message: Uint8Array, secretKey: Uint8Array, opts: ECDSASignOpts) {\n    const { lowS, prehash, extraEntropy } = validateSigOpts(opts, defaultSigOpts);\n    message = validateMsgAndHash(message, prehash); // RFC6979 3.2 A: h1 = H(m)\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(message);\n    const d = Fn.fromBytes(secretKey); // validate secret key, convert to bigint\n    if (!Fn.isValidNot0(d)) throw new Error('invalid private key');\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (extraEntropy != null && extraEntropy !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      // gen random bytes OR pass as-is\n      const e = extraEntropy === true ? randomBytes(lengths.secretKey) : extraEntropy;\n      seedArgs.push(abytes(e, undefined, 'extraEntropy')); // check for being bytes\n    }\n    const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    // To transform k => Signature:\n    // q = k\u22C5G\n    // r = q.x mod n\n    // s = k^-1(m + rd) mod n\n    // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n    // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n    // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n    function k2sig(kBytes: Uint8Array): Signature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      // Important: all mod() calls here must be done over N\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!Fn.isValidNot0(k)) return; // Valid scalars (including k) must be in 1..N-1\n      const ik = Fn.inv(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = k\u22C5G\n      const r = Fn.create(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      const s = Fn.create(ik * Fn.create(m + r * d)); // s = k^-1(m + rd) mod n\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3 when q.x>n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = Fn.neg(s); // if lowS was passed, ensure s is always in the bottom half of N\n        recovery ^= 1;\n      }\n      return new Signature(r, normS, hasLargeCofactor ? undefined : recovery);\n    }\n    return { seed, k2sig };\n  }\n\n  /**\n   * Signs message hash with a secret key.\n   *\n   * ```\n   * sign(m, d) where\n   *   k = rfc6979_hmac_drbg(m, d)\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr) / k mod n\n   * ```\n   */\n  function sign(message: Uint8Array, secretKey: Uint8Array, opts: ECDSASignOpts = {}): Uint8Array {\n    const { seed, k2sig } = prepSig(message, secretKey, opts); // Steps A, D of RFC6979 3.2.\n    const drbg = createHmacDrbg<Signature>(hash.outputLen, Fn.BYTES, hmac);\n    const sig = drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    return sig.toBytes(opts.format);\n  }\n\n  /**\n   * Verifies a signature against message and public key.\n   * Rejects lowS signatures by default: see {@link ECDSAVerifyOpts}.\n   * Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   u1 = hs^-1 mod n\n   *   u2 = rs^-1 mod n\n   *   R = u1\u22C5G + u2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Uint8Array,\n    message: Uint8Array,\n    publicKey: Uint8Array,\n    opts: ECDSAVerifyOpts = {}\n  ): boolean {\n    const { lowS, prehash, format } = validateSigOpts(opts, defaultSigOpts);\n    publicKey = abytes(publicKey, undefined, 'publicKey');\n    message = validateMsgAndHash(message, prehash);\n    if (!isBytes(signature as any)) {\n      const end = signature instanceof Signature ? ', use sig.toBytes()' : '';\n      throw new Error('verify expects Uint8Array signature' + end);\n    }\n    validateSigLength(signature, format); // execute this twice because we want loud error\n    try {\n      const sig = Signature.fromBytes(signature, format);\n      const P = Point.fromBytes(publicKey);\n      if (lowS && sig.hasHighS()) return false;\n      const { r, s } = sig;\n      const h = bits2int_modN(message); // mod n, not mod p\n      const is = Fn.inv(s); // s^-1 mod n\n      const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n      const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n      const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2)); // u1\u22C5G + u2\u22C5P\n      if (R.is0()) return false;\n      const v = Fn.create(R.x); // v = r.x mod n\n      return v === r;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function recoverPublicKey(\n    signature: Uint8Array,\n    message: Uint8Array,\n    opts: ECDSARecoverOpts = {}\n  ): Uint8Array {\n    const { prehash } = validateSigOpts(opts, defaultSigOpts);\n    message = validateMsgAndHash(message, prehash);\n    return Signature.fromBytes(signature, 'recovered').recoverPublicKey(message).toBytes();\n  }\n\n  return Object.freeze({\n    keygen,\n    getPublicKey,\n    getSharedSecret,\n    utils,\n    lengths,\n    Point,\n    sign,\n    verify,\n    recoverPublicKey,\n    Signature,\n    hash,\n  }) satisfies Signer;\n}\n", "/**\n * SECG secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Belongs to Koblitz curves: it has efficiently-computable GLV endomorphism \u03C8,\n * check out {@link EndomorphismOpts}. Seems to be rigid (not backdoored).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { randomBytes } from '@noble/hashes/utils.js';\nimport { createKeygen, type CurveLengths } from './abstract/curve.ts';\nimport { createHasher, type H2CHasher, isogenyMap } from './abstract/hash-to-curve.ts';\nimport { Field, mapHashToField, pow2 } from './abstract/modular.ts';\nimport {\n  type ECDSA,\n  ecdsa,\n  type EndomorphismOpts,\n  mapToCurveSimpleSWU,\n  type WeierstrassPoint as PointType,\n  weierstrass,\n  type WeierstrassOpts,\n  type WeierstrassPointCons,\n} from './abstract/weierstrass.ts';\nimport { abytes, asciiToBytes, bytesToNumberBE, concatBytes } from './utils.ts';\n\n// Seems like generator was produced from some seed:\n// `Pointk1.BASE.multiply(Pointk1.Fn.inv(2n, N)).toAffine().x`\n// // gives short x 0x3b78ce563f89a0ed9414f5aa28ad0d96d6795f9c63n\nconst secp256k1_CURVE: WeierstrassOpts<bigint> = {\n  p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n  n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n  h: BigInt(1),\n  a: BigInt(0),\n  b: BigInt(7),\n  Gx: BigInt('0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n  Gy: BigInt('0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'),\n};\n\nconst secp256k1_ENDO: EndomorphismOpts = {\n  beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n  basises: [\n    [BigInt('0x3086d221a7d46bcde86c90e49284eb15'), -BigInt('0xe4437ed6010e88286f547fa90abfe4c3')],\n    [BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'), BigInt('0x3086d221a7d46bcde86c90e49284eb15')],\n  ],\n};\n\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _2n = /* @__PURE__ */ BigInt(2);\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1_CURVE.p;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fpk1.eql(Fpk1.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fpk1 = Field(secp256k1_CURVE.p, { sqrt: sqrtMod });\nconst Pointk1 = /* @__PURE__ */ weierstrass(secp256k1_CURVE, {\n  Fp: Fpk1,\n  endo: secp256k1_ENDO,\n});\n\n/**\n * secp256k1 curve: ECDSA and ECDH methods.\n *\n * Uses sha256 to hash messages. To use a different hash,\n * pass `{ prehash: false }` to sign / verify.\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1.js';\n * const { secretKey, publicKey } = secp256k1.keygen();\n * // const publicKey = secp256k1.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello noble');\n * const sig = secp256k1.sign(msg, secretKey);\n * const isValid = secp256k1.verify(sig, msg, publicKey);\n * // const sigKeccak = secp256k1.sign(keccak256(msg), secretKey, { prehash: false });\n * ```\n */\nexport const secp256k1: ECDSA = /* @__PURE__ */ ecdsa(Pointk1, sha256);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(asciiToBytes(tag));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toBytes(true).slice(1);\nconst hasEven = (y: bigint) => y % _2n === _0n;\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: Uint8Array) {\n  const { Fn, BASE } = Pointk1;\n  const d_ = Fn.fromBytes(priv);\n  const p = BASE.multiply(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = hasEven(p.y) ? d_ : Fn.neg(d_);\n  return { scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  const Fp = Fpk1;\n  if (!Fp.isValidNot0(x)) throw new Error('invalid x: Fail if x \u2265 p');\n  const xx = Fp.create(x * x);\n  const c = Fp.create(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = Fp.sqrt(c); // Let y = c^(p+1)/4 mod p. Same as sqrt().\n  // Return the unique point P such that x(P) = x and\n  // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  if (!hasEven(y)) y = Fp.neg(y);\n  const p = Pointk1.fromAffine({ x, y });\n  p.assertValidity();\n  return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return Pointk1.Fn.create(num(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(secretKey: Uint8Array): Uint8Array {\n  return schnorrGetExtPubKey(secretKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Uint8Array,\n  secretKey: Uint8Array,\n  auxRand: Uint8Array = randomBytes(32)\n): Uint8Array {\n  const { Fn } = Pointk1;\n  const m = abytes(message, undefined, 'message');\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(secretKey); // checks for isWithinCurveOrder\n  const a = abytes(auxRand, 32, 'auxRand'); // Auxiliary random data a: a 32-byte array\n  const t = Fn.toBytes(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  // Let k' = int(rand) mod n. Fail if k' = 0. Let R = k'\u22C5G\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(rand);\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(Fn.toBytes(Fn.create(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Uint8Array, message: Uint8Array, publicKey: Uint8Array): boolean {\n  const { Fp, Fn, BASE } = Pointk1;\n  const sig = abytes(signature, 64, 'signature');\n  const m = abytes(message, undefined, 'message');\n  const pub = abytes(publicKey, 32, 'publicKey');\n  try {\n    const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!Fp.isValidNot0(r)) return false;\n    const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!Fn.isValidNot0(s)) return false;\n\n    const e = challenge(Fn.toBytes(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    // R = s\u22C5G - e\u22C5P, where -eP == (n-e)P\n    const R = BASE.multiplyUnsafe(s).add(P.multiplyUnsafe(Fn.neg(e)));\n    const { x, y } = R.toAffine();\n    // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n    if (R.is0() || !hasEven(y) || x !== r) return false;\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport type SecpSchnorr = {\n  keygen: (seed?: Uint8Array) => { secretKey: Uint8Array; publicKey: Uint8Array };\n  getPublicKey: typeof schnorrGetPublicKey;\n  sign: typeof schnorrSign;\n  verify: typeof schnorrVerify;\n  Point: WeierstrassPointCons<bigint>;\n  utils: {\n    randomSecretKey: (seed?: Uint8Array) => Uint8Array;\n    pointToBytes: (point: PointType<bigint>) => Uint8Array;\n    lift_x: typeof lift_x;\n    taggedHash: typeof taggedHash;\n  };\n  lengths: CurveLengths;\n};\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1.js';\n * const { secretKey, publicKey } = schnorr.keygen();\n * // const publicKey = schnorr.getPublicKey(secretKey);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, secretKey);\n * const isValid = schnorr.verify(sig, msg, publicKey);\n * ```\n */\nexport const schnorr: SecpSchnorr = /* @__PURE__ */ (() => {\n  const size = 32;\n  const seedLength = 48;\n  const randomSecretKey = (seed = randomBytes(seedLength)): Uint8Array => {\n    return mapHashToField(seed, secp256k1_CURVE.n);\n  };\n  return {\n    keygen: createKeygen(randomSecretKey, schnorrGetPublicKey),\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    Point: Pointk1,\n    utils: {\n      randomSecretKey,\n      taggedHash,\n      lift_x,\n      pointToBytes,\n    },\n    lengths: {\n      secretKey: size,\n      publicKey: size,\n      publicKeyHasPrefix: false,\n      signature: size * 2,\n      seed: seedLength,\n    },\n  };\n})();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fpk1,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n  }))();\n\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher: H2CHasher<WeierstrassPointCons<bigint>> = /* @__PURE__ */ (() =>\n  createHasher(\n    Pointk1,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fpk1.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\n", "import { secp256k1 as secp } from '@noble/curves/secp256k1.js'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { SigningError, VerificationError } from '../../errors.js'\nimport { isPromise } from '../../util.js'\nimport type { AbortOptions } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst PUBLIC_KEY_BYTE_LENGTH = 33\nconst PRIVATE_KEY_BYTE_LENGTH = 32\n\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength }\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength }\n\n/**\n * Hash and sign message with private key\n */\nexport function hashAndSign (key: Uint8Array, msg: Uint8Array | Uint8ArrayList, options?: AbortOptions): Uint8Array | Promise<Uint8Array> {\n  const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray())\n\n  if (isPromise(p)) {\n    return p\n      .then(({ digest }) => {\n        options?.signal?.throwIfAborted()\n        return secp.sign(digest, key, {\n          prehash: false,\n          format: 'der'\n        })\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          throw err\n        }\n\n        throw new SigningError(String(err))\n      })\n  }\n\n  try {\n    return secp.sign(p.digest, key, {\n      prehash: false,\n      format: 'der'\n    })\n  } catch (err) {\n    throw new SigningError(String(err))\n  }\n}\n\n/**\n * Hash message and verify signature with public key\n */\nexport function hashAndVerify (key: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList, options?: AbortOptions): boolean | Promise<boolean> {\n  const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray())\n\n  if (isPromise(p)) {\n    return p\n      .then(({ digest }) => {\n        options?.signal?.throwIfAborted()\n        return secp.verify(sig, digest, key, {\n          prehash: false,\n          format: 'der'\n        })\n      })\n      .catch(err => {\n        if (err.name === 'AbortError') {\n          throw err\n        }\n\n        throw new VerificationError(String(err))\n      })\n  }\n\n  try {\n    options?.signal?.throwIfAborted()\n    return secp.verify(sig, p.digest, key, {\n      prehash: false,\n      format: 'der'\n    })\n  } catch (err) {\n    throw new VerificationError(String(err))\n  }\n}\n", "import { base58btc } from 'multiformats/bases/base58'\nimport { CID } from 'multiformats/cid'\nimport { identity } from 'multiformats/hashes/identity'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { publicKeyToProtobuf } from '../index.js'\nimport { validateSecp256k1PublicKey, compressSecp256k1PublicKey, computeSecp256k1PublicKey, validateSecp256k1PrivateKey } from './utils.js'\nimport { hashAndVerify, hashAndSign } from './index.js'\nimport type { Secp256k1PublicKey as Secp256k1PublicKeyInterface, Secp256k1PrivateKey as Secp256k1PrivateKeyInterface, AbortOptions } from '@libp2p/interface'\nimport type { Digest } from 'multiformats/hashes/digest'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class Secp256k1PublicKey implements Secp256k1PublicKeyInterface {\n  public readonly type = 'secp256k1'\n  public readonly raw: Uint8Array\n  public readonly _key: Uint8Array\n\n  constructor (key: Uint8Array) {\n    this._key = validateSecp256k1PublicKey(key)\n    this.raw = compressSecp256k1PublicKey(this._key)\n  }\n\n  toMultihash (): Digest<0x0, number> {\n    return identity.digest(publicKeyToProtobuf(this))\n  }\n\n  toCID (): CID<unknown, 114, 0x0, 1> {\n    return CID.createV1(114, this.toMultihash())\n  }\n\n  toString (): string {\n    return base58btc.encode(this.toMultihash().bytes).substring(1)\n  }\n\n  equals (key: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array, options?: AbortOptions): boolean {\n    return hashAndVerify(this._key, sig, data, options)\n  }\n}\n\nexport class Secp256k1PrivateKey implements Secp256k1PrivateKeyInterface {\n  public readonly type = 'secp256k1'\n  public readonly raw: Uint8Array\n  public readonly publicKey: Secp256k1PublicKey\n\n  constructor (key: Uint8Array, publicKey?: Uint8Array) {\n    this.raw = validateSecp256k1PrivateKey(key)\n    this.publicKey = new Secp256k1PublicKey(publicKey ?? computeSecp256k1PublicKey(key))\n  }\n\n  equals (key?: any): boolean {\n    if (key == null || !(key.raw instanceof Uint8Array)) {\n      return false\n    }\n\n    return uint8ArrayEquals(this.raw, key.raw)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList, options?: AbortOptions): Uint8Array | Promise<Uint8Array> {\n    return hashAndSign(this.raw, message, options)\n  }\n}\n", "import { InvalidPrivateKeyError, InvalidPublicKeyError } from '@libp2p/interface'\nimport { secp256k1 as secp } from '@noble/curves/secp256k1.js'\nimport { Secp256k1PublicKey as Secp256k1PublicKeyClass, Secp256k1PrivateKey as Secp256k1PrivateKeyClass } from './secp256k1.js'\nimport type { Secp256k1PublicKey, Secp256k1PrivateKey } from '@libp2p/interface'\n\nconst PRIVATE_KEY_BYTE_LENGTH = 32\n\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength }\n\nexport function unmarshalSecp256k1PrivateKey (bytes: Uint8Array): Secp256k1PrivateKey {\n  return new Secp256k1PrivateKeyClass(bytes)\n}\n\nexport function unmarshalSecp256k1PublicKey (bytes: Uint8Array): Secp256k1PublicKey {\n  return new Secp256k1PublicKeyClass(bytes)\n}\n\nexport async function generateSecp256k1KeyPair (): Promise<Secp256k1PrivateKey> {\n  const privateKeyBytes = generateSecp256k1PrivateKey()\n  return new Secp256k1PrivateKeyClass(privateKeyBytes)\n}\n\nexport function compressSecp256k1PublicKey (key: Uint8Array): Uint8Array {\n  return secp.Point.fromBytes(key).toBytes()\n}\n\nexport function decompressSecp256k1PublicKey (key: Uint8Array): Uint8Array {\n  return secp.Point.fromBytes(key).toBytes(false)\n}\n\nexport function validateSecp256k1PrivateKey (key: Uint8Array): Uint8Array {\n  try {\n    secp.getPublicKey(key, true)\n\n    return key\n  } catch (err) {\n    throw new InvalidPrivateKeyError(String(err))\n  }\n}\n\nexport function validateSecp256k1PublicKey (key: Uint8Array): Uint8Array {\n  try {\n    secp.Point.fromBytes(key)\n\n    return key\n  } catch (err) {\n    throw new InvalidPublicKeyError(String(err))\n  }\n}\n\nexport function computeSecp256k1PublicKey (privateKey: Uint8Array): Uint8Array {\n  try {\n    return secp.getPublicKey(privateKey, true)\n  } catch (err) {\n    throw new InvalidPrivateKeyError(String(err))\n  }\n}\n\nexport function generateSecp256k1PrivateKey (): Uint8Array {\n  return secp.utils.randomSecretKey()\n}\n", "/**\n * @packageDocumentation\n *\n * ## Supported Key Types\n *\n * Currently the `'RSA'`, `'ed25519'`, and `secp256k1` types are supported, although ed25519 and secp256k1 keys support only signing and verification of messages.\n *\n * For encryption / decryption support, RSA keys should be used.\n */\n\nimport { InvalidParametersError, UnsupportedKeyTypeError } from '@libp2p/interface'\nimport { ECDSAPrivateKey as ECDSAPrivateKeyClass } from './ecdsa/ecdsa.js'\nimport { ECDSA_P_256_OID, ECDSA_P_384_OID, ECDSA_P_521_OID } from './ecdsa/index.js'\nimport { generateECDSAKeyPair, pkiMessageToECDSAPrivateKey, pkiMessageToECDSAPublicKey, unmarshalECDSAPrivateKey, unmarshalECDSAPublicKey } from './ecdsa/utils.js'\nimport { privateKeyLength as ed25519PrivateKeyLength, publicKeyLength as ed25519PublicKeyLength } from './ed25519/index.js'\nimport { generateEd25519KeyPair, generateEd25519KeyPairFromSeed, unmarshalEd25519PrivateKey, unmarshalEd25519PublicKey } from './ed25519/utils.js'\nimport * as pb from './keys.js'\nimport { decodeDer } from './rsa/der.js'\nimport { RSAES_PKCS1_V1_5_OID } from './rsa/index.js'\nimport { pkcs1ToRSAPrivateKey, pkixToRSAPublicKey, generateRSAKeyPair, pkcs1MessageToRSAPrivateKey, pkixMessageToRSAPublicKey, jwkToRSAPrivateKey } from './rsa/utils.js'\nimport { privateKeyLength as secp256k1PrivateKeyLength, publicKeyLength as secp256k1PublicKeyLength } from './secp256k1/index.js'\nimport { generateSecp256k1KeyPair, unmarshalSecp256k1PrivateKey, unmarshalSecp256k1PublicKey } from './secp256k1/utils.js'\nimport type { Curve } from './ecdsa/index.js'\nimport type { PrivateKey, PublicKey, KeyType, RSAPrivateKey, Secp256k1PrivateKey, Ed25519PrivateKey, Secp256k1PublicKey, Ed25519PublicKey, ECDSAPrivateKey, ECDSAPublicKey } from '@libp2p/interface'\nimport type { MultihashDigest } from 'multiformats'\nimport type { Digest } from 'multiformats/hashes/digest'\n\nexport { generateEphemeralKeyPair } from './ecdh/index.js'\nexport type { Curve } from './ecdh/index.js'\nexport type { ECDHKey, EnhancedKey, EnhancedKeyPair, ECDHKeyPair } from './interface.js'\nexport { keyStretcher } from './key-stretcher.js'\n\n/**\n * Generates a keypair of the given type and bitsize\n */\nexport async function generateKeyPair (type: 'Ed25519'): Promise<Ed25519PrivateKey>\nexport async function generateKeyPair (type: 'secp256k1'): Promise<Secp256k1PrivateKey>\nexport async function generateKeyPair (type: 'ECDSA', curve?: Curve): Promise<ECDSAPrivateKey>\nexport async function generateKeyPair (type: 'RSA', bits?: number): Promise<RSAPrivateKey>\nexport async function generateKeyPair (type: KeyType, bits?: number): Promise<PrivateKey>\nexport async function generateKeyPair (type: KeyType, bits?: number | string): Promise<unknown> {\n  if (type === 'Ed25519') {\n    return generateEd25519KeyPair()\n  }\n\n  if (type === 'secp256k1') {\n    return generateSecp256k1KeyPair()\n  }\n\n  if (type === 'RSA') {\n    return generateRSAKeyPair(toBits(bits))\n  }\n\n  if (type === 'ECDSA') {\n    return generateECDSAKeyPair(toCurve(bits))\n  }\n\n  throw new UnsupportedKeyTypeError()\n}\n\n/**\n * Generates a keypair of the given type from the passed seed.  Currently only\n * supports Ed25519 keys.\n *\n * Seed is a 32 byte uint8array\n */\nexport async function generateKeyPairFromSeed (type: 'Ed25519', seed: Uint8Array): Promise<Ed25519PrivateKey>\nexport async function generateKeyPairFromSeed <T extends KeyType> (type: T, seed: Uint8Array, bits?: number): Promise<never>\nexport async function generateKeyPairFromSeed (type: string, seed: Uint8Array): Promise<unknown> {\n  if (type !== 'Ed25519') {\n    throw new UnsupportedKeyTypeError('Seed key derivation only supported for Ed25519 keys')\n  }\n\n  return generateEd25519KeyPairFromSeed(seed)\n}\n\n/**\n * Converts a protobuf serialized public key into its representative object.\n *\n * For RSA public keys optionally pass the multihash digest of the public key if\n * it is known. If the digest is omitted it will be calculated which can be\n * expensive.\n *\n * For other key types the digest option is ignored.\n */\nexport function publicKeyFromProtobuf (buf: Uint8Array, digest?: Digest<18, number>): PublicKey {\n  const { Type, Data } = pb.PublicKey.decode(buf)\n  const data = Data ?? new Uint8Array()\n\n  switch (Type) {\n    case pb.KeyType.RSA:\n      return pkixToRSAPublicKey(data, digest)\n    case pb.KeyType.Ed25519:\n      return unmarshalEd25519PublicKey(data)\n    case pb.KeyType.secp256k1:\n      return unmarshalSecp256k1PublicKey(data)\n    case pb.KeyType.ECDSA:\n      return unmarshalECDSAPublicKey(data)\n    default:\n      throw new UnsupportedKeyTypeError()\n  }\n}\n\n/**\n * Creates a public key from the raw key bytes\n */\nexport function publicKeyFromRaw (buf: Uint8Array): PublicKey {\n  if (buf.byteLength === ed25519PublicKeyLength) {\n    return unmarshalEd25519PublicKey(buf)\n  } else if (buf.byteLength === secp256k1PublicKeyLength) {\n    return unmarshalSecp256k1PublicKey(buf)\n  }\n\n  const message = decodeDer(buf)\n  const ecdsaOid = message[1]?.[0]\n\n  if (ecdsaOid === ECDSA_P_256_OID || ecdsaOid === ECDSA_P_384_OID || ecdsaOid === ECDSA_P_521_OID) {\n    return pkiMessageToECDSAPublicKey(message)\n  }\n\n  if (message[0]?.[0] === RSAES_PKCS1_V1_5_OID) {\n    return pkixMessageToRSAPublicKey(message, buf)\n  }\n\n  throw new InvalidParametersError('Could not extract public key from raw bytes')\n}\n\n/**\n * Creates a public key from an identity multihash which contains a protobuf\n * encoded Ed25519 or secp256k1 public key.\n *\n * RSA keys are not supported as in practice we they are not stored in identity\n * multihash since the hash would be very large.\n */\nexport function publicKeyFromMultihash (digest: MultihashDigest<0x0>): Ed25519PublicKey | Secp256k1PublicKey | ECDSAPublicKey {\n  const { Type, Data } = pb.PublicKey.decode(digest.digest)\n  const data = Data ?? new Uint8Array()\n\n  switch (Type) {\n    case pb.KeyType.Ed25519:\n      return unmarshalEd25519PublicKey(data)\n    case pb.KeyType.secp256k1:\n      return unmarshalSecp256k1PublicKey(data)\n    case pb.KeyType.ECDSA:\n      return unmarshalECDSAPublicKey(data)\n    default:\n      throw new UnsupportedKeyTypeError()\n  }\n}\n\n/**\n * Converts a public key object into a protobuf serialized public key\n */\nexport function publicKeyToProtobuf (key: PublicKey): Uint8Array {\n  return pb.PublicKey.encode({\n    Type: pb.KeyType[key.type],\n    Data: key.raw\n  })\n}\n\n/**\n * Converts a protobuf serialized private key into its representative object\n */\nexport function privateKeyFromProtobuf (buf: Uint8Array): Ed25519PrivateKey | Secp256k1PrivateKey | RSAPrivateKey | ECDSAPrivateKey {\n  const decoded = pb.PrivateKey.decode(buf)\n  const data = decoded.Data ?? new Uint8Array()\n\n  switch (decoded.Type) {\n    case pb.KeyType.RSA:\n      return pkcs1ToRSAPrivateKey(data)\n    case pb.KeyType.Ed25519:\n      return unmarshalEd25519PrivateKey(data)\n    case pb.KeyType.secp256k1:\n      return unmarshalSecp256k1PrivateKey(data)\n    case pb.KeyType.ECDSA:\n      return unmarshalECDSAPrivateKey(data)\n    default:\n      throw new UnsupportedKeyTypeError()\n  }\n}\n\n/**\n * Creates a private key from the raw key bytes. For Ed25519 keys this requires\n * the public key to be appended to the private key otherwise we can't\n * differentiate between Ed25519 and secp256k1 keys as they are the same length.\n */\nexport function privateKeyFromRaw (buf: Uint8Array): PrivateKey {\n  if (buf.byteLength === ed25519PrivateKeyLength) {\n    return unmarshalEd25519PrivateKey(buf)\n  } else if (buf.byteLength === secp256k1PrivateKeyLength) {\n    return unmarshalSecp256k1PrivateKey(buf)\n  }\n\n  const message = decodeDer(buf)\n  const ecdsaOid = message[2]?.[0]\n\n  if (ecdsaOid === ECDSA_P_256_OID || ecdsaOid === ECDSA_P_384_OID || ecdsaOid === ECDSA_P_521_OID) {\n    return pkiMessageToECDSAPrivateKey(message)\n  }\n\n  if (message.length > 8) {\n    return pkcs1MessageToRSAPrivateKey(message)\n  }\n\n  throw new InvalidParametersError('Could not extract private key from raw bytes')\n}\n\n/**\n * Converts a private key object into a protobuf serialized private key\n */\nexport function privateKeyToProtobuf (key: PrivateKey): Uint8Array {\n  return pb.PrivateKey.encode({\n    Type: pb.KeyType[key.type],\n    Data: key.raw\n  })\n}\n\nfunction toBits (bits: any): number {\n  if (bits == null) {\n    return 2048\n  }\n\n  return parseInt(bits, 10)\n}\n\nfunction toCurve (curve: any): Curve {\n  if (curve === 'P-256' || curve == null) {\n    return 'P-256'\n  }\n\n  if (curve === 'P-384') {\n    return 'P-384'\n  }\n\n  if (curve === 'P-521') {\n    return 'P-521'\n  }\n\n  throw new InvalidParametersError('Unsupported curve, should be P-256, P-384 or P-521')\n}\n\n/**\n * Convert a libp2p RSA or ECDSA private key to a WebCrypto CryptoKeyPair\n */\nexport async function privateKeyToCryptoKeyPair (privateKey: PrivateKey): Promise<CryptoKeyPair> {\n  if (privateKey.type === 'RSA') {\n    return {\n      privateKey: await crypto.subtle.importKey('jwk', privateKey.jwk, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n      }, true, ['sign']),\n      publicKey: await crypto.subtle.importKey('jwk', privateKey.publicKey.jwk, {\n        name: 'RSASSA-PKCS1-v1_5',\n        hash: { name: 'SHA-256' }\n      }, true, ['verify'])\n    }\n  }\n\n  if (privateKey.type === 'ECDSA') {\n    return {\n      privateKey: await crypto.subtle.importKey('jwk', privateKey.jwk, {\n        name: 'ECDSA',\n        namedCurve: privateKey.jwk.crv ?? 'P-256'\n      }, true, ['sign']),\n      publicKey: await crypto.subtle.importKey('jwk', privateKey.publicKey.jwk, {\n        name: 'ECDSA',\n        namedCurve: privateKey.publicKey.jwk.crv ?? 'P-256'\n      }, true, ['verify'])\n    }\n  }\n\n  throw new InvalidParametersError('Only RSA and ECDSA keys are supported')\n}\n\n/**\n * Convert a RSA or ECDSA WebCrypto CryptoKeyPair to a libp2p private key\n */\nexport async function privateKeyFromCryptoKeyPair (keyPair: CryptoKeyPair): Promise<PrivateKey> {\n  if (keyPair.privateKey.algorithm.name === 'RSASSA-PKCS1-v1_5') {\n    const jwk = await crypto.subtle.exportKey('jwk', keyPair.privateKey)\n\n    return jwkToRSAPrivateKey(jwk)\n  }\n\n  if (keyPair.privateKey.algorithm.name === 'ECDSA') {\n    const jwk = await crypto.subtle.exportKey('jwk', keyPair.privateKey)\n\n    return new ECDSAPrivateKeyClass(jwk)\n  }\n\n  throw new InvalidParametersError('Only RSA and ECDSA keys are supported')\n}\n", "/**\n * @packageDocumentation\n *\n * An implementation of a peer id\n *\n * @example\n *\n * ```TypeScript\n * import { peerIdFromString } from '@libp2p/peer-id'\n * const peer = peerIdFromString('k51qzi5uqu5dkwkqm42v9j9kqcam2jiuvloi16g72i4i4amoo2m8u3ol3mqu6s')\n *\n * console.log(peer.toCID()) // CID(bafzaa...)\n * console.log(peer.toString()) // \"12D3K...\"\n * ```\n */\n\nimport { peerIdSymbol } from '@libp2p/interface'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { CID } from 'multiformats/cid'\nimport { identity } from 'multiformats/hashes/identity'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport type { Ed25519PeerId as Ed25519PeerIdInterface, PeerIdType, RSAPeerId as RSAPeerIdInterface, URLPeerId as URLPeerIdInterface, Secp256k1PeerId as Secp256k1PeerIdInterface, PeerId, PublicKey, Ed25519PublicKey, Secp256k1PublicKey, RSAPublicKey } from '@libp2p/interface'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72\n\ninterface PeerIdInit <DigestCode extends number> {\n  type: PeerIdType\n  multihash: MultihashDigest<DigestCode>\n}\n\ninterface RSAPeerIdInit {\n  multihash: MultihashDigest<0x12>\n  publicKey?: RSAPublicKey\n}\n\ninterface Ed25519PeerIdInit {\n  multihash: MultihashDigest<0x0>\n  publicKey: Ed25519PublicKey\n}\n\ninterface Secp256k1PeerIdInit {\n  multihash: MultihashDigest<0x0>\n  publicKey: Secp256k1PublicKey\n}\n\nclass PeerIdImpl <DigestCode extends number> {\n  public type: PeerIdType\n  private readonly multihash: MultihashDigest<DigestCode>\n  public readonly publicKey?: PublicKey\n  private string?: string\n\n  constructor (init: PeerIdInit<DigestCode>) {\n    this.type = init.type\n    this.multihash = init.multihash\n\n    // mark string cache as non-enumerable\n    Object.defineProperty(this, 'string', {\n      enumerable: false,\n      writable: true\n    })\n  }\n\n  get [Symbol.toStringTag] (): string {\n    return `PeerId(${this.toString()})`\n  }\n\n  readonly [peerIdSymbol] = true\n\n  toString (): string {\n    if (this.string == null) {\n      this.string = base58btc.encode(this.multihash.bytes).slice(1)\n    }\n\n    return this.string\n  }\n\n  toMultihash (): MultihashDigest<DigestCode> {\n    return this.multihash\n  }\n\n  // return self-describing String representation\n  // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n  toCID (): CID<Uint8Array, 0x72, DigestCode, 1> {\n    return CID.createV1(LIBP2P_KEY_CODE, this.multihash)\n  }\n\n  toJSON (): string {\n    return this.toString()\n  }\n\n  /**\n   * Checks the equality of `this` peer against a given PeerId\n   */\n  equals (id?: PeerId | Uint8Array | string): boolean {\n    if (id == null) {\n      return false\n    }\n\n    if (id instanceof Uint8Array) {\n      return uint8ArrayEquals(this.multihash.bytes, id)\n    } else if (typeof id === 'string') {\n      return this.toString() === id\n    } else if (id?.toMultihash()?.bytes != null) {\n      return uint8ArrayEquals(this.multihash.bytes, id.toMultihash().bytes)\n    } else {\n      throw new Error('not valid Id')\n    }\n  }\n\n  /**\n   * Returns PeerId as a human-readable string\n   * https://nodejs.org/api/util.html#utilinspectcustom\n   *\n   * @example\n   * ```TypeScript\n   * import { peerIdFromString } from '@libp2p/peer-id'\n   *\n   * console.info(peerIdFromString('QmFoo'))\n   * // 'PeerId(QmFoo)'\n   * ```\n   */\n  [inspect] (): string {\n    return `PeerId(${this.toString()})`\n  }\n}\n\nexport class RSAPeerId extends PeerIdImpl<0x12> implements RSAPeerIdInterface {\n  public readonly type = 'RSA'\n  public readonly publicKey?: RSAPublicKey\n\n  constructor (init: RSAPeerIdInit) {\n    super({ ...init, type: 'RSA' })\n\n    this.publicKey = init.publicKey\n  }\n}\n\nexport class Ed25519PeerId extends PeerIdImpl<0x0> implements Ed25519PeerIdInterface {\n  public readonly type = 'Ed25519'\n  public readonly publicKey: Ed25519PublicKey\n\n  constructor (init: Ed25519PeerIdInit) {\n    super({ ...init, type: 'Ed25519' })\n\n    this.publicKey = init.publicKey\n  }\n}\n\nexport class Secp256k1PeerId extends PeerIdImpl<0x0> implements Secp256k1PeerIdInterface {\n  public readonly type = 'secp256k1'\n  public readonly publicKey: Secp256k1PublicKey\n\n  constructor (init: Secp256k1PeerIdInit) {\n    super({ ...init, type: 'secp256k1' })\n\n    this.publicKey = init.publicKey\n  }\n}\n\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst TRANSPORT_IPFS_GATEWAY_HTTP_CODE = 0x0920\n\nexport class URLPeerId implements URLPeerIdInterface {\n  readonly type = 'url'\n  readonly multihash: MultihashDigest<0x0>\n  readonly publicKey: undefined\n  readonly url: string\n\n  constructor (url: URL) {\n    this.url = url.toString()\n    this.multihash = identity.digest(uint8ArrayFromString(this.url))\n  }\n\n  [inspect] (): string {\n    return `PeerId(${this.url})`\n  }\n\n  readonly [peerIdSymbol] = true\n\n  toString (): string {\n    return this.toCID().toString()\n  }\n\n  toMultihash (): MultihashDigest<0x0> {\n    return this.multihash\n  }\n\n  toCID (): CID<Uint8Array, 0x0920, 0x0, 1> {\n    return CID.createV1(TRANSPORT_IPFS_GATEWAY_HTTP_CODE, this.toMultihash())\n  }\n\n  toJSON (): string {\n    return this.toString()\n  }\n\n  equals (other?: PeerId | Uint8Array | string): boolean {\n    if (other == null) {\n      return false\n    }\n\n    if (other instanceof Uint8Array) {\n      other = uint8ArrayToString(other)\n    }\n\n    return other.toString() === this.toString()\n  }\n}\n", "/**\n * @packageDocumentation\n *\n * An implementation of a peer id\n *\n * @example\n *\n * ```TypeScript\n * import { peerIdFromString } from '@libp2p/peer-id'\n * const peer = peerIdFromString('12D3KooWKnDdG3iXw9eTFijk3EWSunZcFi54Zka4wmtqtt6rPxc8')\n *\n * console.log(peer.toCID()) // CID(bafzaa...)\n * console.log(peer.toString()) // \"12D3K...\"\n * ```\n */\n\nimport { publicKeyFromMultihash } from '@libp2p/crypto/keys'\nimport { InvalidCIDError, InvalidMultihashError, InvalidParametersError, UnsupportedKeyTypeError } from '@libp2p/interface'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { identity } from 'multiformats/hashes/identity'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { RSAPeerId as RSAPeerIdClass, Ed25519PeerId as Ed25519PeerIdClass, Secp256k1PeerId as Secp256k1PeerIdClass, URLPeerId as URLPeerIdClass } from './peer-id.js'\nimport type { Ed25519PeerId, RSAPeerId, URLPeerId, Secp256k1PeerId, PeerId, PublicKey, Ed25519PublicKey, Secp256k1PublicKey, RSAPublicKey, Ed25519PrivateKey, Secp256k1PrivateKey, RSAPrivateKey, PrivateKey } from '@libp2p/interface'\nimport type { MultibaseDecoder } from 'multiformats/cid'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72\nconst TRANSPORT_IPFS_GATEWAY_HTTP_CODE = 0x0920\n\nexport function peerIdFromString (str: string, decoder?: MultibaseDecoder<any>): Ed25519PeerId | Secp256k1PeerId | RSAPeerId | URLPeerId {\n  let multihash: MultihashDigest\n\n  if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n    // identity hash ed25519/secp256k1 key or sha2-256 hash of\n    // rsa public key - base58btc encoded either way\n    multihash = Digest.decode(base58btc.decode(`z${str}`))\n  } else if (str.startsWith('k51qzi5uqu5') || str.startsWith('kzwfwjn5ji4') || str.startsWith('k2k4r8') || str.startsWith('bafz')) {\n    // base36 encoded CIDv1 with libp2p-key and identity hash (for ed25519/secp256k1/rsa) or base32 encoded CIDv1 with libp2p-key and identity hash (for ed25519/secp256k1/rsa)\n    return peerIdFromCID(CID.parse(str))\n  } else {\n    if (decoder == null) {\n      throw new InvalidParametersError('Please pass a multibase decoder for strings that do not start with \"1\" or \"Q\"')\n    }\n\n    multihash = Digest.decode(decoder.decode(str))\n  }\n\n  return peerIdFromMultihash(multihash)\n}\n\nexport function peerIdFromPublicKey (publicKey: Ed25519PublicKey): Ed25519PeerId\nexport function peerIdFromPublicKey (publicKey: Secp256k1PublicKey): Secp256k1PeerId\nexport function peerIdFromPublicKey (publicKey: RSAPublicKey): RSAPeerId\nexport function peerIdFromPublicKey (publicKey: PublicKey): PeerId\nexport function peerIdFromPublicKey (publicKey: PublicKey): PeerId {\n  if (publicKey.type === 'Ed25519') {\n    return new Ed25519PeerIdClass({\n      multihash: publicKey.toCID().multihash,\n      publicKey\n    })\n  } else if (publicKey.type === 'secp256k1') {\n    return new Secp256k1PeerIdClass({\n      multihash: publicKey.toCID().multihash,\n      publicKey\n    })\n  } else if (publicKey.type === 'RSA') {\n    return new RSAPeerIdClass({\n      multihash: publicKey.toCID().multihash,\n      publicKey\n    })\n  }\n\n  throw new UnsupportedKeyTypeError()\n}\n\nexport function peerIdFromPrivateKey (privateKey: Ed25519PrivateKey): Ed25519PeerId\nexport function peerIdFromPrivateKey (privateKey: Secp256k1PrivateKey): Secp256k1PeerId\nexport function peerIdFromPrivateKey (privateKey: RSAPrivateKey): RSAPeerId\nexport function peerIdFromPrivateKey (privateKey: PrivateKey): PeerId\nexport function peerIdFromPrivateKey (privateKey: PrivateKey): PeerId {\n  return peerIdFromPublicKey(privateKey.publicKey)\n}\n\nexport function peerIdFromMultihash (multihash: MultihashDigest): PeerId {\n  if (isSha256Multihash(multihash)) {\n    return new RSAPeerIdClass({ multihash })\n  } else if (isIdentityMultihash(multihash)) {\n    try {\n      const publicKey = publicKeyFromMultihash(multihash)\n\n      if (publicKey.type === 'Ed25519') {\n        return new Ed25519PeerIdClass({ multihash, publicKey })\n      } else if (publicKey.type === 'secp256k1') {\n        return new Secp256k1PeerIdClass({ multihash, publicKey })\n      }\n    } catch (err) {\n      // was not Ed or secp key, try URL\n      const url = uint8ArrayToString(multihash.digest)\n\n      return new URLPeerIdClass(new URL(url))\n    }\n  }\n\n  throw new InvalidMultihashError('Supplied PeerID Multihash is invalid')\n}\n\nexport function peerIdFromCID (cid: CID): Ed25519PeerId | Secp256k1PeerId | RSAPeerId | URLPeerId {\n  if (cid?.multihash == null || cid.version == null || (cid.version === 1 && (cid.code !== LIBP2P_KEY_CODE) && cid.code !== TRANSPORT_IPFS_GATEWAY_HTTP_CODE)) {\n    throw new InvalidCIDError('Supplied PeerID CID is invalid')\n  }\n\n  if (cid.code === TRANSPORT_IPFS_GATEWAY_HTTP_CODE) {\n    const url = uint8ArrayToString(cid.multihash.digest)\n\n    return new URLPeerIdClass(new URL(url))\n  }\n\n  return peerIdFromMultihash(cid.multihash)\n}\n\nfunction isIdentityMultihash (multihash: MultihashDigest): multihash is MultihashDigest<0x0> {\n  return multihash.code === identity.code\n}\n\nfunction isSha256Multihash (multihash: MultihashDigest): multihash is MultihashDigest<0x12> {\n  return multihash.code === sha256.code\n}\n", "/**\n * Thrown when an invalid multiaddr is encountered\n */\nexport class InvalidMultiaddrError extends Error {\n  static name = 'InvalidMultiaddrError'\n  name = 'InvalidMultiaddrError'\n}\n\nexport class ValidationError extends Error {\n  static name = 'ValidationError'\n  name = 'ValidationError'\n}\n\nexport class InvalidParametersError extends Error {\n  static name = 'InvalidParametersError'\n  name = 'InvalidParametersError'\n}\n\nexport class UnknownProtocolError extends Error {\n  static name = 'UnknownProtocolError'\n  name = 'UnknownProtocolError'\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-return */\n\n// Heavily inspired by https://doc.rust-lang.org/src/std/net/parser.rs.html\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Fn = (...foo: any) => any;\n\nexport class Parser {\n  private index = 0;\n  private input = \"\";\n\n  new(input: string): this {\n    this.index = 0;\n    this.input = input;\n    return this;\n  }\n\n  /** Run a parser, and restore the pre-parse state if it fails. */\n  readAtomically<T extends Fn>(fn: T): ReturnType<T> {\n    const index = this.index;\n    const result = fn();\n    if (result === undefined) {\n      this.index = index;\n    }\n    return result;\n  }\n\n  /** Run a parser, but fail if the entire input wasn't consumed. Doesn't run atomically. */\n  parseWith<T extends Fn>(fn: T): ReturnType<T> | undefined {\n    const result = fn();\n    if (this.index !== this.input.length) {\n      return undefined;\n    }\n    return result;\n  }\n\n  /** Peek the next character from the input */\n  peekChar(): string | undefined {\n    if (this.index >= this.input.length) {\n      return undefined;\n    }\n    return this.input[this.index];\n  }\n\n  /** Read the next character from the input */\n  readChar(): string | undefined {\n    if (this.index >= this.input.length) {\n      return undefined;\n    }\n    return this.input[this.index++];\n  }\n\n  /** Read the next character from the input if it matches the target. */\n  readGivenChar(target: string): string | undefined {\n    return this.readAtomically(() => {\n      const char = this.readChar();\n      if (char !== target) {\n        return undefined;\n      }\n      return char;\n    });\n  }\n\n  /**\n   * Helper for reading separators in an indexed loop. Reads the separator\n   * character iff index > 0, then runs the parser. When used in a loop,\n   * the separator character will only be read on index > 0 (see\n   * readIPv4Addr for an example)\n   */\n  readSeparator<T extends Fn>(sep: string, index: number, inner: T): ReturnType<T> {\n    return this.readAtomically(() => {\n      if (index > 0) {\n        if (this.readGivenChar(sep) === undefined) {\n          return undefined;\n        }\n      }\n      return inner();\n    });\n  }\n\n  /**\n   * Read a number off the front of the input in the given radix, stopping\n   * at the first non-digit character or eof. Fails if the number has more\n   * digits than max_digits or if there is no number.\n   */\n  readNumber(\n    radix: number,\n    maxDigits: number | undefined,\n    allowZeroPrefix: boolean,\n    maxBytes: number\n  ): number | undefined {\n    return this.readAtomically(() => {\n      let result = 0;\n      let digitCount = 0;\n\n      const leadingChar = this.peekChar();\n      if (leadingChar === undefined) {\n        return undefined;\n      }\n      const hasLeadingZero = leadingChar === \"0\";\n      const maxValue = 2 ** (8 * maxBytes) - 1;\n\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        const digit = this.readAtomically(() => {\n          const char = this.readChar();\n          if (char === undefined) {\n            return undefined;\n          }\n          const num = Number.parseInt(char, radix);\n          if (Number.isNaN(num)) {\n            return undefined;\n          }\n          return num;\n        });\n        if (digit === undefined) {\n          break;\n        }\n        result *= radix;\n        result += digit;\n        if (result > maxValue) {\n          return undefined;\n        }\n        digitCount += 1;\n        if (maxDigits !== undefined) {\n          if (digitCount > maxDigits) {\n            return undefined;\n          }\n        }\n      }\n\n      if (digitCount === 0) {\n        return undefined;\n      } else if (!allowZeroPrefix && hasLeadingZero && digitCount > 1) {\n        return undefined;\n      } else {\n        return result;\n      }\n    });\n  }\n\n  /** Read an IPv4 address. */\n  readIPv4Addr(): Uint8Array | undefined {\n    return this.readAtomically(() => {\n      const out = new Uint8Array(4);\n\n      for (let i = 0; i < out.length; i++) {\n        const ix = this.readSeparator(\".\", i, () => this.readNumber(10, 3, false, 1));\n        if (ix === undefined) {\n          return undefined;\n        }\n        out[i] = ix;\n      }\n\n      return out;\n    });\n  }\n\n  /** Read an IPv6 Address. */\n  readIPv6Addr(): Uint8Array | undefined {\n    /**\n     * Read a chunk of an IPv6 address into `groups`. Returns the number\n     * of groups read, along with a bool indicating if an embedded\n     * trailing IPv4 address was read. Specifically, read a series of\n     * colon-separated IPv6 groups (0x0000 - 0xFFFF), with an optional\n     * trailing embedded IPv4 address.\n     */\n    const readGroups = (groups: Uint8Array): [number, boolean] => {\n      for (let i = 0; i < groups.length / 2; i++) {\n        const ix = i * 2;\n        // Try to read a trailing embedded IPv4 address. There must be at least 4 groups left.\n        if (i < groups.length - 3) {\n          const ipv4 = this.readSeparator(\":\", i, () => this.readIPv4Addr());\n          if (ipv4 !== undefined) {\n            groups[ix] = ipv4[0];\n            groups[ix + 1] = ipv4[1];\n            groups[ix + 2] = ipv4[2];\n            groups[ix + 3] = ipv4[3];\n\n            return [ix + 4, true];\n          }\n        }\n\n        const group = this.readSeparator(\":\", i, () => this.readNumber(16, 4, true, 2));\n        if (group === undefined) {\n          return [ix, false];\n        }\n        groups[ix] = group >> 8;\n        groups[ix + 1] = group & 255;\n      }\n      return [groups.length, false];\n    };\n\n    return this.readAtomically(() => {\n      // Read the front part of the address; either the whole thing, or up to the first ::\n      const head = new Uint8Array(16);\n      const [headSize, headIp4] = readGroups(head);\n\n      if (headSize === 16) {\n        return head;\n      }\n\n      // IPv4 part is not allowed before `::`\n      if (headIp4) {\n        return undefined;\n      }\n\n      // Read `::` if previous code parsed less than 8 groups.\n      // `::` indicates one or more groups of 16 bits of zeros.\n      if (this.readGivenChar(\":\") === undefined) {\n        return undefined;\n      }\n      if (this.readGivenChar(\":\") === undefined) {\n        return undefined;\n      }\n\n      // Read the back part of the address. The :: must contain at least one\n      // set of zeroes, so our max length is 7.\n      const tail = new Uint8Array(14);\n      const limit = 16 - (headSize + 2);\n      const [tailSize] = readGroups(tail.subarray(0, limit));\n\n      // Concat the head and tail of the IP address\n      head.set(tail.subarray(0, tailSize), 16 - tailSize);\n\n      return head;\n    });\n  }\n\n  /** Read an IP Address, either IPv4 or IPv6. */\n  readIPAddr(): Uint8Array | undefined {\n    return this.readIPv4Addr() ?? this.readIPv6Addr();\n  }\n}\n", "import { Parser } from \"./parser.js\";\n\n// See https://stackoverflow.com/questions/166132/maximum-length-of-the-textual-representation-of-an-ipv6-address\nconst MAX_IPV6_LENGTH = 45;\nconst MAX_IPV4_LENGTH = 15;\n\nconst parser = new Parser();\n\n/** Parse `input` into IPv4 bytes. */\nexport function parseIPv4(input: string): Uint8Array | undefined {\n  if (input.length > MAX_IPV4_LENGTH) {\n    return undefined;\n  }\n  return parser.new(input).parseWith(() => parser.readIPv4Addr());\n}\n\n/** Parse IPv4 `input` into IPv6 with IPv4-mapped bytes, eg ::ffff:1.2.3.4 */\nexport function parseIPv4Mapped(input: string): Uint8Array | undefined {\n  if (input.length > MAX_IPV4_LENGTH) {\n    return undefined;\n  }\n\n  const ipv4 = parser.new(input).parseWith(() => parser.readIPv4Addr());\n  if (ipv4 === undefined) {\n    return undefined;\n  }\n\n  return Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff, ipv4[0], ipv4[1], ipv4[2], ipv4[3]]);\n}\n\n/** Parse `input` into IPv6 bytes. */\nexport function parseIPv6(input: string): Uint8Array | undefined {\n  // strip zone index if it is present\n  if (input.includes(\"%\")) {\n    input = input.split(\"%\")[0];\n  }\n  if (input.length > MAX_IPV6_LENGTH) {\n    return undefined;\n  }\n  return parser.new(input).parseWith(() => parser.readIPv6Addr());\n}\n\n/** Parse `input` into IPv4 or IPv6 bytes. */\nexport function parseIP(input: string, mapIPv4ToIPv6 = false): Uint8Array | undefined {\n  // strip zone index if it is present\n  if (input.includes(\"%\")) {\n    input = input.split(\"%\")[0];\n  }\n\n  if (input.length > MAX_IPV6_LENGTH) {\n    return undefined;\n  }\n\n  const addr = parser.new(input).parseWith(() => parser.readIPAddr());\n  if (!addr) {\n    return undefined;\n  }\n\n  if (mapIPv4ToIPv6 && addr.length === 4) {\n    return Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff, addr[0], addr[1], addr[2], addr[3]]);\n  }\n\n  return addr;\n}\n", "import { parseIP, parseIPv4, parseIPv6 } from \"./parse.js\";\n\n/** Check if `input` is IPv4. */\nexport function isIPv4(input: string): boolean {\n  return Boolean(parseIPv4(input));\n}\n\n/** Check if `input` is IPv6. */\nexport function isIPv6(input: string): boolean {\n  return Boolean(parseIPv6(input));\n}\n\n/** Check if `input` is IPv4 or IPv6. */\nexport function isIP(input: string): boolean {\n  return Boolean(parseIP(input));\n}\n\n/**\n * @returns `6` if `input` is IPv6, `4` if `input` is IPv4, or `undefined` if `input` is neither.\n */\nexport function ipVersion(input: string): 4 | 6 | undefined {\n  if (isIPv4(input)) {\n    return 4;\n  } else if (isIPv6(input)) {\n    return 6;\n  } else {\n    return undefined;\n  }\n}\n", "import { isIPv4 } from '@chainsafe/is-ip'\nimport { base32 } from 'multiformats/bases/base32'\nimport { bases } from 'multiformats/basics'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { InvalidMultiaddrError } from './errors.ts'\nimport type { MultibaseCodec } from 'multiformats'\nimport type { SupportedEncodings } from 'uint8arrays/to-string'\n\nexport function bytesToString (base: SupportedEncodings): (buf: Uint8Array) => string {\n  return (buf) => {\n    return uint8ArrayToString(buf, base)\n  }\n}\n\nexport function stringToBytes (base: SupportedEncodings): (value: string) => Uint8Array {\n  return (buf) => {\n    return uint8ArrayFromString(buf, base)\n  }\n}\n\nexport function bytes2port (buf: Uint8Array): string {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(buf.byteOffset).toString()\n}\n\nexport function port2bytes (port: string | number): Uint8Array {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, typeof port === 'string' ? parseInt(port) : port)\n\n  return new Uint8Array(buf)\n}\n\nexport function onion2bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n\n  if (addr[0].length !== 16) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`)\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = uint8ArrayFromString(addr[0], 'base32')\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n\n  const portBuf = port2bytes(port)\n\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nexport function onion32bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n\n  if (addr[0].length !== 56) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`)\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode(`b${addr[0]}`)\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n\n  const portBuf = port2bytes(port)\n\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nexport function bytes2onion (buf: Uint8Array): string {\n  const addrBytes = buf.subarray(0, buf.length - 2)\n  const portBytes = buf.subarray(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return `${addr}:${port}`\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const ip4ToBytes = function (ip: string): Uint8Array {\n  ip = ip.toString().trim()\n\n  const bytes = new Uint8Array(4)\n\n  ip.split(/\\./g).forEach((byte, index) => {\n    const value = parseInt(byte, 10)\n\n    if (isNaN(value) || value < 0 || value > 0xff) {\n      throw new InvalidMultiaddrError('Invalid byte value in IP address')\n    }\n\n    bytes[index] = value\n  })\n\n  return bytes\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const ip6ToBytes = function (ip: string): Uint8Array {\n  let offset = 0\n  ip = ip.toString().trim()\n\n  const sections = ip.split(':', 8)\n\n  let i\n  for (i = 0; i < sections.length; i++) {\n    const isv4 = isIPv4(sections[i])\n    let v4Buffer: Uint8Array | undefined\n\n    if (isv4) {\n      v4Buffer = ip4ToBytes(sections[i])\n      sections[i] = uint8ArrayToString(v4Buffer.subarray(0, 2), 'base16')\n    }\n\n    if (v4Buffer != null && ++i < 8) {\n      sections.splice(i, 0, uint8ArrayToString(v4Buffer.subarray(2, 4), 'base16'))\n    }\n  }\n\n  if (sections[0] === '') {\n    while (sections.length < 8) { sections.unshift('0') }\n  } else if (sections[sections.length - 1] === '') {\n    while (sections.length < 8) { sections.push('0') }\n  } else if (sections.length < 8) {\n    for (i = 0; i < sections.length && sections[i] !== ''; i++) { }\n    const argv: [number, number, ...string[]] = [i, 1]\n    for (i = 9 - sections.length; i > 0; i--) {\n      argv.push('0')\n    }\n    sections.splice.apply(sections, argv)\n  }\n\n  const bytes = new Uint8Array(offset + 16)\n\n  for (i = 0; i < sections.length; i++) {\n    if (sections[i] === '') {\n      sections[i] = '0'\n    }\n\n    const word = parseInt(sections[i], 16)\n\n    if (isNaN(word) || word < 0 || word > 0xffff) {\n      throw new InvalidMultiaddrError('Invalid byte value in IP address')\n    }\n\n    bytes[offset++] = (word >> 8) & 0xff\n    bytes[offset++] = word & 0xff\n  }\n\n  return bytes\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const ip4ToString = function (buf: Uint8Array): string {\n  if (buf.byteLength !== 4) {\n    throw new InvalidMultiaddrError('IPv4 address was incorrect length')\n  }\n\n  const result = []\n\n  for (let i = 0; i < buf.byteLength; i++) {\n    result.push(buf[i])\n  }\n\n  return result.join('.')\n}\n\nexport const ip6ToString = function (buf: Uint8Array): string {\n  if (buf.byteLength !== 16) {\n    throw new InvalidMultiaddrError('IPv6 address was incorrect length')\n  }\n\n  const result: string[] = []\n\n  for (let i = 0; i < buf.byteLength; i += 2) {\n    const byte1 = buf[i]\n    const byte2 = buf[i + 1]\n\n    const tuple = `${byte1.toString(16).padStart(2, '0')}${byte2.toString(16).padStart(2, '0')}`\n\n    result.push(tuple)\n  }\n\n  const ip = result.join(':')\n\n  try {\n    const url = new URL(`http://[${ip}]`)\n\n    return url.hostname.substring(1, url.hostname.length - 1)\n  } catch {\n    throw new InvalidMultiaddrError(`Invalid IPv6 address \"${ip}\"`)\n  }\n}\n\nexport function ip6StringToValue (str: string): string {\n  try {\n    const url = new URL(`http://[${str}]`)\n\n    return url.hostname.substring(1, url.hostname.length - 1)\n  } catch {\n    throw new InvalidMultiaddrError(`Invalid IPv6 address \"${str}\"`)\n  }\n}\n\nconst decoders = Object.values(bases).map((c) => c.decoder)\nconst anybaseDecoder = (function () {\n  let acc = decoders[0].or(decoders[1])\n  decoders.slice(2).forEach((d) => (acc = acc.or(d)))\n  return acc\n})()\n\nexport function mb2bytes (mbstr: string): Uint8Array {\n  return anybaseDecoder.decode(mbstr)\n}\n\nexport function bytes2mb (base: MultibaseCodec<any>): (buf: Uint8Array) => string {\n  return (buf) => {\n    return base.encoder.encode(buf)\n  }\n}\n", "import { ValidationError } from './errors.ts'\n\nexport function integer (value: string): void {\n  const int = parseInt(value)\n\n  if (int.toString() !== value) {\n    throw new ValidationError('Value must be an integer')\n  }\n}\n\nexport function positive (value: any): void {\n  if (value < 0) {\n    throw new ValidationError('Value must be a positive integer, or zero')\n  }\n}\n\nexport function maxValue (max: number): (value: any) => void {\n  return (value) => {\n    if (value > max) {\n      throw new ValidationError(`Value must be smaller than or equal to ${max}`)\n    }\n  }\n}\n\nexport function validate (...funcs: Array<(value: string) => void>): (value: string) => void {\n  return (value) => {\n    for (const fn of funcs) {\n      fn(value)\n    }\n  }\n}\n\nexport const validatePort = validate(\n  integer,\n  positive,\n  maxValue(65_535)\n)\n", "import { isIPv4, isIPv6 } from '@chainsafe/is-ip'\nimport { CID } from 'multiformats'\nimport { base64url } from 'multiformats/bases/base64'\nimport { CODE_CERTHASH, CODE_DCCP, CODE_DNS, CODE_DNS4, CODE_DNS6, CODE_DNSADDR, CODE_GARLIC32, CODE_GARLIC64, CODE_HTTP, CODE_HTTP_PATH, CODE_HTTPS, CODE_IP4, CODE_IP6, CODE_IP6ZONE, CODE_IPCIDR, CODE_MEMORY, CODE_NOISE, CODE_ONION, CODE_ONION3, CODE_P2P, CODE_P2P_CIRCUIT, CODE_P2P_STARDUST, CODE_P2P_WEBRTC_DIRECT, CODE_P2P_WEBRTC_STAR, CODE_P2P_WEBSOCKET_STAR, CODE_QUIC, CODE_QUIC_V1, CODE_SCTP, CODE_SNI, CODE_TCP, CODE_TLS, CODE_UDP, CODE_UDT, CODE_UNIX, CODE_UTP, CODE_WEBRTC, CODE_WEBRTC_DIRECT, CODE_WEBTRANSPORT, CODE_WS, CODE_WSS } from './constants.ts'\nimport { UnknownProtocolError, ValidationError } from './errors.ts'\nimport { bytes2mb, bytes2onion, bytes2port, bytesToString, ip4ToBytes, ip4ToString, ip6StringToValue, ip6ToBytes, ip6ToString, mb2bytes, onion2bytes, onion32bytes, port2bytes, stringToBytes } from './utils.ts'\nimport { validatePort } from './validation.ts'\nimport type { Registry as RegistryInterface } from './index.ts'\n\nexport const V = -1\n\nexport interface ProtocolCodec {\n  /**\n   * A numeric code that will be used in the binary representation of the tuple.\n   */\n  code: number\n\n  /**\n   * A string name that will be used in the string representation of the addr.\n   */\n  name: string\n\n  /**\n   * Size defines the expected length of the address part of the tuple - valid\n   * values are `-1` (or the `V` constant) for variable length (this will be\n   * varint encoded in the binary representation), `0` for no address part or a\n   * number that represents a fixed-length address.\n   */\n  size?: number\n\n  /**\n   * If specified this protocol codec will also be used to decode tuples with\n   * these names from string multiaddrs.\n   */\n  aliases?: string[]\n\n  /**\n   * Where the multiaddr has been encoded as a string, decode the value if\n   * necessary, unescaping any escaped values\n   */\n  stringToValue?(value: string): string\n\n  /**\n   * To encode the multiaddr as a string, escape any necessary values\n   */\n  valueToString?(value: string): string\n\n  /**\n   * To encode the multiaddr as bytes, convert the value to bytes\n   */\n  valueToBytes?(value: string): Uint8Array\n\n  /**\n   * To decode bytes to a multiaddr, convert the value bytes to a string\n   */\n  bytesToValue?(bytes: Uint8Array): string\n\n  /**\n   * Perform any necessary validation on the string value\n   */\n  validate?(value: string): void\n}\n\nclass Registry implements RegistryInterface {\n  private protocolsByCode = new Map<number, ProtocolCodec>()\n  private protocolsByName = new Map<string, ProtocolCodec>()\n\n  getProtocol (key: string | number): ProtocolCodec {\n    let codec: ProtocolCodec | undefined\n\n    if (typeof key === 'string') {\n      codec = this.protocolsByName.get(key)\n    } else {\n      codec = this.protocolsByCode.get(key)\n    }\n\n    if (codec == null) {\n      throw new UnknownProtocolError(`Protocol ${key} was unknown`)\n    }\n\n    return codec\n  }\n\n  addProtocol (codec: ProtocolCodec): void {\n    this.protocolsByCode.set(codec.code, codec)\n    this.protocolsByName.set(codec.name, codec)\n\n    codec.aliases?.forEach(alias => {\n      this.protocolsByName.set(alias, codec)\n    })\n  }\n\n  removeProtocol (code: number): void {\n    const codec = this.protocolsByCode.get(code)\n\n    if (codec == null) {\n      return\n    }\n\n    this.protocolsByCode.delete(codec.code)\n    this.protocolsByName.delete(codec.name)\n\n    codec.aliases?.forEach(alias => {\n      this.protocolsByName.delete(alias)\n    })\n  }\n}\n\nexport const registry = new Registry()\n\nconst codecs: ProtocolCodec[] = [{\n  code: CODE_IP4,\n  name: 'ip4',\n  size: 32,\n  valueToBytes: ip4ToBytes,\n  bytesToValue: ip4ToString,\n  validate: (value) => {\n    if (!isIPv4(value)) {\n      throw new ValidationError(`Invalid IPv4 address \"${value}\"`)\n    }\n  }\n}, {\n  code: CODE_TCP,\n  name: 'tcp',\n  size: 16,\n  valueToBytes: port2bytes,\n  bytesToValue: bytes2port,\n  validate: validatePort\n}, {\n  code: CODE_UDP,\n  name: 'udp',\n  size: 16,\n  valueToBytes: port2bytes,\n  bytesToValue: bytes2port,\n  validate: validatePort\n}, {\n  code: CODE_DCCP,\n  name: 'dccp',\n  size: 16,\n  valueToBytes: port2bytes,\n  bytesToValue: bytes2port,\n  validate: validatePort\n}, {\n  code: CODE_IP6,\n  name: 'ip6',\n  size: 128,\n  valueToBytes: ip6ToBytes,\n  bytesToValue: ip6ToString,\n  stringToValue: ip6StringToValue,\n  validate: (value) => {\n    if (!isIPv6(value)) {\n      throw new ValidationError(`Invalid IPv6 address \"${value}\"`)\n    }\n  }\n}, {\n  code: CODE_IP6ZONE,\n  name: 'ip6zone',\n  size: V\n}, {\n  code: CODE_IPCIDR,\n  name: 'ipcidr',\n  size: 8,\n  bytesToValue: bytesToString('base10'),\n  valueToBytes: stringToBytes('base10')\n}, {\n  code: CODE_DNS,\n  name: 'dns',\n  size: V\n}, {\n  code: CODE_DNS4,\n  name: 'dns4',\n  size: V\n}, {\n  code: CODE_DNS6,\n  name: 'dns6',\n  size: V\n}, {\n  code: CODE_DNSADDR,\n  name: 'dnsaddr',\n  size: V\n}, {\n  code: CODE_SCTP,\n  name: 'sctp',\n  size: 16,\n  valueToBytes: port2bytes,\n  bytesToValue: bytes2port,\n  validate: validatePort\n}, {\n  code: CODE_UDT,\n  name: 'udt'\n}, {\n  code: CODE_UTP,\n  name: 'utp'\n}, {\n  code: CODE_UNIX,\n  name: 'unix',\n  size: V,\n  stringToValue: (str) => decodeURIComponent(str),\n  valueToString: (val) => encodeURIComponent(val)\n}, {\n  code: CODE_P2P,\n  name: 'p2p',\n  aliases: ['ipfs'],\n  size: V,\n  bytesToValue: bytesToString('base58btc'),\n  valueToBytes: (val) => {\n    if (val.startsWith('Q') || val.startsWith('1')) {\n      return stringToBytes('base58btc')(val)\n    }\n\n    return CID.parse(val).multihash.bytes\n  }\n}, {\n  code: CODE_ONION,\n  name: 'onion',\n  size: 96,\n  bytesToValue: bytes2onion,\n  valueToBytes: onion2bytes\n}, {\n  code: CODE_ONION3,\n  name: 'onion3',\n  size: 296,\n  bytesToValue: bytes2onion,\n  valueToBytes: onion32bytes\n}, {\n  code: CODE_GARLIC64,\n  name: 'garlic64',\n  size: V\n}, {\n  code: CODE_GARLIC32,\n  name: 'garlic32',\n  size: V\n}, {\n  code: CODE_TLS,\n  name: 'tls'\n}, {\n  code: CODE_SNI,\n  name: 'sni',\n  size: V\n}, {\n  code: CODE_NOISE,\n  name: 'noise'\n}, {\n  code: CODE_QUIC,\n  name: 'quic'\n}, {\n  code: CODE_QUIC_V1,\n  name: 'quic-v1'\n}, {\n  code: CODE_WEBTRANSPORT,\n  name: 'webtransport'\n}, {\n  code: CODE_CERTHASH,\n  name: 'certhash',\n  size: V,\n  bytesToValue: bytes2mb(base64url),\n  valueToBytes: mb2bytes\n}, {\n  code: CODE_HTTP,\n  name: 'http'\n}, {\n  code: CODE_HTTP_PATH,\n  name: 'http-path',\n  size: V,\n  stringToValue: (str) => `/${decodeURIComponent(str)}`,\n  valueToString: (val) => encodeURIComponent(val.substring(1))\n}, {\n  code: CODE_HTTPS,\n  name: 'https'\n}, {\n  code: CODE_WS,\n  name: 'ws'\n}, {\n  code: CODE_WSS,\n  name: 'wss'\n}, {\n  code: CODE_P2P_WEBSOCKET_STAR,\n  name: 'p2p-websocket-star'\n}, {\n  code: CODE_P2P_STARDUST,\n  name: 'p2p-stardust'\n}, {\n  code: CODE_P2P_WEBRTC_STAR,\n  name: 'p2p-webrtc-star'\n}, {\n  code: CODE_P2P_WEBRTC_DIRECT,\n  name: 'p2p-webrtc-direct'\n}, {\n  code: CODE_WEBRTC_DIRECT,\n  name: 'webrtc-direct'\n}, {\n  code: CODE_WEBRTC,\n  name: 'webrtc'\n}, {\n  code: CODE_P2P_CIRCUIT,\n  name: 'p2p-circuit'\n}, {\n  code: CODE_MEMORY,\n  name: 'memory',\n  size: V\n}]\n\ncodecs.forEach(codec => {\n  registry.addProtocol(codec)\n})\n", "import * as varint from 'uint8-varint'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { InvalidMultiaddrError } from './errors.ts'\nimport { registry, V } from './registry.ts'\nimport type { Component } from './index.js'\nimport type { ProtocolCodec } from './registry.ts'\n\nexport function bytesToComponents (bytes: Uint8Array): Component[] {\n  const components: Component[] = []\n\n  let i = 0\n  while (i < bytes.length) {\n    const code = varint.decode(bytes, i)\n    const codec = registry.getProtocol(code)\n    const codeLength = varint.encodingLength(code)\n    const size = sizeForAddr(codec, bytes, i + codeLength)\n    let sizeLength = 0\n\n    if (size > 0 && codec.size === V) {\n      sizeLength = varint.encodingLength(size)\n    }\n\n    const componentLength = codeLength + sizeLength + size\n\n    const component: Component = {\n      code,\n      name: codec.name,\n      bytes: bytes.subarray(i, i + componentLength)\n    }\n\n    if (size > 0) {\n      const valueOffset = i + codeLength + sizeLength\n      const valueBytes = bytes.subarray(valueOffset, valueOffset + size)\n\n      component.value = codec.bytesToValue?.(valueBytes) ?? uint8ArrayToString(valueBytes)\n    }\n\n    components.push(component)\n\n    i += componentLength\n  }\n\n  return components\n}\n\nexport function componentsToBytes (components: Component[]): Uint8Array {\n  let length = 0\n  const bytes: Uint8Array[] = []\n\n  for (const component of components) {\n    if (component.bytes == null) {\n      const codec = registry.getProtocol(component.code)\n      const codecLength = varint.encodingLength(component.code)\n      let valueBytes: Uint8Array | undefined\n      let valueLength = 0\n      let valueLengthLength = 0\n\n      if (component.value != null) {\n        valueBytes = codec.valueToBytes?.(component.value) ?? uint8ArrayFromString(component.value)\n        valueLength = valueBytes.byteLength\n\n        if (codec.size === V) {\n          valueLengthLength = varint.encodingLength(valueLength)\n        }\n      }\n\n      const bytes = new Uint8Array(codecLength + valueLengthLength + valueLength)\n\n      // encode the protocol code\n      let offset = 0\n      varint.encodeUint8Array(component.code, bytes, offset)\n      offset += codecLength\n\n      // if there is a value\n      if (valueBytes != null) {\n        // if the value has variable length, encode the length\n        if (codec.size === V) {\n          varint.encodeUint8Array(valueLength, bytes, offset)\n          offset += valueLengthLength\n        }\n\n        // finally encode the value\n        bytes.set(valueBytes, offset)\n      }\n\n      component.bytes = bytes\n    }\n\n    bytes.push(component.bytes)\n    length += component.bytes.byteLength\n  }\n\n  return uint8ArrayConcat(bytes, length)\n}\n\nexport function stringToComponents (string: string): Component[] {\n  if (string.charAt(0) !== '/') {\n    throw new InvalidMultiaddrError('String multiaddr must start with \"/\"')\n  }\n\n  const components: Component[] = []\n  let collecting: 'protocol' | 'value' = 'protocol'\n  let value = ''\n  let protocol = ''\n\n  for (let i = 1; i < string.length; i++) {\n    const char = string.charAt(i)\n\n    if (char !== '/') {\n      if (collecting === 'protocol') {\n        protocol += string.charAt(i)\n      } else {\n        value += string.charAt(i)\n      }\n    }\n\n    const ended = i === string.length - 1\n\n    if (char === '/' || ended) {\n      const codec = registry.getProtocol(protocol)\n\n      if (collecting === 'protocol') {\n        if (codec.size == null || codec.size === 0) {\n          // a protocol without an address, eg. `/tls`\n          components.push({\n            code: codec.code,\n            name: codec.name\n          })\n\n          value = ''\n          protocol = ''\n          collecting = 'protocol'\n\n          continue\n        } else if (ended) {\n          throw new InvalidMultiaddrError(`Component ${protocol} was missing value`)\n        }\n\n        // continue collecting value\n        collecting = 'value'\n      } else if (collecting === 'value') {\n        const component: Component = {\n          code: codec.code,\n          name: codec.name\n        }\n\n        if (codec.size != null && codec.size !== 0) {\n          if (value === '') {\n            throw new InvalidMultiaddrError(`Component ${protocol} was missing value`)\n          }\n\n          component.value = codec.stringToValue?.(value) ?? value\n        }\n\n        components.push(component)\n\n        value = ''\n        protocol = ''\n        collecting = 'protocol'\n      }\n    }\n  }\n\n  if (protocol !== '' && value !== '') {\n    throw new InvalidMultiaddrError('Incomplete multiaddr')\n  }\n\n  return components\n}\n\nexport function componentsToString (components: Component[]): string {\n  return `/${components.flatMap(component => {\n      if (component.value == null) {\n        return component.name\n      }\n\n      const codec = registry.getProtocol(component.code)\n\n      if (codec == null) {\n        throw new InvalidMultiaddrError(`Unknown protocol code ${component.code}`)\n      }\n\n      return [\n        component.name,\n        codec.valueToString?.(component.value) ?? component.value\n      ]\n    }).join('/')}`\n}\n\n/**\n * For the passed address, return the serialized size\n */\nfunction sizeForAddr (codec: ProtocolCodec, bytes: Uint8Array, offset: number): number {\n  if (codec.size == null || codec.size === 0) {\n    return 0\n  }\n\n  if (codec.size > 0) {\n    return codec.size / 8\n  }\n\n  return varint.decode(bytes, offset)\n}\n", "import { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { bytesToComponents, componentsToBytes, componentsToString, stringToComponents } from './components.js'\nimport { InvalidMultiaddrError, InvalidParametersError } from './errors.ts'\nimport { registry } from './registry.ts'\nimport { isMultiaddr } from './index.js'\nimport type { MultiaddrInput, Multiaddr as MultiaddrInterface, Component } from './index.js'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\nexport const symbol = Symbol.for('@multiformats/multiaddr')\n\nfunction toComponents (addr: MultiaddrInput): Component[] {\n  if (addr == null) {\n    addr = '/'\n  }\n\n  if (isMultiaddr(addr)) {\n    return addr.getComponents()\n  }\n\n  if (addr instanceof Uint8Array) {\n    return bytesToComponents(addr)\n  }\n\n  if (typeof addr === 'string') {\n    addr = addr\n      .replace(/\\/(\\/)+/, '/')\n      .replace(/(\\/)+$/, '')\n\n    if (addr === '') {\n      addr = '/'\n    }\n\n    return stringToComponents(addr)\n  }\n\n  if (Array.isArray(addr)) {\n    return addr\n  }\n\n  throw new InvalidMultiaddrError('Must be a string, Uint8Array, Component[], or another Multiaddr')\n}\n\ninterface MultiaddrOptions {\n  validate?: boolean\n}\n\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nexport class Multiaddr implements MultiaddrInterface {\n  [symbol]: boolean = true\n  readonly #components: Component[]\n\n  // cache string representation\n  #string: string | undefined\n  // cache byte representation\n  #bytes: Uint8Array | undefined\n\n  constructor (addr: MultiaddrInput | Component[] = '/', options: MultiaddrOptions = {}) {\n    this.#components = toComponents(addr)\n\n    if (options.validate !== false) {\n      validate(this)\n    }\n  }\n\n  get bytes (): Uint8Array {\n    if (this.#bytes == null) {\n      this.#bytes = componentsToBytes(this.#components)\n    }\n\n    return this.#bytes\n  }\n\n  toString (): string {\n    if (this.#string == null) {\n      this.#string = componentsToString(this.#components)\n    }\n\n    return this.#string\n  }\n\n  toJSON (): string {\n    return this.toString()\n  }\n\n  getComponents (): Component[] {\n    return [\n      ...this.#components.map(c => ({ ...c }))\n    ]\n  }\n\n  encapsulate (addr: MultiaddrInput): MultiaddrInterface {\n    const ma = new Multiaddr(addr)\n\n    return new Multiaddr([\n      ...this.#components,\n      ...ma.getComponents()\n    ], {\n      validate: false\n    })\n  }\n\n  decapsulate (addr: Multiaddr | string): MultiaddrInterface {\n    const addrString = addr.toString()\n    const s = this.toString()\n    const i = s.lastIndexOf(addrString)\n\n    if (i < 0) {\n      throw new InvalidParametersError(`Address ${this.toString()} does not contain subaddress: ${addrString}`)\n    }\n\n    return new Multiaddr(s.slice(0, i), {\n      validate: false\n    })\n  }\n\n  decapsulateCode (code: number): Multiaddr {\n    let index\n\n    for (let i = this.#components.length - 1; i > -1; i--) {\n      if (this.#components[i].code === code) {\n        index = i\n        break\n      }\n    }\n\n    return new Multiaddr(this.#components.slice(0, index), {\n      validate: false\n    })\n  }\n\n  equals (addr: { bytes: Uint8Array }): boolean {\n    return uint8ArrayEquals(this.bytes, addr.bytes)\n  }\n\n  /**\n   * Returns Multiaddr as a human-readable string\n   * https://nodejs.org/api/util.html#utilinspectcustom\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n   * ```\n   */\n  [inspect] (): string {\n    return `Multiaddr(${this.toString()})`\n  }\n}\n\n/**\n * Ensures all multiaddr tuples are correct. Throws if any invalid protocols or\n * values are encountered.\n */\nexport function validate (addr: Multiaddr): void {\n  addr.getComponents()\n    .forEach(component => {\n      const codec = registry.getProtocol(component.code)\n\n      if (component.value == null) {\n        return\n      }\n\n      codec.validate?.(component.value)\n    })\n}\n", "/**\n * @packageDocumentation\n *\n * A standard way to represent addresses that\n *\n * - support any standard network protocol\n * - have a binary packed format\n * - have a nice string representation\n * - encapsulate well\n *\n * @example\n *\n * ```TypeScript\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const addr = multiaddr('/ip4/127.0.0.1/udp/1234')\n * // Multiaddr(/ip4/127.0.0.1/udp/1234)\n *\n * addr.bytes\n * // <Uint8Array 04 7f 00 00 01 11 04 d2>\n *\n * addr.toString()\n * // '/ip4/127.0.0.1/udp/1234'\n *\n * addr.getComponents()\n * // [\n * //   { code: 4, name: 'ip4', value: '127.0.0.1' },\n * //   { code: 273, name: 'udp', value: '1234' }\n * // ]\n *\n * addr.encapsulate('/sctp/5678')\n * // Multiaddr(/ip4/127.0.0.1/udp/1234/sctp/5678)\n * ```\n *\n * @example Adding custom protocols\n *\n * To add application-specific or experimental protocols, add a protocol codec\n * to the protocol registry:\n *\n * ```ts\n * import { registry, V, multiaddr } from '@multiformats/multiaddr'\n * import type { ProtocolCodec } from '@multiformats/multiaddr'\n *\n * const maWithCustomTuple = '/custom-protocol/hello'\n *\n * // throws UnknownProtocolError\n * multiaddr(maWithCustomTuple)\n *\n * const protocol: ProtocolCodec = {\n *   code: 2059,\n *   name: 'custom-protocol',\n *   size: V\n *   // V means variable length, can also be 0, a positive integer (e.g. a fixed\n *   // length or omitted\n * }\n *\n * registry.addProtocol(protocol)\n *\n * // does not throw UnknownProtocolError\n * multiaddr(maWithCustomTuple)\n *\n * // protocols can also be removed\n * registry.removeProtocol(protocol.code)\n * ```\n */\n\nimport { Multiaddr as MultiaddrClass, symbol } from './multiaddr.js'\nimport { registry, V } from './registry.ts'\nimport type { ProtocolCodec } from './registry.ts'\n\n/**\n * The protocol registry stores protocol codecs that allow transformation of\n * multiaddr tuples from bytes to string and back again, and also validation of\n * the address values.\n */\nexport interface Registry {\n  /**\n   * Retrieve a protocol definition by it's code or name\n   */\n  getProtocol (key: string | number): ProtocolCodec\n\n  /**\n   * Add a new protocol definition\n   */\n  addProtocol (codec: ProtocolCodec): void\n\n  /**\n   * Remove a protocol definition by it's code\n   */\n  removeProtocol (code: number): void\n}\n\n/**\n * These types can be parsed into a {@link Multiaddr} object\n */\nexport type MultiaddrInput = string | Multiaddr | Uint8Array | null | Component[]\n\n/**\n * A Component is a section of a multiaddr with a name/code, possibly with a\n * value.\n *\n * Component names/codes are defined in the protocol table.\n *\n * @see https://github.com/multiformats/multiaddr/blob/master/protocols.csv\n */\nexport interface Component {\n  /**\n   * The code of the component as defined in the protocol table\n   */\n  code: number\n\n  /**\n   * The name of the component as defined in the protocol table\n   */\n  name: string\n\n  /**\n   * The component value, if one is present\n   */\n  value?: string\n\n  /**\n   * The bytes that make up the component. This will be set if the multiaddr\n   * was parsed from a `Uint8Array`, or if `.bytes` has been accessed on it.\n   */\n  bytes?: Uint8Array\n}\n\nexport interface Multiaddr {\n  bytes: Uint8Array\n\n  /**\n   * Returns Multiaddr as a String\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toString(): string\n\n  /**\n   * Returns Multiaddr as a JSON encoded object\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * JSON.stringify(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n   * // '/ip4/127.0.0.1/tcp/4001'\n   * ```\n   */\n  toJSON(): string\n\n  /**\n   * Returns the components that make up this Multiaddr\n   *\n   * @example\n   * ```ts\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/4001').getComponents()\n   * // [{ name: 'ip4', code: 4, value: '127.0.0.1' }, { name: 'tcp', code: 6, value: '4001' }]\n   * ```\n   */\n  getComponents(): Component[]\n\n  /**\n   * Encapsulates a Multiaddr in another Multiaddr\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh3.toString()\n   * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n   * ```\n   *\n   * @param {MultiaddrInput} addr - Multiaddr to add into this Multiaddr\n   */\n  encapsulate(addr: MultiaddrInput): Multiaddr\n\n  /**\n   * Decapsulates a Multiaddr from another Multiaddr\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * const mh3 = mh1.encapsulate(mh2)\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh3.decapsulate(mh2).toString()\n   * // '/ip4/8.8.8.8/tcp/1080'\n   * ```\n   *\n   * @param {Multiaddr | string} addr - Multiaddr to remove from this Multiaddr\n   */\n  decapsulate(addr: Multiaddr | string): Multiaddr\n\n  /**\n   * A more reliable version of `decapsulate` if you are targeting a specific\n   * code, such as 421 (the `p2p` protocol code). The last index of the code\n   * will be removed from the `Multiaddr`, and a new instance will be returned.\n   * If the code is not present, the original `Multiaddr` is returned.\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const addr = multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n   * // Multiaddr(/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC)\n   *\n   * addr.decapsulateCode(421).toString()\n   * // '/ip4/0.0.0.0/tcp/8080'\n   *\n   * multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n   * // '/ip4/127.0.0.1/tcp/8080'\n   * ```\n   */\n  decapsulateCode(code: number): Multiaddr\n\n  /**\n   * Checks if two Multiaddrs are the same\n   *\n   * @example\n   * ```js\n   * import { multiaddr } from '@multiformats/multiaddr'\n   *\n   * const mh1 = multiaddr('/ip4/8.8.8.8/tcp/1080')\n   * // Multiaddr(/ip4/8.8.8.8/tcp/1080)\n   *\n   * const mh2 = multiaddr('/ip4/127.0.0.1/tcp/4001')\n   * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n   *\n   * mh1.equals(mh1)\n   * // true\n   *\n   * mh1.equals(mh2)\n   * // false\n   * ```\n   */\n  equals(addr: { bytes: Uint8Array }): boolean\n}\n\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nexport function isMultiaddr (value: any): value is Multiaddr {\n  return Boolean(value?.[symbol])\n}\n\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nexport function multiaddr (addr?: MultiaddrInput): Multiaddr {\n  return new MultiaddrClass(addr)\n}\n\n/**\n * Export all table.csv codes. These are all named exports so can be tree-shaken\n * out by bundlers.\n */\nexport * from './constants.ts'\nexport { registry, V }\nexport type { ProtocolCodec }\n", "import type { Matcher, MultiaddrMatcher } from './index.js'\nimport type { Multiaddr, Component } from '@multiformats/multiaddr'\n\n/**\n * Matches a multiaddr component with the specified code but no value\n */\nexport const code = (code: number): Matcher => {\n  return {\n    match: (vals) => {\n      const component = vals[0]\n\n      if (component == null) {\n        return false\n      }\n\n      if (component.code !== code) {\n        return false\n      }\n\n      if (component.value != null) {\n        return false\n      }\n\n      return vals.slice(1)\n    }\n  }\n}\n\n/**\n * Matches a multiaddr component with the specified code and value. If the value\n * is omitted any non-undefined value is matched.\n */\nexport const value = (code: number, value?: string): Matcher => {\n  return {\n    match: (vals) => {\n      const component = vals[0]\n\n      if (component?.code !== code) {\n        return false\n      }\n\n      if (component.value == null) {\n        return false\n      }\n\n      if (value != null && component.value !== value) {\n        return false\n      }\n\n      return vals.slice(1)\n    }\n  }\n}\n\n/**\n * Matches a multiaddr component with the specified code and value. If the value\n * is omitted any non-undefined value is matched.\n */\nexport const not = (matcher: Matcher): Matcher => {\n  return {\n    match: (vals) => {\n      const result = matcher.match(vals)\n\n      if (result === false) {\n        return vals\n      }\n\n      return false\n    }\n  }\n}\n\n/**\n * An optional matcher\n */\nexport const optional = (matcher: Matcher): Matcher => {\n  return {\n    match: (vals) => {\n      const result = matcher.match(vals)\n\n      if (result === false) {\n        return vals\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Matches any one of the passed matches\n */\nexport const or = (...matchers: Matcher[]): Matcher => {\n  return {\n    match: (vals) => {\n      let matches: Component[] | undefined\n\n      for (const matcher of matchers) {\n        const result = matcher.match(vals)\n\n        // no match\n        if (result === false) {\n          continue\n        }\n\n        // choose greediest matcher\n        if (matches == null || result.length < matches.length) {\n          matches = result\n        }\n      }\n\n      if (matches == null) {\n        return false\n      }\n\n      return matches\n    }\n  }\n}\n\n/**\n * Matches all of the passed matchers\n */\nexport const and = (...matchers: Matcher[]): Matcher => {\n  return {\n    match: (vals) => {\n      for (const matcher of matchers) {\n        // pass what's left of the array\n        const result = matcher.match(vals)\n\n        // no match\n        if (result === false) {\n          return false\n        }\n\n        vals = result\n      }\n\n      return vals\n    }\n  }\n}\n\n/**\n * Create a multiaddr matcher from the passed component matchers\n */\nexport function fmt (...matchers: Matcher[]): MultiaddrMatcher {\n  function match (ma?: Multiaddr): Component[] | false {\n    if (ma == null) {\n      return false\n    }\n\n    let parts = ma.getComponents()\n\n    for (const matcher of matchers) {\n      const result = matcher.match(parts)\n\n      if (result === false) {\n        return false\n      }\n\n      parts = result\n    }\n\n    return parts\n  }\n\n  function matches (ma?: Multiaddr): boolean {\n    const result = match(ma)\n\n    return result !== false\n  }\n\n  function exactMatch (ma?: Multiaddr): boolean {\n    const result = match(ma)\n\n    if (result === false) {\n      return false\n    }\n\n    return result.length === 0\n  }\n\n  return {\n    matchers,\n    matches,\n    exactMatch\n  }\n}\n", "/**\n * @packageDocumentation\n *\n * This module exports various matchers that can be used to infer the type of a\n * passed multiaddr.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org')\n *\n * DNS.matches(ma) // true - this is a multiaddr with a DNS address at the start\n * ```\n *\n * @example\n *\n * The default matching behaviour ignores any subsequent tuples in the multiaddr.\n * If you want stricter matching you can use `.exactMatch`:\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS, Circuit } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/dnsaddr/example.org/p2p/QmFoo/p2p-circuit/p2p/QmBar')\n *\n * DNS.exactMatch(ma) // false - this address has extra tuples after the DNS component\n * Circuit.matches(ma) // true\n * Circuit.exactMatch(ma) // true - the extra tuples are circuit relay related\n * ```\n */\n\nimport { CODE_P2P, CODE_DNS4, CODE_DNS6, CODE_DNSADDR, CODE_DNS, CODE_IP4, CODE_IP6, CODE_TCP, CODE_UDP, CODE_QUIC, CODE_QUIC_V1, CODE_WS, CODE_WSS, CODE_TLS, CODE_SNI, CODE_WEBRTC_DIRECT, CODE_CERTHASH, CODE_WEBTRANSPORT, CODE_P2P_CIRCUIT, CODE_WEBRTC, CODE_HTTP, CODE_UNIX, CODE_HTTPS, CODE_MEMORY, CODE_IP6ZONE, CODE_IPCIDR } from '@multiformats/multiaddr'\nimport { and, or, optional, fmt, code, value, not } from './utils.js'\nimport type { Multiaddr, Component } from '@multiformats/multiaddr'\n\n/**\n * A matcher accepts multiaddr components and either fails to match and returns\n * false or returns a sublist of unmatched components\n */\nexport interface Matcher {\n  match(parts: Component[]): Component[] | false\n}\n\n/**\n * A MultiaddrMatcher allows interpreting a multiaddr as a certain type of\n * multiaddr\n */\nexport interface MultiaddrMatcher {\n  /**\n   * The matchers that make up this MultiaddrMatcher - useful if you want to\n   * make your own custom matchers\n   */\n  matchers: Matcher[]\n\n  /**\n   * Returns true if the passed multiaddr can be treated as this type of\n   * multiaddr\n   */\n  matches(ma?: Multiaddr): boolean\n\n  /**\n   * Returns true if the passed multiaddr terminates as this type of\n   * multiaddr\n   */\n  exactMatch(ma?: Multiaddr): boolean\n}\n\n/**\n * Matches PeerId addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { PEER_ID } from '@multiformats/multiaddr-matcher'\n *\n * PEER_ID.matches(multiaddr('/p2p/Qmfoo')) // true\n * PEER_ID.matches(multiaddr('/ipfs/Qmfoo')) // true\n * ```\n */\nconst _PEER_ID = value(CODE_P2P)\n\nexport const PEER_ID = fmt(_PEER_ID)\n\n/**\n * DNS matchers\n */\nconst _DNS4 = value(CODE_DNS4)\nconst _DNS6 = value(CODE_DNS6)\nconst _DNSADDR = value(CODE_DNSADDR)\nconst _DNS = value(CODE_DNS)\n\n/**\n * Matches dns4 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS4 } from '@multiformats/multiaddr-matcher'\n *\n * DNS4.matches(multiaddr('/dns4/example.org')) // true\n * ```\n */\nexport const DNS4 = fmt(_DNS4, optional(value(CODE_P2P)))\n\n/**\n * Matches dns6 addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS6 } from '@multiformats/multiaddr-matcher'\n *\n * DNS6.matches(multiaddr('/dns6/example.org')) // true\n * ```\n */\nexport const DNS6 = fmt(_DNS6, optional(value(CODE_P2P)))\n\n/**\n * Matches dnsaddr addresses.\n *\n * Use {@link DNS DNS} instead to match any type of DNS address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNSADDR } from '@multiformats/multiaddr-matcher'\n *\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNSADDR.matches(multiaddr('/dnsaddr/example.org/p2p/Qmfoo')) // true\n * ```\n */\nexport const DNSADDR = fmt(_DNSADDR, optional(value(CODE_P2P)))\n\n/**\n * Matches any dns address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { DNS } from '@multiformats/multiaddr-matcher'\n *\n * DNS.matches(multiaddr('/dnsaddr/example.org')) // true\n * DNS.matches(multiaddr('/dns4/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org')) // true\n * DNS.matches(multiaddr('/dns6/example.org/p2p/Qmfoo')) // true\n * ```\n */\nexport const DNS = fmt(or(_DNS, _DNSADDR, _DNS4, _DNS6), optional(value(CODE_P2P)))\n\nconst _IP4 = and(\n  value(CODE_IP4),\n  optional(value(CODE_IPCIDR))\n)\nconst _IP6 = and(\n  optional(value(CODE_IP6ZONE)),\n  value(CODE_IP6),\n  optional(value(CODE_IPCIDR))\n)\nconst _IP = or(_IP4, _IP6)\n\nconst _IP_OR_DOMAIN = or(_IP, _DNS, _DNS4, _DNS6, _DNSADDR)\n\n/**\n * A matcher for addresses that start with IP or DNS tuples.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP_OR_DOMAIN } from '@multiformats/multiaddr-matcher'\n *\n * IP_OR_DOMAIN.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/ip4/123.123.123.123/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/dns/example.com/p2p/QmFoo')) // true\n * IP_OR_DOMAIN.matches(multiaddr('/p2p/QmFoo')) // false\n * ```\n */\nexport const IP_OR_DOMAIN = fmt(or(_IP, and(or(_DNS, _DNSADDR, _DNS4, _DNS6), optional(value(CODE_P2P)))))\n\n/**\n * Matches ip4 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP4 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip4/123.123.123.123')\n *\n * IP4.matches(ma) // true\n * ```\n */\nexport const IP4 = fmt(_IP4)\n\n/**\n * Matches ip6 addresses.\n *\n * Use {@link IP IP} instead to match any ip4/ip6 address.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP6 } from '@multiformats/multiaddr-matcher'\n *\n * const ma = multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')\n *\n * IP6.matches(ma) // true\n * ```\n */\nexport const IP6 = fmt(_IP6)\n\n/**\n * Matches ip4 or ip6 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { IP } from '@multiformats/multiaddr-matcher'\n *\n * IP.matches(multiaddr('/ip4/123.123.123.123')) // true\n * IP.matches(multiaddr('/ip6/fe80::1cc1:a3b8:322f:cf22')) // true\n * ```\n */\nexport const IP = fmt(_IP)\n\nconst _TCP = and(_IP_OR_DOMAIN, value(CODE_TCP))\nconst _UDP = and(_IP_OR_DOMAIN, value(CODE_UDP))\n\n/**\n * Matches TCP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { TCP } from '@multiformats/multiaddr-matcher'\n *\n * TCP.matches(multiaddr('/ip4/123.123.123.123/tcp/1234')) // true\n * ```\n */\nexport const TCP = fmt(and(_TCP, optional(value(CODE_P2P))))\n\n/**\n * Matches UDP addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { UDP } from '@multiformats/multiaddr-matcher'\n *\n * UDP.matches(multiaddr('/ip4/123.123.123.123/udp/1234')) // true\n * ```\n */\nexport const UDP = fmt(_UDP)\n\nconst _QUIC = and(_UDP, code(CODE_QUIC), optional(value(CODE_P2P)))\nconst _QUIC_V1 = and(_UDP, code(CODE_QUIC_V1), optional(value(CODE_P2P)))\n\nconst QUIC_V0_OR_V1 = or(_QUIC, _QUIC_V1)\n\n/**\n * Matches QUIC addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUIC } from '@multiformats/multiaddr-matcher'\n *\n * QUIC.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic')) // true\n * ```\n */\nexport const QUIC = fmt(_QUIC)\n\n/**\n * Matches QUICv1 addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { QUIC_V1 } from '@multiformats/multiaddr-matcher'\n *\n * QUIC_V1.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1')) // true\n * ```\n */\nexport const QUIC_V1 = fmt(_QUIC_V1)\n\nconst _WEB = or(\n  _IP_OR_DOMAIN,\n  _TCP,\n  _UDP,\n  _QUIC,\n  _QUIC_V1\n)\n\nconst _WebSockets = or(\n  and(_WEB, code(CODE_WS), optional(value(CODE_P2P)))\n)\n\n/**\n * Matches WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSockets } from '@multiformats/multiaddr-matcher'\n *\n * WebSockets.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/ws')) // true\n * ```\n */\nexport const WebSockets = fmt(_WebSockets)\n\nconst _WebSocketsSecure = or(\n  and(_WEB, code(CODE_WSS), optional(value(CODE_P2P))),\n  and(_WEB, code(CODE_TLS), optional(value(CODE_SNI)), code(CODE_WS), optional(value(CODE_P2P)))\n)\n\n/**\n * Matches secure WebSocket addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebSocketsSecure } from '@multiformats/multiaddr-matcher'\n *\n * WebSocketsSecure.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/wss')) // true\n * ```\n */\nexport const WebSocketsSecure = fmt(_WebSocketsSecure)\n\nconst _WebRTCDirect = and(_UDP, code(CODE_WEBRTC_DIRECT), optional(value(CODE_CERTHASH)), optional(value(CODE_CERTHASH)), optional(value(CODE_P2P)))\n\n/**\n * Matches WebRTC-direct addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo/webrtc-direct/certhash/u....')) // true\n * ```\n */\nexport const WebRTCDirect = fmt(_WebRTCDirect)\n\nconst _WebTransport = and(_QUIC_V1, code(CODE_WEBTRANSPORT), optional(value(CODE_CERTHASH)), optional(value(CODE_CERTHASH)), optional(value(CODE_P2P)))\n\n/**\n * Matches WebTransport addresses.\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTCDirect } from '@multiformats/multiaddr-matcher'\n *\n * WebRTCDirect.matches(multiaddr('/ip4/123.123.123.123/udp/1234/quic-v1/webtransport/certhash/u..../certhash/u..../p2p/QmFoo')) // true\n * ```\n */\nexport const WebTransport = fmt(_WebTransport)\n\nconst _P2P = or(\n  _WebSockets,\n  _WebSocketsSecure,\n  and(_TCP, optional(value(CODE_P2P))),\n  and(QUIC_V0_OR_V1, optional(value(CODE_P2P))),\n  and(_IP_OR_DOMAIN, optional(value(CODE_P2P))),\n  _WebRTCDirect,\n  _WebTransport,\n  value(CODE_P2P)\n)\n\n/**\n * Matches peer addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { P2P } from '@multiformats/multiaddr-matcher'\n *\n * P2P.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmFoo')) // true\n * ```\n */\nexport const P2P = fmt(_P2P)\n\nconst _Circuit = and(optional(_P2P), code(CODE_P2P_CIRCUIT), not(code(CODE_WEBRTC)), optional(value(CODE_P2P)))\n\n/**\n * Matches circuit relay addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Circuit } from '@multiformats/multiaddr-matcher'\n *\n * Circuit.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/p2p/QmTarget')) // true\n * ```\n */\nexport const Circuit = fmt(_Circuit)\n\nconst _WebRTC = or(\n  and(_P2P, code(CODE_P2P_CIRCUIT), code(CODE_WEBRTC), optional(value(CODE_P2P))),\n  and(_P2P, code(CODE_WEBRTC), optional(value(CODE_P2P))),\n  and(code(CODE_WEBRTC), optional(value(CODE_P2P)))\n)\n\n/**\n * Matches WebRTC addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { WebRTC } from '@multiformats/multiaddr-matcher'\n *\n * WebRTC.matches(multiaddr('/ip4/123.123.123.123/tcp/1234/p2p/QmRelay/p2p-circuit/webrtc/p2p/QmTarget')) // true\n * ```\n */\nexport const WebRTC = fmt(_WebRTC)\n\nconst _HTTP = or(\n  and(_IP_OR_DOMAIN, value(CODE_TCP), code(CODE_HTTP), optional(value(CODE_P2P))),\n  and(_IP_OR_DOMAIN, code(CODE_HTTP), optional(value(CODE_P2P)))\n)\n\n/**\n * Matches HTTP addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/http')) // true\n * ```\n */\nexport const HTTP = fmt(_HTTP)\n\nconst _HTTPS = and(_IP_OR_DOMAIN, or(\n  and(value(CODE_TCP, '443'), code(CODE_HTTP)),\n  and(value(CODE_TCP), code(CODE_HTTPS)),\n  and(value(CODE_TCP), code(CODE_TLS), code(CODE_HTTP)),\n  and(code(CODE_TLS), code(CODE_HTTP)),\n  code(CODE_TLS),\n  code(CODE_HTTPS)\n),\noptional(value(CODE_P2P))\n)\n\n/**\n * Matches HTTPS addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { HTTP } from '@multiformats/multiaddr-matcher'\n *\n * HTTP.matches(multiaddr('/dns/example.org/tls/http')) // true\n * ```\n */\nexport const HTTPS = fmt(_HTTPS)\n\nconst _Memory = or(\n  and(value(CODE_MEMORY), optional(value(CODE_P2P)))\n)\n\n/**\n * Matches Memory addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Memory } from '@multiformats/multiaddr-matcher'\n *\n * Memory.matches(multiaddr('/memory/0xDEADBEEF')) // true\n * ```\n */\nexport const Memory = fmt(_Memory)\n\nconst _Unix = or(\n  and(value(CODE_UNIX), optional(value(CODE_P2P)))\n)\n\n/**\n * Matches Unix addresses\n *\n * @example\n *\n * ```ts\n * import { multiaddr } from '@multiformats/multiaddr'\n * import { Unix } from '@multiformats/multiaddr-matcher'\n *\n * Unix.matches(multiaddr('/unix/%2Fpath%2Fto%2Funix.socket')) // true\n * ```\n */\nexport const Unix = fmt(_Unix)\n", "import { decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime'\nimport type { Codec, DecodeOptions } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Message {\n  flag?: Message.Flag\n  message?: Uint8Array\n}\n\nexport namespace Message {\n  export enum Flag {\n    FIN = 'FIN',\n    STOP_SENDING = 'STOP_SENDING',\n    RESET = 'RESET',\n    FIN_ACK = 'FIN_ACK'\n  }\n\n  enum __FlagValues {\n    FIN = 0,\n    STOP_SENDING = 1,\n    RESET = 2,\n    FIN_ACK = 3\n  }\n\n  export namespace Flag {\n    export const codec = (): Codec<Flag> => {\n      return enumeration<Flag>(__FlagValues)\n    }\n  }\n\n  let _codec: Codec<Message>\n\n  export const codec = (): Codec<Message> => {\n    if (_codec == null) {\n      _codec = message<Message>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.flag != null) {\n          w.uint32(8)\n          Message.Flag.codec().encode(obj.flag, w)\n        }\n\n        if (obj.message != null) {\n          w.uint32(18)\n          w.bytes(obj.message)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length, opts = {}) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.flag = Message.Flag.codec().decode(reader)\n              break\n            }\n            case 2: {\n              obj.message = reader.bytes()\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Message>): Uint8Array => {\n    return encodeMessage(obj, Message.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList, opts?: DecodeOptions<Message>): Message => {\n    return decodeMessage(buf, Message.codec(), opts)\n  }\n}\n", "import { encodingLength } from 'uint8-varint'\nimport { Message } from './private-to-public/pb/message.js'\n\n/**\n * STUN servers help clients discover their own public IPs.\n *\n * Using five or more servers causes warnings to be printed so\n * ensure we limit it to max x4\n *\n * @see https://gist.github.com/mondain/b0ec1cf5f60ae726202e\n */\nexport const DEFAULT_ICE_SERVERS = [\n  'stun:stun.l.google.com:19302',\n  'stun:global.stun.twilio.com:3478',\n  'stun:stun.cloudflare.com:3478',\n  'stun:stun.services.mozilla.com:3478'\n]\n\n/**\n * Characters that can be present in a ufrag\n */\nexport const UFRAG_ALPHABET = Array.from('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890')\n\n/**\n * Used to detect the version of the WebRTC Direct connection protocol in use\n */\nexport const UFRAG_PREFIX = 'libp2p+webrtc+v1/'\n\n/**\n * How much can be buffered to the DataChannel at once\n */\nexport const MAX_BUFFERED_AMOUNT = 2 * 1024 * 1024\n\n/**\n * Max message size that can be sent to the DataChannel. In browsers this is\n * 256KiB but go-libp2p and rust-libp2p only support 16KiB at the time of\n * writing.\n *\n * @see https://blog.mozilla.org/webrtc/large-data-channel-messages/\n * @see https://issues.webrtc.org/issues/40644524\n */\nexport const MAX_MESSAGE_SIZE = 16 * 1024\n\n/**\n * max protobuf overhead:\n *\n * ```\n * [message-length][flag-field-id+type][flag-field-length][flag-field][message-field-id+type][message-field-length][message-field]\n * ```\n */\nfunction calculateProtobufOverhead (maxMessageSize = MAX_MESSAGE_SIZE): number {\n  // these have a fixed size\n  const messageLength = encodingLength(maxMessageSize - encodingLength(maxMessageSize))\n  const flagField = 1 + encodingLength(Object.keys(Message.Flag).length - 1) // id+type/value\n  const messageFieldIdType = 1 // id+type\n  const available = maxMessageSize - messageLength - flagField - messageFieldIdType\n\n  // let message-length/message-data fill the rest of the message\n  const messageFieldLengthLength = encodingLength(available)\n\n  return messageLength + flagField + messageFieldIdType + messageFieldLengthLength\n}\n\n/**\n * The protobuf message overhead includes the maximum amount of all bytes in the\n * protobuf that aren't message field bytes\n */\nexport const PROTOBUF_OVERHEAD = calculateProtobufOverhead()\n\n/**\n * When closing a stream, we wait for `bufferedAmount` to become 0 before\n * closing the underlying RTCDataChannel - this controls how long we wait in ms\n */\nexport const DATA_CHANNEL_DRAIN_TIMEOUT = 30_000\n\n/**\n * Wait for the remote to acknowledge our FIN for this long\n */\nexport const DEFAULT_FIN_ACK_TIMEOUT = 10_000\n\n/**\n * Set as the 'negotiated' muxer protocol name\n */\nexport const MUXER_PROTOCOL = '/webrtc'\n\n/**\n * The protocol used for the signalling stream protocol\n */\nexport const SIGNALING_PROTOCOL = '/webrtc-signaling/0.0.1'\n\n/**\n * Used to store generated certificates in the datastore\n */\nexport const DEFAULT_CERTIFICATE_DATASTORE_KEY = '/libp2p/webrtc-direct/certificate'\n\n/**\n * Used to store the certificate private key in the keychain\n */\nexport const DEFAULT_CERTIFICATE_PRIVATE_KEY_NAME = 'webrtc-direct-certificate-private-key'\n\n/**\n * The default type of certificate private key\n */\nexport const DEFAULT_CERTIFICATE_PRIVATE_KEY_TYPE = 'ECDSA'\n\n/**\n * How long the certificate is valid for\n */\nexport const DEFAULT_CERTIFICATE_LIFESPAN = 1_209_600_000\n\n/**\n * Renew the certificate this long before it expires\n */\nexport const DEFAULT_CERTIFICATE_RENEWAL_THRESHOLD = 86_400_000\n", "import { InvalidParametersError } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface IP4NetConfig {\n  type: 'ip4'\n  host: string\n  protocol?: 'tcp' | 'udp'\n  port?: number\n  cidr?: number\n  sni?: string\n}\n\nexport interface IP6NetConfig {\n  type: 'ip6'\n  host: string\n  protocol?: 'tcp' | 'udp'\n  port?: number\n  zone?: string\n  cidr?: string\n  sni?: string\n}\n\nexport interface DNSNetConfig {\n  type: 'dns'\n  host: string\n  protocol?: 'tcp' | 'udp'\n  port: number\n  cidr?: number\n}\n\nexport interface DNS4NetConfig {\n  type: 'dns4'\n  host: string\n  protocol?: 'tcp' | 'udp'\n  port: number\n  cidr?: number\n}\n\nexport interface DNS6NetConfig {\n  type: 'dns6'\n  host: string\n  protocol?: 'tcp' | 'udp'\n  port: number\n  cidr?: number\n}\n\nexport interface DNSAddrNetConfig {\n  type: 'dnsaddr'\n  host: string\n  protocol?: 'tcp' | 'udp'\n  port: number\n  cidr?: number\n}\n\nexport type NetConfig = IP4NetConfig | IP6NetConfig | DNSNetConfig | DNS4NetConfig | DNS6NetConfig | DNSAddrNetConfig\n\n/**\n * Returns host/port/etc information for multiaddrs, if it is available.\n *\n * It will throw if the passed multiaddr does not start with a network address,\n * e.g. a IPv4, IPv6, DNS, DNS4, DNS6 or DNSADDR address\n */\nexport function getNetConfig (ma: Multiaddr): NetConfig {\n  const components = ma.getComponents()\n  const config: any = {}\n  let index = 0\n\n  if (components[index]?.name === 'ip6zone') {\n    config.zone = `${components[index].value}`\n    index++\n  }\n\n  if (components[index].name === 'ip4' || components[index].name === 'ip6') {\n    config.type = components[index].name\n    config.host = components[index].value\n    index++\n  } else if (components[index].name === 'dns' || components[index].name === 'dns4' || components[index].name === 'dns6') {\n    config.type = components[index].name\n    config.host = components[index].value\n    index++\n  } else if (components[index].name === 'dnsaddr') {\n    config.type = components[index].name\n    config.host = `_dnsaddr.${components[index].value}`\n    index++\n  }\n\n  if (components[index]?.name === 'tcp' || components[index]?.name === 'udp') {\n    config.protocol = components[index].name === 'tcp' ? 'tcp' : 'udp'\n    config.port = parseInt(`${components[index].value}`)\n    index++\n  }\n\n  if (components[index]?.name === 'ipcidr') {\n    if (config.type === 'ip4') {\n      config.cidr = parseInt(`${components[index].value}`)\n    } else if (config.type === 'ip6') {\n      config.cidr = `${components[index].value}`\n    }\n    index++\n  }\n\n  if (config.type == null || config.host == null) {\n    throw new InvalidParametersError(`Multiaddr ${ma} was not an IPv4, IPv6, DNS, DNS4, DNS6 or DNSADDR address`)\n  }\n\n  if (components[index]?.name === 'tls' && components[index + 1]?.name === 'sni') {\n    config.sni = components[index + 1].value\n    index += 2\n  }\n\n  return config\n}\n", "export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n", "// ported from https://www.npmjs.com/package/fast-fifo\n\nexport interface Next<T> {\n  done?: boolean\n  error?: Error\n  value?: T\n}\n\nclass FixedFIFO<T> {\n  public buffer: Array<Next<T> | undefined>\n  private readonly mask: number\n  private top: number\n  private btm: number\n  public next: FixedFIFO<T> | null\n\n  constructor (hwm: number) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n      throw new Error('Max size for a FixedFIFO should be a power of two')\n    }\n\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data: Next<T>): boolean {\n    if (this.buffer[this.top] !== undefined) {\n      return false\n    }\n\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n\n    return true\n  }\n\n  shift (): Next<T> | undefined {\n    const last = this.buffer[this.btm]\n\n    if (last === undefined) {\n      return undefined\n    }\n\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  isEmpty (): boolean {\n    return this.buffer[this.btm] === undefined\n  }\n}\n\nexport interface FIFOOptions {\n  /**\n   * When the queue reaches this size, it will be split into head/tail parts\n   */\n  splitLimit?: number\n}\n\nexport class FIFO<T> {\n  public size: number\n  private readonly hwm: number\n  private head: FixedFIFO<T>\n  private tail: FixedFIFO<T>\n\n  constructor (options: FIFOOptions = {}) {\n    this.hwm = options.splitLimit ?? 16\n    this.head = new FixedFIFO<T>(this.hwm)\n    this.tail = this.head\n    this.size = 0\n  }\n\n  calculateSize (obj: any): number {\n    if (obj?.byteLength != null) {\n      return obj.byteLength\n    }\n\n    return 1\n  }\n\n  push (val: Next<T>): void {\n    if (val?.value != null) {\n      this.size += this.calculateSize(val.value)\n    }\n\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO<T>(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift (): Next<T> | undefined {\n    let val = this.tail.shift()\n\n    if (val === undefined && (this.tail.next != null)) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      val = this.tail.shift()\n    }\n\n    if (val?.value != null) {\n      this.size -= this.calculateSize(val.value)\n    }\n\n    return val\n  }\n\n  isEmpty (): boolean {\n    return this.head.isEmpty()\n  }\n}\n", "/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\n\nimport deferred from 'p-defer'\nimport { FIFO, type Next } from './fifo.js'\n\nexport class AbortError extends Error {\n  type: string\n  code: string\n\n  constructor (message?: string, code?: string) {\n    super(message ?? 'The operation was aborted')\n    this.type = 'aborted'\n    this.code = code ?? 'ABORT_ERR'\n  }\n}\n\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\ninterface BasePushable<T> {\n  /**\n   * End the iterable after all values in the buffer (if any) have been yielded. If an\n   * error is passed the buffer is cleared immediately and the next iteration will\n   * throw the passed error\n   */\n  end(err?: Error): this\n\n  /**\n   * Push a value into the iterable. Values are yielded from the iterable in the order\n   * they are pushed. Values not yet consumed from the iterable are buffered.\n   */\n  push(value: T): this\n\n  /**\n   * Returns a promise that resolves when the underlying queue becomes empty (e.g.\n   * this.readableLength === 0).\n   *\n   * If an AbortSignal is passed as an option and that signal aborts, it only\n   * causes the returned promise to reject - it does not end the pushable.\n   */\n  onEmpty(options?: AbortOptions): Promise<void>\n\n  /**\n   * This property contains the number of bytes (or objects) in the queue ready to be read.\n   *\n   * If `objectMode` is true, this is the number of objects in the queue, if false it's the\n   * total number of bytes in the queue.\n   */\n  readableLength: number\n}\n\n/**\n * An iterable that you can push values into.\n */\nexport interface Pushable<T, R = void, N = unknown> extends AsyncGenerator<T, R, N>, BasePushable<T> {}\n\n/**\n * Similar to `pushable`, except it yields multiple buffered chunks at a time. All values yielded from the iterable will be arrays.\n */\nexport interface PushableV<T, R = void, N = unknown> extends AsyncGenerator<T[], R, N>, BasePushable<T> {}\n\nexport interface Options {\n  /**\n   * A boolean value that means non-`Uint8Array`s will be passed to `.push`, default: `false`\n   */\n  objectMode?: boolean\n\n  /**\n   * A function called after *all* values have been yielded from the iterator (including\n   * buffered values). In the case when the iterator is ended with an error it will be\n   * passed the error as a parameter.\n   */\n  onEnd?(err?: Error): void\n}\n\nexport interface DoneResult { done: true }\nexport interface ValueResult<T> { done: false, value: T }\nexport type NextResult<T> = ValueResult<T> | DoneResult\n\ninterface getNext<T, V = T> { (buffer: FIFO<T>): NextResult<V> }\n\nexport interface ObjectPushableOptions extends Options {\n  objectMode: true\n}\n\nexport interface BytePushableOptions extends Options {\n  objectMode?: false\n}\n\n/**\n * Create a new async iterable. The values yielded from calls to `.next()`\n * or when used in a `for await of`loop are \"pushed\" into the iterable.\n * Returns an async iterable object with additional methods.\n */\nexport function pushable<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): Pushable<T>\nexport function pushable<T> (options: ObjectPushableOptions): Pushable<T>\nexport function pushable<T> (options: Options = {}): Pushable<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T> => {\n    const next: Next<T> | undefined = buffer.shift()\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    if (next.error != null) {\n      throw next.error\n    }\n\n    return {\n      done: next.done === true,\n      // @ts-expect-error if done is false, value will be present\n      value: next.value\n    }\n  }\n\n  return _pushable<T, T, Pushable<T>>(getNext, options)\n}\n\nexport function pushableV<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): PushableV<T>\nexport function pushableV<T> (options: ObjectPushableOptions): PushableV<T>\nexport function pushableV<T> (options: Options = {}): PushableV<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T[]> => {\n    let next: Next<T> | undefined\n    const values: T[] = []\n\n    while (!buffer.isEmpty()) {\n      next = buffer.shift()\n\n      if (next == null) {\n        break\n      }\n\n      if (next.error != null) {\n        throw next.error\n      }\n\n      if (next.done === false) {\n        // @ts-expect-error if done is false value should be pushed\n        values.push(next.value)\n      }\n    }\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    return {\n      done: next.done === true,\n      value: values\n    }\n  }\n\n  return _pushable<T, T[], PushableV<T>>(getNext, options)\n}\n\nfunction _pushable<PushType, ValueType, ReturnType> (getNext: getNext<PushType, ValueType>, options?: Options): ReturnType {\n  options = options ?? {}\n  let onEnd = options.onEnd\n  let buffer = new FIFO<PushType>()\n  let pushable: any\n  let onNext: ((next: Next<PushType>) => ReturnType) | null\n  let ended: boolean\n  let drain = deferred()\n\n  const waitNext = async (): Promise<NextResult<ValueType>> => {\n    try {\n      if (!buffer.isEmpty()) {\n        return getNext(buffer)\n      }\n\n      if (ended) {\n        return { done: true }\n      }\n\n      return await new Promise<NextResult<ValueType>>((resolve, reject) => {\n        onNext = (next: Next<PushType>) => {\n          onNext = null\n          buffer.push(next)\n\n          try {\n            resolve(getNext(buffer))\n          } catch (err) {\n            reject(err)\n          }\n\n          return pushable\n        }\n      })\n    } finally {\n      if (buffer.isEmpty()) {\n        // settle promise in the microtask queue to give consumers a chance to\n        // await after calling .push\n        queueMicrotask(() => {\n          drain.resolve()\n          drain = deferred()\n        })\n      }\n    }\n  }\n\n  const bufferNext = (next: Next<PushType>): ReturnType => {\n    if (onNext != null) {\n      return onNext(next)\n    }\n\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = (err: Error): ReturnType => {\n    buffer = new FIFO()\n\n    if (onNext != null) {\n      return onNext({ error: err })\n    }\n\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = (value: PushType): ReturnType => {\n    if (ended) {\n      return pushable\n    }\n\n    // @ts-expect-error `byteLength` is not declared on PushType\n    if (options?.objectMode !== true && value?.byteLength == null) {\n      throw new Error('objectMode was not true but tried to push non-Uint8Array value')\n    }\n\n    return bufferNext({ done: false, value })\n  }\n  const end = (err?: Error): ReturnType => {\n    if (ended) return pushable\n    ended = true\n\n    return (err != null) ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = (): DoneResult => {\n    buffer = new FIFO()\n    end()\n\n    return { done: true }\n  }\n  const _throw = (err: Error): DoneResult => {\n    end(err)\n\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end,\n    get readableLength (): number {\n      return buffer.size\n    },\n    onEmpty: async (options?: AbortOptions) => {\n      const signal = options?.signal\n      signal?.throwIfAborted()\n\n      if (buffer.isEmpty()) {\n        return\n      }\n\n      let cancel: Promise<void> | undefined\n      let listener: (() => void) | undefined\n\n      if (signal != null) {\n        cancel = new Promise((resolve, reject) => {\n          listener = () => {\n            reject(new AbortError())\n          }\n\n          signal.addEventListener('abort', listener)\n        })\n      }\n\n      try {\n        await Promise.race([\n          drain.promise,\n          cancel\n        ])\n      } finally {\n        if (listener != null && signal != null) {\n          signal?.removeEventListener('abort', listener)\n        }\n      }\n    }\n  }\n\n  if (onEnd == null) {\n    return pushable\n  }\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err: Error) {\n      _pushable.throw(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n\n      if (onEnd != null) {\n        onEnd()\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    push,\n    end (err: Error) {\n      _pushable.end(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return pushable\n    },\n    get readableLength () {\n      return _pushable.readableLength\n    },\n    onEmpty: (opts?: AbortOptions) => {\n      return _pushable.onEmpty(opts)\n    }\n  }\n\n  return pushable\n}\n", "export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\tlet abortHandler;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tabortHandler = () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t};\n\n\t\t\tsignal.addEventListener('abort', abortHandler, {once: true});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t\tif (abortHandler && options.signal) {\n\t\t\toptions.signal.removeEventListener('abort', abortHandler);\n\t\t}\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n", "import pTimeout from 'p-timeout';\n\nconst normalizeEmitter = emitter => {\n\tconst addListener = emitter.addEventListener || emitter.on || emitter.addListener;\n\tconst removeListener = emitter.removeEventListener || emitter.off || emitter.removeListener;\n\n\tif (!addListener || !removeListener) {\n\t\tthrow new TypeError('Emitter is not compatible');\n\t}\n\n\treturn {\n\t\taddListener: addListener.bind(emitter),\n\t\tremoveListener: removeListener.bind(emitter),\n\t};\n};\n\nexport function pEventMultiple(emitter, event, options) {\n\tlet cancel;\n\tconst returnValue = new Promise((resolve, reject) => {\n\t\toptions = {\n\t\t\trejectionEvents: ['error'],\n\t\t\tmultiArgs: false,\n\t\t\trejectionMultiArgs: false,\n\t\t\tresolveImmediately: false,\n\t\t\t...options,\n\t\t};\n\n\t\tif (!(options.count >= 0 && (options.count === Number.POSITIVE_INFINITY || Number.isInteger(options.count)))) {\n\t\t\tthrow new TypeError('The `count` option should be at least 0 or more');\n\t\t}\n\n\t\toptions.signal?.throwIfAborted();\n\n\t\t// Allow multiple events\n\t\tconst events = [event].flat();\n\n\t\tconst items = [];\n\t\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\t\tconst onItem = async (...arguments_) => {\n\t\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\t\tif (options.filter) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!(await options.filter(value))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcancel();\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titems.push(value);\n\n\t\t\tif (options.count === items.length) {\n\t\t\t\tcancel();\n\t\t\t\tresolve(items);\n\t\t\t}\n\t\t};\n\n\t\tconst rejectHandler = (...arguments_) => {\n\t\t\tcancel();\n\t\t\treject(options.rejectionMultiArgs ? arguments_ : arguments_[0]);\n\t\t};\n\n\t\tcancel = () => {\n\t\t\tfor (const event of events) {\n\t\t\t\tremoveListener(event, onItem);\n\t\t\t}\n\n\t\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t\t// Only remove rejection handler if we actually registered it\n\t\t\t\tif (!events.includes(rejectionEvent)) {\n\t\t\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfor (const event of events) {\n\t\t\taddListener(event, onItem);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\t// Skip registering rejection handler if we're already listening to this event\n\t\t\t// as the main event takes priority (as documented)\n\t\t\tif (!events.includes(rejectionEvent)) {\n\t\t\t\taddListener(rejectionEvent, rejectHandler);\n\t\t\t}\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\toptions.signal.addEventListener('abort', () => {\n\t\t\t\trejectHandler(options.signal.reason);\n\t\t\t}, {once: true});\n\t\t}\n\n\t\tif (options.resolveImmediately) {\n\t\t\tresolve(items);\n\t\t}\n\t});\n\n\treturnValue.cancel = cancel;\n\n\tif (typeof options.timeout === 'number') {\n\t\tconst timeout = pTimeout(returnValue, {milliseconds: options.timeout});\n\t\t// When cancelling, also clear the timeout timer\n\t\ttimeout.cancel = () => {\n\t\t\tcancel();\n\t\t\ttimeout.clear();\n\t\t};\n\n\t\treturn timeout;\n\t}\n\n\treturn returnValue;\n}\n\nexport function pEvent(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tcount: 1,\n\t\tresolveImmediately: false,\n\t};\n\n\tconst arrayPromise = pEventMultiple(emitter, event, options);\n\tconst promise = arrayPromise.then(array => array[0]); // eslint-disable-line promise/prefer-await-to-then\n\tpromise.cancel = arrayPromise.cancel;\n\n\treturn promise;\n}\n\nexport function pEventIterator(emitter, event, options) {\n\tif (typeof options === 'function') {\n\t\toptions = {filter: options};\n\t}\n\n\t// Allow multiple events\n\tconst events = [event].flat();\n\n\toptions = {\n\t\trejectionEvents: ['error'],\n\t\tresolutionEvents: [],\n\t\tlimit: Number.POSITIVE_INFINITY,\n\t\tmultiArgs: false,\n\t\trejectionMultiArgs: false,\n\t\t...options,\n\t};\n\n\tconst {limit} = options;\n\tconst isValidLimit = limit >= 0 && (limit === Number.POSITIVE_INFINITY || Number.isInteger(limit));\n\tif (!isValidLimit) {\n\t\tthrow new TypeError('The `limit` option should be a non-negative integer or Infinity');\n\t}\n\n\toptions.signal?.throwIfAborted();\n\n\tif (limit === 0) {\n\t\t// Return an empty async iterator to avoid any further cost\n\t\treturn {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tasync next() {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n\n\tconst {addListener, removeListener} = normalizeEmitter(emitter);\n\n\tlet isDone = false;\n\tlet error;\n\tlet hasPendingError = false;\n\tconst nextQueue = [];\n\tconst valueQueue = [];\n\tlet eventCount = 0;\n\tlet isLimitReached = false;\n\n\tconst valueHandler = (...arguments_) => {\n\t\teventCount++;\n\t\tisLimitReached = eventCount === limit;\n\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\n\t\t\tresolve({done: false, value});\n\n\t\t\tif (isLimitReached) {\n\t\t\t\tcancel();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueQueue.push(value);\n\n\t\tif (isLimitReached) {\n\t\t\tcancel();\n\t\t}\n\t};\n\n\tconst cancel = () => {\n\t\tisDone = true;\n\n\t\tfor (const event of events) {\n\t\t\tremoveListener(event, valueHandler);\n\t\t}\n\n\t\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\t\tremoveListener(rejectionEvent, rejectHandler);\n\t\t}\n\n\t\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\t\tremoveListener(resolutionEvent, resolveHandler);\n\t\t}\n\n\t\twhile (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value: undefined});\n\t\t}\n\t};\n\n\tconst rejectHandler = (...arguments_) => {\n\t\terror = options.rejectionMultiArgs ? arguments_ : arguments_[0];\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {reject} = nextQueue.shift();\n\t\t\treject(error);\n\t\t} else {\n\t\t\thasPendingError = true;\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tconst resolveHandler = async (...arguments_) => {\n\t\tconst value = options.multiArgs ? arguments_ : arguments_[0];\n\n\t\tif (options.filter) {\n\t\t\ttry {\n\t\t\t\tif (!(await options.filter(value))) {\n\t\t\t\t\tcancel();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (filterError) {\n\t\t\t\tcancel();\n\t\t\t\tif (nextQueue.length > 0) {\n\t\t\t\t\tconst {reject} = nextQueue.shift();\n\t\t\t\t\treject(filterError);\n\t\t\t\t} else {\n\t\t\t\t\t// Store error for next iterator call\n\t\t\t\t\thasPendingError = true;\n\t\t\t\t\terror = filterError;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (nextQueue.length > 0) {\n\t\t\tconst {resolve} = nextQueue.shift();\n\t\t\tresolve({done: true, value});\n\t\t} else {\n\t\t\tvalueQueue.push(value);\n\t\t}\n\n\t\tcancel();\n\t};\n\n\tfor (const event of events) {\n\t\taddListener(event, valueHandler);\n\t}\n\n\tfor (const rejectionEvent of options.rejectionEvents) {\n\t\taddListener(rejectionEvent, rejectHandler);\n\t}\n\n\tfor (const resolutionEvent of options.resolutionEvents) {\n\t\taddListener(resolutionEvent, resolveHandler);\n\t}\n\n\tif (options.signal) {\n\t\toptions.signal.addEventListener('abort', () => {\n\t\t\trejectHandler(options.signal.reason);\n\t\t}, {once: true});\n\t}\n\n\treturn {\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t\tasync next() {\n\t\t\tif (valueQueue.length > 0) {\n\t\t\t\tconst value = valueQueue.shift();\n\t\t\t\treturn {\n\t\t\t\t\tdone: isDone && valueQueue.length === 0 && !isLimitReached,\n\t\t\t\t\tvalue,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (hasPendingError) {\n\t\t\t\thasPendingError = false;\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (isDone) {\n\t\t\t\treturn {\n\t\t\t\t\tdone: true,\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tnextQueue.push({resolve, reject});\n\t\t\t});\n\t\t},\n\t\tasync return(value) {\n\t\t\tcancel();\n\t\t\treturn {\n\t\t\t\tdone: isDone,\n\t\t\t\tvalue,\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport {TimeoutError} from 'p-timeout';\n", "import type { RateLimiterResult } from './rate-limiter.js'\n\n/**\n * A rate limit was hit\n */\nexport class RateLimitError extends Error {\n  remainingPoints: number\n  msBeforeNext: number\n  consumedPoints: number\n  isFirstInDuration: boolean\n\n  constructor (message = 'Rate limit exceeded', props: RateLimiterResult) {\n    super(message)\n    this.name = 'RateLimitError'\n    this.remainingPoints = props.remainingPoints\n    this.msBeforeNext = props.msBeforeNext\n    this.consumedPoints = props.consumedPoints\n    this.isFirstInDuration = props.isFirstInDuration\n  }\n}\n\nexport class QueueFullError extends Error {\n  static name = 'QueueFullError'\n\n  constructor (message: string = 'The queue was full') {\n    super(message)\n    this.name = 'QueueFullError'\n  }\n}\n\nexport class UnexpectedEOFError extends Error {\n  static name = 'UnexpectedEOFError'\n  name = 'UnexpectedEOFError'\n}\n\nexport class MaxEarlyStreamsError extends Error {\n  static name = 'MaxEarlyStreamsError'\n  name = 'MaxEarlyStreamsError'\n}\n\nexport class StreamClosedError extends Error {\n  static name = 'StreamClosedError'\n  name = 'StreamClosedError'\n}\n", "/**\n * @packageDocumentation\n *\n * Pass a promise and an abort signal and await the result.\n *\n * @example Basic usage\n *\n * ```ts\n * import { raceSignal } from 'race-signal'\n *\n * const controller = new AbortController()\n *\n * const promise = new Promise((resolve, reject) => {\n *   setTimeout(() => {\n *     resolve('a value')\n *   }, 1000)\n * })\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws an AbortError\n * const resolve = await raceSignal(promise, controller.signal)\n * ```\n *\n * @example Overriding errors\n *\n * By default the thrown error is the `.reason` property of the signal but it's\n * possible to override this behaviour with the `translateError` option:\n *\n * ```ts\n * import { raceSignal } from 'race-signal'\n *\n * const controller = new AbortController()\n *\n * const promise = new Promise((resolve, reject) => {\n *   setTimeout(() => {\n *     resolve('a value')\n *   }, 1000)\n * })\n *\n * setTimeout(() => {\n *   controller.abort()\n * }, 500)\n *\n * // throws `Error('Oh no!')`\n * const resolve = await raceSignal(promise, controller.signal, {\n *   translateError: (signal) => {\n *     // use `signal`, or don't\n *     return new Error('Oh no!')\n *   }\n * })\n * ```\n */\n\nexport interface RaceSignalOptions {\n  /**\n   * By default the rejection reason will be taken from the `.reason` field of\n   * the aborted signal.\n   *\n   * Passing a function here allows overriding the default error.\n   */\n  translateError?(signal: AbortSignal): Error\n}\n\nfunction defaultTranslate (signal: AbortSignal): Error {\n  return signal.reason\n}\n\n/**\n * Race a promise against an abort signal\n */\nexport async function raceSignal <T> (promise: Promise<T>, signal?: AbortSignal, opts?: RaceSignalOptions): Promise<T> {\n  if (signal == null) {\n    return promise\n  }\n\n  const translateError = opts?.translateError ?? defaultTranslate\n\n  if (signal.aborted) {\n    // the passed promise may yet resolve or reject but the use has signalled\n    // they are no longer interested so smother the error\n    promise.catch(() => {})\n    return Promise.reject(translateError(signal))\n  }\n\n  let listener\n\n  try {\n    return await Promise.race([\n      promise,\n      new Promise<T>((resolve, reject) => {\n        listener = () => {\n          reject(translateError(signal))\n        }\n        signal.addEventListener('abort', listener)\n      })\n    ])\n  } finally {\n    if (listener != null) {\n      signal.removeEventListener('abort', listener)\n    }\n  }\n}\n", "import { StreamResetError, TypedEventEmitter, StreamMessageEvent, StreamBufferError, StreamResetEvent, StreamAbortEvent, StreamCloseEvent, StreamStateError } from '@libp2p/interface'\nimport { pushable } from 'it-pushable'\nimport { raceSignal } from 'race-signal'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { StreamClosedError } from './errors.ts'\nimport type { MessageStreamEvents, MessageStreamStatus, MessageStream, AbortOptions, MessageStreamTimeline, MessageStreamDirection, EventHandler, StreamOptions, MessageStreamReadStatus, MessageStreamWriteStatus } from '@libp2p/interface'\nimport type { Logger } from '@libp2p/logger'\n\nconst DEFAULT_MAX_READ_BUFFER_LENGTH = Math.pow(2, 20) * 4 // 4MB\n\nexport interface MessageStreamInit extends StreamOptions {\n  /**\n   * A Logger implementation used to log stream-specific information\n   */\n  log: Logger\n\n  /**\n   * The stream direction\n   */\n  direction?: MessageStreamDirection\n\n  /**\n   * By default all available bytes are passed to the `sendData` method of\n   * extending classes, if smaller chunks are required, pass a value here.\n   */\n  maxMessageSize?: number\n}\n\nexport interface SendResult {\n  /**\n   * The number of bytes from the passed buffer that were sent\n   */\n  sentBytes: number\n\n  /**\n   * If the underlying resource can accept more data immediately. If `true`,\n   * `sent` must equal the `.byteLength` of the buffer passed to `sendData`.\n   */\n  canSendMore: boolean\n}\n\nexport abstract class AbstractMessageStream<Timeline extends MessageStreamTimeline = MessageStreamTimeline> extends TypedEventEmitter<MessageStreamEvents> implements MessageStream {\n  public status: MessageStreamStatus\n  public readonly timeline: Timeline\n  public inactivityTimeout: number\n  public maxReadBufferLength: number\n  public maxWriteBufferLength?: number\n  public readonly log: Logger\n  public direction: MessageStreamDirection\n  public maxMessageSize?: number\n\n  public readStatus: MessageStreamReadStatus\n  public writeStatus: MessageStreamWriteStatus\n  public remoteReadStatus: MessageStreamReadStatus\n  public remoteWriteStatus: MessageStreamWriteStatus\n\n  public writableNeedsDrain: boolean\n\n  /**\n   * Any data stored here is emitted before any new incoming data.\n   *\n   * This is used when the stream is paused or if data is pushed onto the stream\n   */\n  protected readonly readBuffer: Uint8ArrayList\n  protected readonly writeBuffer: Uint8ArrayList\n  protected sendingData: boolean\n\n  private onDrainPromise?: PromiseWithResolvers<void>\n\n  constructor (init: MessageStreamInit) {\n    super()\n\n    this.status = 'open'\n    this.log = init.log\n    this.direction = init.direction ?? 'outbound'\n    this.inactivityTimeout = init.inactivityTimeout ?? 120_000\n    this.maxReadBufferLength = init.maxReadBufferLength ?? DEFAULT_MAX_READ_BUFFER_LENGTH\n    this.maxWriteBufferLength = init.maxWriteBufferLength\n    this.maxMessageSize = init.maxMessageSize\n    this.readBuffer = new Uint8ArrayList()\n    this.writeBuffer = new Uint8ArrayList()\n\n    this.readStatus = 'readable'\n    this.remoteReadStatus = 'readable'\n    this.writeStatus = 'writable'\n    this.remoteWriteStatus = 'writable'\n    this.sendingData = false\n    this.writableNeedsDrain = false\n\n    // @ts-expect-error type could have required fields other than 'open'\n    this.timeline = {\n      open: Date.now()\n    }\n\n    this.processSendQueue = this.processSendQueue.bind(this)\n\n    const continueSendingOnDrain = (): void => {\n      if (this.writableNeedsDrain) {\n        this.log.trace('drain event received, continue sending data')\n        this.writableNeedsDrain = false\n        this.processSendQueue()\n      }\n\n      this.onDrainPromise?.resolve()\n    }\n    this.addEventListener('drain', continueSendingOnDrain)\n\n    const rejectOnDrainOnClose = (evt: StreamCloseEvent): void => {\n      this.onDrainPromise?.reject(evt.error ?? new StreamClosedError())\n    }\n    this.addEventListener('close', rejectOnDrainOnClose)\n  }\n\n  get readBufferLength (): number {\n    return this.readBuffer.byteLength\n  }\n\n  get writeBufferLength (): number {\n    return this.writeBuffer.byteLength\n  }\n\n  async onDrain (options?: AbortOptions): Promise<void> {\n    if (this.writableNeedsDrain !== true) {\n      return Promise.resolve()\n    }\n\n    if (this.onDrainPromise == null) {\n      this.onDrainPromise = Promise.withResolvers()\n    }\n\n    return raceSignal(this.onDrainPromise.promise, options?.signal)\n  }\n\n  async * [Symbol.asyncIterator] (): AsyncGenerator<Uint8Array | Uint8ArrayList> {\n    if (this.readStatus !== 'readable' && this.readStatus !== 'paused') {\n      return\n    }\n\n    const output = pushable<Uint8Array | Uint8ArrayList>()\n\n    const streamAsyncIterableOnMessageListener = (evt: StreamMessageEvent): void => {\n      output.push(evt.data)\n    }\n    this.addEventListener('message', streamAsyncIterableOnMessageListener)\n\n    const streamAsyncIterableOnCloseListener = (evt: StreamCloseEvent): void => {\n      output.end(evt.error)\n    }\n    this.addEventListener('close', streamAsyncIterableOnCloseListener)\n\n    const streamAsyncIterableOnRemoteCloseWriteListener = (): void => {\n      output.end()\n    }\n    this.addEventListener('remoteCloseWrite', streamAsyncIterableOnRemoteCloseWriteListener)\n\n    try {\n      yield * output\n    } finally {\n      this.removeEventListener('message', streamAsyncIterableOnMessageListener)\n      this.removeEventListener('close', streamAsyncIterableOnCloseListener)\n      this.removeEventListener('remoteCloseWrite', streamAsyncIterableOnRemoteCloseWriteListener)\n    }\n  }\n\n  isReadable (): boolean {\n    return this.status === 'open'\n  }\n\n  send (data: Uint8Array | Uint8ArrayList): boolean {\n    if (this.writeStatus === 'closed' || this.writeStatus === 'closing') {\n      throw new StreamStateError(`Cannot write to a stream that is ${this.writeStatus}`)\n    }\n\n    this.log.trace('append %d bytes to write buffer', data.byteLength)\n    this.writeBuffer.append(data)\n\n    return this.processSendQueue()\n  }\n\n  /**\n   * Close immediately for reading and writing and send a reset message (local\n   * error)\n   */\n  abort (err: Error): void {\n    if (this.status === 'aborted' || this.status === 'reset' || this.status === 'closed') {\n      return\n    }\n\n    this.log.error('abort with error - %e', err)\n\n    this.status = 'aborted'\n\n    // throw away unread data\n    if (this.readBuffer.byteLength > 0) {\n      this.readBuffer.consume(this.readBuffer.byteLength)\n    }\n\n    // throw away unsent data\n    if (this.writeBuffer.byteLength > 0) {\n      this.writeBuffer.consume(this.writeBuffer.byteLength)\n      this.safeDispatchEvent('idle')\n    }\n\n    this.writeStatus = 'closed'\n    this.remoteWriteStatus = 'closed'\n\n    this.readStatus = 'closed'\n    this.remoteReadStatus = 'closed'\n    this.timeline.close = Date.now()\n\n    try {\n      this.sendReset(err)\n    } catch (err: any) {\n      this.log('failed to send reset to remote - %e', err)\n    }\n\n    this.dispatchEvent(new StreamAbortEvent(err))\n  }\n\n  pause (): void {\n    if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n      throw new StreamStateError('Cannot pause a stream that is closing/closed')\n    }\n\n    if (this.readStatus === 'paused') {\n      return\n    }\n\n    this.readStatus = 'paused'\n    this.sendPause()\n  }\n\n  resume (): void {\n    if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n      throw new StreamStateError('Cannot resume a stream that is closing/closed')\n    }\n\n    if (this.readStatus === 'readable') {\n      return\n    }\n\n    this.readStatus = 'readable'\n    // emit any data that accumulated while we were paused\n    this.dispatchReadBuffer()\n    this.sendResume()\n  }\n\n  push (data: Uint8Array | Uint8ArrayList): void {\n    if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n      throw new StreamStateError(`Cannot push data onto a stream that is ${this.readStatus}`)\n    }\n\n    if (data.byteLength === 0) {\n      return\n    }\n\n    this.readBuffer.append(data)\n\n    if (this.readStatus === 'paused' || this.listenerCount('message') === 0) {\n      // abort if the read buffer is too large\n      this.checkReadBufferLength()\n\n      return\n    }\n\n    // TODO: use a microtask instead?\n    setTimeout(() => {\n      this.dispatchReadBuffer()\n    }, 0)\n  }\n\n  unshift (data: Uint8Array | Uint8ArrayList): void {\n    if (this.readStatus === 'closed' || this.readStatus === 'closing') {\n      throw new StreamStateError(`Cannot push data onto a stream that is ${this.readStatus}`)\n    }\n\n    if (data.byteLength === 0) {\n      return\n    }\n\n    this.readBuffer.prepend(data)\n\n    if (this.readStatus === 'paused' || this.listenerCount('message') === 0) {\n      // abort if the read buffer is too large\n      this.checkReadBufferLength()\n\n      return\n    }\n\n    // TODO: use a microtask instead?\n    setTimeout(() => {\n      this.dispatchReadBuffer()\n    }, 0)\n  }\n\n  /**\n   * When an extending class reads data from it's implementation-specific source,\n   * call this method to allow the stream consumer to read the data.\n   */\n  onData (data: Uint8Array | Uint8ArrayList): void {\n    if (data.byteLength === 0) {\n      // this.log('ignoring empty data')\n      return\n    }\n\n    // discard the data if our readable end is closed\n    if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n      this.log('ignoring data - read status %s', this.readStatus)\n      return\n    }\n\n    this.readBuffer.append(data)\n    this.dispatchReadBuffer()\n  }\n\n  addEventListener<K extends keyof MessageStreamEvents>(type: K, listener: EventHandler<MessageStreamEvents[K]> | null, options?: boolean | AddEventListenerOptions): void\n  addEventListener (type: string, listener: EventHandler<Event>, options?: boolean | AddEventListenerOptions): void\n  addEventListener (...args: any[]): void {\n    // @ts-expect-error cannot ensure args has enough members\n    super.addEventListener.apply(this, args)\n\n    // if a 'message' listener is being added and we have queued data, dispatch\n    // the data\n    if (args[0] === 'message' && this.readBuffer.byteLength > 0) {\n      // event listeners can be added in constructors and often use object\n      // properties - if this the case we can access a class member before it\n      // has been initialized so dispatch the message in the microtask queue\n      queueMicrotask(() => {\n        this.dispatchReadBuffer()\n      })\n    }\n  }\n\n  /**\n   * Receive a reset message - close immediately for reading and writing (remote\n   * error)\n   */\n  onRemoteReset (): void {\n    this.log('remote reset')\n\n    this.status = 'reset'\n    this.writeStatus = 'closed'\n    this.remoteWriteStatus = 'closed'\n    this.remoteReadStatus = 'closed'\n    this.timeline.close = Date.now()\n\n    if (this.readBuffer.byteLength === 0) {\n      this.readStatus = 'closed'\n    }\n\n    const err = new StreamResetError()\n    this.dispatchEvent(new StreamResetEvent(err))\n  }\n\n  /**\n   * The underlying resource or transport this stream uses has closed - it is\n   * not possible to send any more messages though any data still in the read\n   * buffer may still be read\n   */\n  onTransportClosed (err?: Error): void {\n    this.log('transport closed')\n\n    if (this.readStatus === 'readable' && this.readBuffer.byteLength === 0) {\n      this.log('close readable end after transport closed and read buffer is empty')\n      this.readStatus = 'closed'\n    }\n\n    if (this.remoteReadStatus !== 'closed') {\n      this.remoteReadStatus = 'closed'\n    }\n\n    if (this.remoteWriteStatus !== 'closed') {\n      this.remoteWriteStatus = 'closed'\n    }\n\n    if (this.writeStatus !== 'closed') {\n      this.writeStatus = 'closed'\n    }\n\n    if (err != null) {\n      this.abort(err)\n    } else {\n      if (this.status === 'open' || this.status === 'closing') {\n        this.timeline.close = Date.now()\n        this.status = 'closed'\n        this.writeStatus = 'closed'\n        this.remoteWriteStatus = 'closed'\n        this.remoteReadStatus = 'closed'\n        this.dispatchEvent(new StreamCloseEvent())\n      }\n    }\n  }\n\n  /**\n   * Called by extending classes when the remote closes its writable end\n   */\n  onRemoteCloseWrite (): void {\n    if (this.remoteWriteStatus === 'closed') {\n      return\n    }\n\n    this.log.trace('on remote close write')\n\n    this.remoteWriteStatus = 'closed'\n\n    this.safeDispatchEvent('remoteCloseWrite')\n\n    if (this.writeStatus === 'closed') {\n      this.onTransportClosed()\n    }\n  }\n\n  /**\n   * Called by extending classes when the remote closes its readable end\n   */\n  onRemoteCloseRead (): void {\n    this.log.trace('on remote close read')\n\n    this.remoteReadStatus = 'closed'\n\n    // throw away any unsent bytes if the remote closes it's readable end\n    if (this.writeBuffer.byteLength > 0) {\n      this.writeBuffer.consume(this.writeBuffer.byteLength)\n      this.safeDispatchEvent('idle')\n    }\n  }\n\n  protected processSendQueue (): boolean {\n    // bail if the underlying transport is full\n    if (this.writableNeedsDrain) {\n      this.log.trace('not processing send queue as drain is required')\n      this.checkWriteBufferLength()\n\n      return false\n    }\n\n    // bail if there is no data to send\n    if (this.writeBuffer.byteLength === 0) {\n      this.log.trace('not processing send queue as no bytes to send')\n      return true\n    }\n\n    // bail if we are already sending data\n    if (this.sendingData) {\n      this.log.trace('not processing send queue as already sending data')\n      return true\n    }\n\n    this.sendingData = true\n\n    this.log.trace('processing send queue with %d queued bytes', this.writeBuffer.byteLength)\n\n    try {\n      let canSendMore = true\n      const totalBytes = this.writeBuffer.byteLength\n      let sentBytes = 0\n\n      // send as much data as possible while we have data to send and the\n      // underlying muxer can still accept data\n      while (this.writeBuffer.byteLength > 0) {\n        const end = Math.min(this.maxMessageSize ?? this.writeBuffer.byteLength, this.writeBuffer.byteLength)\n\n        // this can happen if a subclass changes the max message size dynamically\n        if (end === 0) {\n          canSendMore = false\n          break\n        }\n\n        // chunk to send to the remote end\n        const toSend = this.writeBuffer.sublist(0, end)\n\n        // copy toSend in case the extending class modifies the list\n        const willSend = new Uint8ArrayList(toSend)\n\n        this.writeBuffer.consume(toSend.byteLength)\n\n        // sending data can cause buffers to fill up, events to be emitted and\n        // this method to be invoked again\n        const sendResult = this.sendData(toSend)\n        canSendMore = sendResult.canSendMore\n        sentBytes += sendResult.sentBytes\n\n        if (sendResult.sentBytes !== willSend.byteLength) {\n          willSend.consume(sendResult.sentBytes)\n          this.writeBuffer.prepend(willSend)\n        }\n\n        if (!canSendMore) {\n          break\n        }\n      }\n\n      if (!canSendMore) {\n        this.log.trace('sent %d/%d bytes, pausing sending because underlying stream is full, %d bytes left in the write buffer', sentBytes, totalBytes, this.writeBuffer.byteLength)\n        this.writableNeedsDrain = true\n        this.checkWriteBufferLength()\n      }\n\n      // we processed all bytes in the queue, resolve the write queue idle promise\n      if (this.writeBuffer.byteLength === 0) {\n        this.safeDispatchEvent('idle')\n      }\n\n      return canSendMore\n    } finally {\n      this.sendingData = false\n    }\n  }\n\n  protected dispatchReadBuffer (): void {\n    try {\n      if (this.listenerCount('message') === 0) {\n        this.log.trace('not dispatching pause buffer as there are no listeners for the message event')\n        return\n      }\n\n      if (this.readBuffer.byteLength === 0) {\n        this.log.trace('not dispatching pause buffer as there is no data to dispatch')\n        return\n      }\n\n      if (this.readStatus === 'paused') {\n        this.log.trace('not dispatching pause buffer we are paused')\n        return\n      }\n\n      // discard the pause buffer if our readable end is closed\n      if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n        this.log('dropping %d bytes because the readable end is %s', this.readBuffer.byteLength, this.readStatus)\n        this.readBuffer.consume(this.readBuffer.byteLength)\n        return\n      }\n\n      const buf = this.readBuffer.sublist()\n      this.readBuffer.consume(buf.byteLength)\n\n      this.dispatchEvent(new StreamMessageEvent(buf))\n    } finally {\n      if (this.readBuffer.byteLength === 0 && this.remoteWriteStatus === 'closed') {\n        this.log('close readable end after dispatching read buffer and remote writable end is closed')\n        this.readStatus = 'closed'\n      }\n\n      // abort if we failed to consume the read buffer and it is too large\n      this.checkReadBufferLength()\n    }\n  }\n\n  private checkReadBufferLength (): void {\n    if (this.readBuffer.byteLength > this.maxReadBufferLength) {\n      this.abort(new StreamBufferError(`Read buffer length of ${this.readBuffer.byteLength} exceeded limit of ${this.maxReadBufferLength}, read status is ${this.readStatus}`))\n    }\n  }\n\n  private checkWriteBufferLength (): void {\n    if (this.maxWriteBufferLength == null) {\n      return\n    }\n\n    if (this.writeBuffer.byteLength > this.maxWriteBufferLength) {\n      this.abort(new StreamBufferError(`Write buffer length of ${this.writeBuffer.byteLength} exceeded limit of ${this.maxWriteBufferLength}, write status is ${this.writeStatus}`))\n    }\n  }\n\n  public onMuxerNeedsDrain (): void {\n    this.writableNeedsDrain = true\n  }\n\n  public onMuxerDrain (): void {\n    this.safeDispatchEvent('drain')\n  }\n\n  /**\n   * Send a data message to the remote end of the stream. Implementations of\n   * this method should return the number of bytes from the passed buffer that\n   * were sent successfully and if the underlying resource can accept more data.\n   *\n   * The implementation should always attempt to send the maximum amount of data\n   * possible.\n   *\n   * Returning a result that means the data was only partially sent but that the\n   * underlying resource can accept more data is invalid.\n   */\n  abstract sendData (data: Uint8ArrayList): SendResult\n\n  /**\n   * Send a reset message to the remote end of the stream\n   */\n  abstract sendReset (err: Error): void\n\n  /**\n   * If supported, instruct the remote end of the stream to temporarily stop\n   * sending data messages\n   */\n  abstract sendPause (): void\n\n  /**\n   * If supported, inform the remote end of the stream they may resume sending\n   * data messages\n   */\n  abstract sendResume (): void\n\n  /**\n   * Stop accepting new data to send and return a promise that resolves when any\n   * unsent data has been written into the underlying resource.\n   */\n  abstract close (options?: AbortOptions): Promise<void>\n}\n", "import { pEvent } from 'p-event'\nimport { AbstractMessageStream } from './abstract-message-stream.ts'\nimport type { MessageStreamInit } from './abstract-message-stream.ts'\nimport type { CounterGroup, Logger, MultiaddrConnection, MessageStreamDirection, AbortOptions } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface AbstractMultiaddrConnectionInit extends Omit<MessageStreamInit, 'log'> {\n  remoteAddr: Multiaddr\n  direction: MessageStreamDirection\n  log: Logger\n  inactivityTimeout?: number\n  localAddr?: Multiaddr\n  metricPrefix?: string\n  metrics?: CounterGroup\n}\n\nexport abstract class AbstractMultiaddrConnection extends AbstractMessageStream implements MultiaddrConnection {\n  public remoteAddr: Multiaddr\n\n  private metricPrefix: string\n  private metrics?: CounterGroup\n\n  constructor (init: AbstractMultiaddrConnectionInit) {\n    super(init)\n\n    this.metricPrefix = init.metricPrefix ?? ''\n    this.metrics = init.metrics\n    this.remoteAddr = init.remoteAddr\n\n    this.addEventListener('close', (evt) => {\n      this.metrics?.increment({ [`${this.metricPrefix}end`]: true })\n\n      if (evt.error != null) {\n        if (evt.local) {\n          this.metrics?.increment({ [`${this.metricPrefix}abort`]: true })\n        } else {\n          this.metrics?.increment({ [`${this.metricPrefix}reset`]: true })\n        }\n      } else {\n        if (evt.local) {\n          this.metrics?.increment({ [`${this.metricPrefix}_local_close`]: true })\n        } else {\n          this.metrics?.increment({ [`${this.metricPrefix}_remote_close`]: true })\n        }\n      }\n    })\n  }\n\n  async close (options?: AbortOptions): Promise<void> {\n    if (this.status !== 'open') {\n      return\n    }\n\n    this.status = 'closing'\n    this.writeStatus = 'closing'\n    this.remoteWriteStatus = 'closing'\n    this.remoteReadStatus = 'closing'\n\n    // if we are currently sending data, wait for all the data to be written\n    // into the underlying transport\n    if (this.sendingData || this.writeBuffer.byteLength > 0) {\n      this.log('waiting for write queue to become idle before closing writable end of stream, %d unsent bytes', this.writeBuffer.byteLength)\n      await pEvent(this, 'idle', {\n        ...options,\n        rejectionEvents: [\n          'close'\n        ]\n      })\n    }\n\n    // now that the underlying transport has all the data, if the buffer is full\n    // wait for it to be emptied\n    if (this.writableNeedsDrain) {\n      this.log('waiting for write queue to drain before closing writable end of stream, %d unsent bytes', this.writeBuffer.byteLength)\n      await pEvent(this, 'drain', {\n        ...options,\n        rejectionEvents: [\n          'close'\n        ]\n      })\n    }\n\n    await this.sendClose(options)\n\n    this.onTransportClosed()\n  }\n\n  /**\n   * Wait for any unsent data to be written to the underlying resource, then\n   * close the resource and resolve the returned promise\n   */\n  abstract sendClose (options?: AbortOptions): Promise<void>\n}\n", "export function isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  if (thing == null) {\n    return false\n  }\n\n  return typeof thing.then === 'function' &&\n    typeof thing.catch === 'function' &&\n    typeof thing.finally === 'function'\n}\n", "import { MuxerClosedError, TypedEventEmitter } from '@libp2p/interface'\nimport { raceSignal } from 'race-signal'\nimport { MaxEarlyStreamsError } from './errors.ts'\nimport { isPromise } from './is-promise.ts'\nimport type { AbstractStream } from './abstract-stream.ts'\nimport type { AbortOptions, CounterGroup, CreateStreamOptions, EventHandler, Logger, MessageStream, Stream, StreamCloseEvent, StreamMessageEvent, StreamMuxer, StreamMuxerEvents, StreamMuxerOptions, StreamMuxerStatus, StreamOptions } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface AbstractStreamMuxerInit extends StreamMuxerOptions {\n  /**\n   * The protocol name for the muxer\n   */\n  protocol: string\n\n  /**\n   * The name of the muxer, used to create a new logging scope from the passed\n   * connection's logger\n   */\n  name: string\n\n  /**\n   * A counter for muxer metrics\n   */\n  metrics?: CounterGroup\n}\n\nexport abstract class AbstractStreamMuxer <MuxedStream extends AbstractStream = AbstractStream> extends TypedEventEmitter<StreamMuxerEvents<MuxedStream>> implements StreamMuxer<MuxedStream> {\n  public streams: MuxedStream[]\n  public protocol: string\n  public status: StreamMuxerStatus\n\n  protected log: Logger\n  protected maConn: MessageStream\n  protected streamOptions?: StreamOptions\n  protected earlyStreams: MuxedStream[]\n  protected maxEarlyStreams: number\n\n  private readonly metrics?: CounterGroup\n\n  constructor (maConn: MessageStream, init: AbstractStreamMuxerInit) {\n    super()\n\n    this.maConn = maConn\n    this.protocol = init.protocol\n    this.streams = []\n    this.earlyStreams = []\n    this.status = 'open'\n    this.log = maConn.log.newScope(init.name)\n    this.streamOptions = init.streamOptions\n    this.maxEarlyStreams = init.maxEarlyStreams ?? 10\n    this.metrics = init.metrics\n\n    // read/write all data from/to underlying maConn\n    const muxerMaConnOnMessage = (evt: StreamMessageEvent): void => {\n      try {\n        this.onData(evt.data)\n      } catch (err: any) {\n        this.abort(err)\n        this.maConn.abort(err)\n      }\n    }\n    this.maConn.addEventListener('message', muxerMaConnOnMessage)\n\n    // signal stream writers when the underlying connection can accept more data\n    const muxerMaConnOnDrain = (): void => {\n      this.log('underlying stream drained, signal %d streams to continue writing', this.streams.length)\n\n      this.streams.forEach(stream => {\n        stream.onMuxerDrain()\n      })\n    }\n    this.maConn.addEventListener('drain', muxerMaConnOnDrain)\n\n    const muxerOnMaConnClose = (): void => {\n      this.log('underlying stream closed with status %s and %d streams', this.status, this.streams.length)\n      this.onTransportClosed()\n    }\n    this.maConn.addEventListener('close', muxerOnMaConnClose)\n  }\n\n  send (data: Uint8Array | Uint8ArrayList): boolean {\n    const result = this.maConn.send(data)\n\n    if (result === false) {\n      this.log('underlying stream saturated, signal %d streams to pause writing', this.streams.length)\n\n      this.streams.forEach(stream => {\n        stream.onMuxerNeedsDrain()\n      })\n    }\n\n    return result\n  }\n\n  async close (options?: AbortOptions): Promise<void> {\n    if (this.status === 'closed' || this.status === 'closing') {\n      return\n    }\n\n    this.status = 'closing'\n\n    await raceSignal(Promise.all(\n      [...this.streams].map(async s => {\n        await s.close(options)\n      })\n    ), options?.signal)\n\n    this.status = 'closed'\n  }\n\n  abort (err: Error): void {\n    if (this.status === 'closed') {\n      return\n    }\n\n    this.status = 'closing'\n\n    ;[...this.streams].forEach(s => {\n      s.abort(err)\n    })\n\n    this.status = 'closed'\n  }\n\n  onTransportClosed (err?: Error): void {\n    this.status = 'closing'\n\n    try {\n      [...this.streams].forEach(stream => {\n        stream.onTransportClosed(err)\n      })\n    } catch (err: any) {\n      this.abort(err)\n    }\n\n    this.status = 'closed'\n  }\n\n  async createStream (options?: CreateStreamOptions): Promise<MuxedStream> {\n    if (this.status !== 'open') {\n      throw new MuxerClosedError()\n    }\n\n    let stream = this.onCreateStream({\n      ...this.streamOptions,\n      ...options\n    })\n\n    if (isPromise(stream)) {\n      stream = await stream\n    }\n\n    this.streams.push(stream)\n    this.cleanUpStream(stream)\n\n    return stream\n  }\n\n  /**\n   * Extending classes should invoke this method when a new stream was created\n   * by the remote muxer\n   */\n  onRemoteStream (stream: MuxedStream): void {\n    this.streams.push(stream)\n    this.cleanUpStream(stream)\n\n    if (this.listenerCount('stream') === 0) {\n      // no listener has been added for the stream event yet, store the stream\n      // to emit it later\n      this.earlyStreams.push(stream)\n\n      if (this.earlyStreams.length > this.maxEarlyStreams) {\n        this.abort(new MaxEarlyStreamsError(`Too many early streams were opened - ${this.earlyStreams.length}/${this.maxEarlyStreams}`))\n      }\n\n      return\n    }\n\n    this.safeDispatchEvent('stream', {\n      detail: stream\n    })\n  }\n\n  private cleanUpStream (stream: Stream): void {\n    const muxerOnStreamEnd = (evt: StreamCloseEvent): void => {\n      const index = this.streams.findIndex(s => s === stream)\n\n      if (index !== -1) {\n        this.streams.splice(index, 1)\n      }\n\n      if (evt.error != null) {\n        if (evt.local) {\n          this.metrics?.increment({ [`${stream.direction}_stream_reset`]: true })\n        } else {\n          this.metrics?.increment({ [`${stream.direction}_stream_abort`]: true })\n        }\n      } else {\n        this.metrics?.increment({ [`${stream.direction}_stream_end`]: true })\n      }\n    }\n    stream.addEventListener('close', muxerOnStreamEnd)\n\n    this.metrics?.increment({ [`${stream.direction}_stream`]: true })\n  }\n\n  addEventListener<K extends keyof StreamMuxerEvents<MuxedStream>>(type: K, listener: EventHandler<StreamMuxerEvents<MuxedStream>[K]> | null, options?: boolean | AddEventListenerOptions): void\n  addEventListener (type: string, listener: EventHandler<Event>, options?: boolean | AddEventListenerOptions): void\n  addEventListener (...args: any[]): void {\n    // @ts-expect-error cannot ensure args has enough members\n    super.addEventListener.apply(this, args)\n\n    // if a 'stream' listener is being added and we have early streams, emit\n    // them\n    if (args[0] === 'stream' && this.earlyStreams.length > 0) {\n      // event listeners can be added in constructors and often use object\n      // properties - if this the case we can access a class member before it\n      // has been initialized so dispatch the message in the microtask queue\n      queueMicrotask(() => {\n        this.earlyStreams.forEach(stream => {\n          this.safeDispatchEvent('stream', {\n            detail: stream\n          })\n        })\n        this.earlyStreams = []\n      })\n    }\n  }\n\n  /**\n   * A new outgoing stream needs to be created\n   */\n  abstract onCreateStream (options: CreateStreamOptions): MuxedStream | Promise<MuxedStream>\n\n  /**\n   * Multiplexed data was received from the remote muxer\n   */\n  abstract onData (data: Uint8Array | Uint8ArrayList): void\n}\n", "import { pEvent } from 'p-event'\nimport { AbstractMessageStream } from './abstract-message-stream.js'\nimport type { MessageStreamInit } from './abstract-message-stream.js'\nimport type { AbortOptions, Stream } from '@libp2p/interface'\n\nexport interface AbstractStreamInit extends MessageStreamInit {\n  /**\n   * A unique identifier for this stream\n   */\n  id: string\n\n  /**\n   * The protocol name for the stream, if it is known\n   */\n  protocol?: string\n}\n\nexport abstract class AbstractStream extends AbstractMessageStream implements Stream {\n  public id: string\n  public protocol: string\n\n  constructor (init: AbstractStreamInit) {\n    super(init)\n\n    this.id = init.id\n    this.protocol = init.protocol ?? ''\n  }\n\n  async close (options?: AbortOptions): Promise<void> {\n    if (this.writeStatus === 'closing' || this.writeStatus === 'closed') {\n      return\n    }\n\n    this.writeStatus = 'closing'\n\n    // if we are currently sending data, wait for all the data to be written\n    // into the underlying transport\n    if (this.sendingData || this.writeBuffer.byteLength > 0) {\n      this.log('waiting for write queue to become idle before closing writable end of stream, %d unsent bytes', this.writeBuffer.byteLength)\n      await pEvent(this, 'idle', {\n        ...options,\n        rejectionEvents: [\n          'close'\n        ]\n      })\n    }\n\n    // now that the underlying transport has all the data, if the buffer is full\n    // wait for it to be emptied\n    if (this.writableNeedsDrain) {\n      this.log('waiting for write queue to drain before closing writable end of stream, %d unsent bytes, sending %s', this.writeBuffer.byteLength, this.sendingData)\n      await pEvent(this, 'drain', {\n        ...options,\n        rejectionEvents: [\n          'close'\n        ]\n      })\n      this.log('write queue drained, closing writable end of stream, %d unsent bytes, sending %s', this.writeBuffer.byteLength, this.sendingData)\n    }\n\n    await this.sendCloseWrite(options)\n\n    this.writeStatus = 'closed'\n\n    this.log('closed writable end gracefully')\n\n    if (this.remoteWriteStatus === 'closed') {\n      this.onTransportClosed()\n    }\n  }\n\n  async closeRead (options?: AbortOptions): Promise<void> {\n    if (this.readStatus === 'closing' || this.readStatus === 'closed') {\n      return\n    }\n\n    // throw away any unread data\n    if (this.readBuffer.byteLength > 0) {\n      this.readBuffer.consume(this.readBuffer.byteLength)\n    }\n\n    this.readStatus = 'closing'\n\n    await this.sendCloseRead(options)\n\n    this.readStatus = 'closed'\n\n    this.log('closed readable end gracefully')\n  }\n\n  /**\n   * Send a message to the remote end of the stream, informing them that we will\n   * send no more data messages.\n   */\n  abstract sendCloseWrite (options?: AbortOptions): Promise<void>\n\n  /**\n   * If supported, send a message to the remote end of the stream, informing\n   * them that we will read no more data messages.\n   */\n  abstract sendCloseRead (options?: AbortOptions): Promise<void>\n}\n", "import { StreamMessageEvent, StreamCloseEvent, InvalidParametersError } from '@libp2p/interface'\nimport { pipe as itPipe } from 'it-pipe'\nimport { pushable } from 'it-pushable'\nimport { pEvent } from 'p-event'\nimport { raceSignal } from 'race-signal'\nimport * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { UnexpectedEOFError } from './errors.js'\nimport type { MessageStream, MultiaddrConnection, Stream, AbortOptions } from '@libp2p/interface'\nimport type { Duplex, Source, Transform, Sink } from 'it-stream-types'\n\nconst DEFAULT_MAX_BUFFER_SIZE = 4_194_304\n\nexport class UnwrappedError extends Error {\n  static name = 'UnwrappedError'\n  name = 'UnwrappedError'\n}\n\n/**\n * The reported length of the next data message was not a positive integer\n */\nexport class InvalidMessageLengthError extends Error {\n  name = 'InvalidMessageLengthError'\n  code = 'ERR_INVALID_MSG_LENGTH'\n}\n\n/**\n * The reported length of the next data message was larger than the configured\n * max allowable value\n */\nexport class InvalidDataLengthError extends Error {\n  name = 'InvalidDataLengthError'\n  code = 'ERR_MSG_DATA_TOO_LONG'\n}\n\n/**\n * The varint used to specify the length of the next data message contained more\n * bytes than the configured max allowable value\n */\nexport class InvalidDataLengthLengthError extends Error {\n  name = 'InvalidDataLengthLengthError'\n  code = 'ERR_MSG_LENGTH_TOO_LONG'\n}\n\nexport interface ByteStreamOpts {\n  /**\n   * Incoming bytes are buffered until read, this setting limits how many bytes\n   * will be buffered.\n   *\n   * @default 4_194_304\n   */\n  maxBufferSize?: number\n}\n\nexport interface ReadBytesOptions extends AbortOptions {\n  /**\n   * If specified, read this number of bytes from the stream\n   */\n  bytes: number\n}\n\nexport interface ByteStream<S extends MessageStream> {\n  /**\n   * Read bytes from the stream.\n   *\n   * If a required number of bytes is passed as an option, this will wait for\n   * the underlying stream to supply that number of bytes, throwing an\n   * `UnexpectedEOFError` if the stream closes before this happens.\n   *\n   * If no required number of bytes is passed, this will return `null` if the\n   * underlying stream closes before supplying any bytes.\n   */\n  read(options: ReadBytesOptions): Promise<Uint8ArrayList>\n  read(options?: AbortOptions): Promise<Uint8ArrayList | null>\n\n  /**\n   * Write the passed bytes to the stream\n   */\n  write(data: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<void>\n\n  /**\n   * After calling this method the stream can no longer be used. Any unread data\n   * will be emitted as a message event during the microtask queue of the\n   * current event loop tick.\n   */\n  unwrap(): S\n}\n\nfunction isStream (obj?: any): obj is Stream {\n  return typeof obj?.closeRead === 'function'\n}\n\nfunction isMultiaddrConnection (obj?: any): obj is MultiaddrConnection {\n  return typeof obj?.close === 'function'\n}\n\nfunction isEOF (obj?: any): boolean {\n  if (isStream(obj)) {\n    return obj.remoteWriteStatus !== 'writable' && obj.readBufferLength === 0\n  }\n\n  if (isMultiaddrConnection(obj)) {\n    return obj.status !== 'open'\n  }\n\n  return false\n}\n\ntype ByteStreamReadable = Pick<Stream & MultiaddrConnection, 'addEventListener' | 'removeEventListener' | 'send' | 'push' | 'log'>\n\nfunction isValid (obj?: any): obj is ByteStreamReadable {\n  return obj?.addEventListener != null && obj?.removeEventListener != null && obj?.send != null && obj?.push != null && obj?.log != null\n}\n\nexport function byteStream <T extends MessageStream> (stream: T, opts?: ByteStreamOpts): ByteStream<T> {\n  const maxBufferSize = opts?.maxBufferSize ?? DEFAULT_MAX_BUFFER_SIZE\n  const readBuffer = new Uint8ArrayList()\n\n  let hasBytes: PromiseWithResolvers<void> | undefined\n  let unwrapped = false\n\n  if (!isValid(stream)) {\n    throw new InvalidParametersError('Argument should be a Stream or a Multiaddr')\n  }\n\n  const byteStreamOnMessageListener = (evt: StreamMessageEvent): void => {\n    readBuffer.append(evt.data)\n\n    if (readBuffer.byteLength > maxBufferSize) {\n      const readBufferSize = readBuffer.byteLength\n      readBuffer.consume(readBuffer.byteLength)\n      hasBytes?.reject(new Error(`Read buffer overflow - ${readBufferSize} > ${maxBufferSize}`))\n    }\n\n    hasBytes?.resolve()\n  }\n  stream.addEventListener('message', byteStreamOnMessageListener)\n\n  const byteStreamOnCloseListener = (evt: StreamCloseEvent): void => {\n    if (evt.error != null) {\n      hasBytes?.reject(evt.error)\n    } else {\n      hasBytes?.resolve()\n    }\n  }\n  stream.addEventListener('close', byteStreamOnCloseListener)\n\n  const byteStreamOnRemoteCloseWrite = (): void => {\n    hasBytes?.resolve()\n  }\n  stream.addEventListener('remoteCloseWrite', byteStreamOnRemoteCloseWrite)\n\n  const byteStream: ByteStream<T> = {\n    readBuffer,\n\n    // @ts-expect-error options type prevents type inference\n    async read (options?: ReadBytesOptions) {\n      if (unwrapped === true) {\n        throw new UnwrappedError('Stream was unwrapped')\n      }\n\n      if (isEOF(stream)) {\n        if (options?.bytes == null) {\n          return null\n        }\n\n        if (readBuffer.byteLength < options.bytes) {\n          stream.log.error('closed after reading %d/%d bytes', readBuffer.byteLength, options.bytes)\n          throw new UnexpectedEOFError(`Unexpected EOF - stream closed after reading ${readBuffer.byteLength}/${options.bytes} bytes`)\n        }\n      }\n\n      const bytesToRead = options?.bytes ?? 1\n      hasBytes = Promise.withResolvers<void>()\n\n      while (true) {\n        if (readBuffer.byteLength >= bytesToRead) {\n          // if we are about to exit the loop this promise will not be awaited\n          // so resolve it to prevent and unhandled promise rejections that may\n          // occur\n          hasBytes.resolve()\n\n          break\n        }\n\n        await raceSignal(hasBytes.promise, options?.signal)\n\n        if (isEOF(stream)) {\n          if (readBuffer.byteLength === 0 && options?.bytes == null) {\n            return null\n          }\n\n          break\n        }\n\n        hasBytes = Promise.withResolvers<void>()\n      }\n\n      const toRead = options?.bytes ?? readBuffer.byteLength\n\n      if (readBuffer.byteLength < toRead) {\n        if (isEOF(stream)) {\n          stream.log.error('closed while reading %d/%d bytes', readBuffer.byteLength, toRead)\n          throw new UnexpectedEOFError(`Unexpected EOF - stream closed while reading ${readBuffer.byteLength}/${toRead} bytes`)\n        }\n\n        return byteStream.read(options)\n      }\n\n      const output = readBuffer.sublist(0, toRead)\n      readBuffer.consume(toRead)\n\n      return output\n    },\n    async write (data: Uint8Array | Uint8ArrayList, options?: AbortOptions) {\n      if (unwrapped === true) {\n        throw new UnwrappedError('Stream was unwrapped')\n      }\n\n      if (!stream.send(data)) {\n        await pEvent(stream, 'drain', {\n          signal: options?.signal,\n          rejectionEvents: ['close']\n        })\n      }\n    },\n    unwrap () {\n      // already unwrapped, just return the original stream\n      if (unwrapped) {\n        return stream\n      }\n\n      // only unwrap once\n      unwrapped = true\n      stream.removeEventListener('message', byteStreamOnMessageListener)\n      stream.removeEventListener('close', byteStreamOnCloseListener)\n      stream.removeEventListener('remoteCloseWrite', byteStreamOnRemoteCloseWrite)\n\n      // emit any unread data\n      if (readBuffer.byteLength > 0) {\n        stream.log('stream unwrapped with %d unread bytes', readBuffer.byteLength)\n        stream.push(readBuffer)\n      }\n\n      return stream\n    }\n  }\n\n  return byteStream\n}\n\nexport interface LengthPrefixedStream<S extends MessageStream = MessageStream> {\n  /**\n   * Read the next length-prefixed number of bytes from the stream\n   */\n  read(options?: AbortOptions): Promise<Uint8ArrayList>\n\n  /**\n   * Write the passed bytes to the stream prefixed by their length\n   */\n  write(data: Uint8Array | Uint8ArrayList, options?: AbortOptions): Promise<void>\n\n  /**\n   * Write passed list of bytes, prefix by their individual lengths to the stream as a single write\n   */\n  writeV(input: Array<Uint8Array | Uint8ArrayList>, options?: AbortOptions): Promise<void>\n\n  /**\n   * Returns the underlying stream\n   */\n  unwrap(): S\n}\n\nexport interface LengthPrefixedStreamOpts extends ByteStreamOpts {\n  lengthEncoder (value: number): Uint8ArrayList | Uint8Array\n  lengthDecoder (data: Uint8ArrayList): number\n  maxLengthLength: number\n  maxDataLength: number\n}\n\nexport function lpStream <T extends MessageStream> (stream: T, opts: Partial<LengthPrefixedStreamOpts> = {}): LengthPrefixedStream<T> {\n  const bytes = byteStream(stream, opts)\n\n  if (opts.maxDataLength != null && opts.maxLengthLength == null) {\n    // if max data length is set but max length length is not, calculate the\n    // max length length needed to encode max data length\n    opts.maxLengthLength = varint.encodingLength(opts.maxDataLength)\n  }\n\n  const decodeLength = opts?.lengthDecoder ?? varint.decode\n  const encodeLength = opts?.lengthEncoder ?? varint.encode\n\n  const lpStream: LengthPrefixedStream<any> = {\n    async read (options?: AbortOptions) {\n      let dataLength: number = -1\n      const lengthBuffer = new Uint8ArrayList()\n\n      while (true) {\n        // read one byte at a time until we can decode a varint\n        const buf = await bytes.read({\n          ...options,\n          bytes: 1\n        })\n\n        // the underlying resource closed gracefully\n        if (buf == null) {\n          break\n        }\n\n        // append byte and try to decode\n        lengthBuffer.append(buf)\n\n        try {\n          dataLength = decodeLength(lengthBuffer)\n        } catch (err) {\n          if (err instanceof RangeError) {\n            continue\n          }\n\n          throw err\n        }\n\n        if (dataLength < 0) {\n          throw new InvalidMessageLengthError('Invalid message length')\n        }\n\n        if (opts?.maxLengthLength != null && lengthBuffer.byteLength > opts.maxLengthLength) {\n          throw new InvalidDataLengthLengthError(`Message length length too long - ${lengthBuffer.byteLength} > ${opts.maxLengthLength}`)\n        }\n\n        if (dataLength > -1) {\n          break\n        }\n      }\n\n      if (opts?.maxDataLength != null && dataLength > opts.maxDataLength) {\n        throw new InvalidDataLengthError(`Message length too long - ${dataLength} > ${opts.maxDataLength}`)\n      }\n\n      const buf = await bytes.read({\n        ...options,\n        bytes: dataLength\n      })\n\n      if (buf == null) {\n        stream.log.error('tried to read %d bytes but the stream closed', dataLength)\n        throw new UnexpectedEOFError(`Unexpected EOF - tried to read ${dataLength} bytes but the stream closed`)\n      }\n\n      if (buf.byteLength !== dataLength) {\n        stream.log.error('read %d/%d bytes before the stream closed', buf.byteLength, dataLength)\n        throw new UnexpectedEOFError(`Unexpected EOF - read ${buf.byteLength}/${dataLength} bytes before the stream closed`)\n      }\n\n      return buf\n    },\n    async write (data, options?: AbortOptions) {\n      // encode, write\n      await bytes.write(new Uint8ArrayList(encodeLength(data.byteLength), data), options)\n    },\n    async writeV (data, options?: AbortOptions) {\n      const list = new Uint8ArrayList(\n        ...data.flatMap(buf => ([encodeLength(buf.byteLength), buf]))\n      )\n\n      // encode, write\n      await bytes.write(list, options)\n    },\n    unwrap () {\n      return bytes.unwrap()\n    }\n  }\n\n  return lpStream\n}\n\n/**\n * A protobuf decoder - takes a byte array and returns an object\n */\nexport interface ProtobufDecoder<T> {\n  (data: Uint8Array | Uint8ArrayList): T\n}\n\n/**\n * A protobuf encoder - takes an object and returns a byte array\n */\nexport interface ProtobufEncoder<T> {\n  (data: T): Uint8Array\n}\n\n/**\n * Convenience methods for working with protobuf streams\n */\nexport interface ProtobufStream<S extends MessageStream = MessageStream> {\n  /**\n   * Read the next length-prefixed byte array from the stream and decode it as the passed protobuf format\n   */\n  read<T>(proto: { decode: ProtobufDecoder<T> }, options?: AbortOptions): Promise<T>\n\n  /**\n   * Encode the passed object as a protobuf message and write it's length-prefixed bytes to the stream\n   */\n  write<T>(data: T, proto: { encode: ProtobufEncoder<T> }, options?: AbortOptions): Promise<void>\n\n  /**\n   * Encode the passed objects as protobuf messages and write their length-prefixed bytes to the stream as a single write\n   */\n  writeV<T>(input: T[], proto: { encode: ProtobufEncoder<T> }, options?: AbortOptions): Promise<void>\n\n  /**\n   * Returns an object with read/write methods for operating on one specific type of protobuf message\n   */\n  pb<T>(proto: { encode: ProtobufEncoder<T>, decode: ProtobufDecoder<T> }): ProtobufMessageStream<T, S>\n\n  /**\n   * Returns the underlying stream\n   */\n  unwrap(): S\n}\n\n/**\n * A message reader/writer that only uses one type of message\n */\nexport interface ProtobufMessageStream <T, S extends MessageStream = MessageStream> {\n  /**\n   * Read a message from the stream\n   */\n  read(options?: AbortOptions): Promise<T>\n\n  /**\n   * Write a message to the stream\n   */\n  write(d: T, options?: AbortOptions): Promise<void>\n\n  /**\n   * Write several messages to the stream\n   */\n  writeV(d: T[], options?: AbortOptions): Promise<void>\n\n  /**\n   * Unwrap the underlying protobuf stream\n   */\n  unwrap(): ProtobufStream<S>\n}\n\nexport interface ProtobufStreamOpts extends LengthPrefixedStreamOpts {\n\n}\n\nexport function pbStream <T extends MessageStream = Stream> (stream: T, opts?: Partial<ProtobufStreamOpts>): ProtobufStream<T> {\n  const lp = lpStream(stream, opts)\n\n  const pbStream: ProtobufStream<T> = {\n    read: async (proto, options?: AbortOptions) => {\n      // readLP, decode\n      const value = await lp.read(options)\n\n      return proto.decode(value)\n    },\n    write: async (message, proto, options?: AbortOptions) => {\n      // encode, writeLP\n      await lp.write(proto.encode(message), options)\n    },\n    writeV: async (messages, proto, options?: AbortOptions) => {\n      // encode, writeLP\n      await lp.writeV(messages.map(message => proto.encode(message)), options)\n    },\n    pb: (proto) => {\n      return {\n        read: async (options) => pbStream.read(proto, options),\n        write: async (d, options) => pbStream.write(d, proto, options),\n        writeV: async (d, options) => pbStream.writeV(d, proto, options),\n        unwrap: () => pbStream\n      }\n    },\n    unwrap: () => {\n      return lp.unwrap()\n    }\n  }\n\n  return pbStream\n}\n\nexport async function echo (stream: MessageStream, options?: AbortOptions): Promise<void> {\n  const log = stream.log.newScope('echo')\n  const start = Date.now()\n\n  let bytes = 0\n\n  try {\n    for await (const buf of stream) {\n      bytes += buf.byteLength\n\n      if (!stream.send(buf)) {\n        stream.pause()\n\n        await pEvent(stream, 'drain', {\n          rejectionEvents: [\n            'close'\n          ],\n          ...options\n        })\n\n        stream.resume()\n      }\n    }\n\n    log('echoed %d bytes in %dms', bytes, Date.now() - start)\n\n    await stream.close(options)\n  } catch (err: any) {\n    stream.abort(err)\n  }\n}\n\nexport type PipeInput = Iterable<Uint8Array | Uint8ArrayList> | AsyncIterable<Uint8Array | Uint8ArrayList> | Stream\n\nfunction isMessageStream (obj?: any): obj is Stream {\n  return obj?.addEventListener != null\n}\n\nexport function messageStreamToDuplex (stream: Stream): Duplex<AsyncGenerator<Uint8ArrayList | Uint8Array>, Iterable<Uint8ArrayList | Uint8Array> | AsyncIterable<Uint8ArrayList | Uint8Array>, Promise<void>> {\n  const source = pushable<Uint8ArrayList | Uint8Array>()\n  let onError: PromiseWithResolvers<IteratorResult<Uint8ArrayList | Uint8Array>> | undefined\n\n  const onMessage = (evt: StreamMessageEvent): void => {\n    source.push(evt.data)\n  }\n\n  const onRemoteCloseWrite = (): void => {\n    source.end()\n\n    stream.removeEventListener('message', onMessage)\n    stream.removeEventListener('close', onClose)\n    stream.removeEventListener('remoteCloseWrite', onRemoteCloseWrite)\n  }\n\n  const onClose = (evt: StreamCloseEvent): void => {\n    source.end(evt.error)\n\n    if (evt.error != null) {\n      onError?.reject(evt.error)\n    }\n\n    stream.removeEventListener('message', onMessage)\n    stream.removeEventListener('close', onClose)\n    stream.removeEventListener('remoteCloseWrite', onRemoteCloseWrite)\n  }\n\n  stream.addEventListener('message', onMessage)\n  stream.addEventListener('close', onClose, {\n    once: true\n  })\n  stream.addEventListener('remoteCloseWrite', onRemoteCloseWrite, {\n    once: true\n  })\n\n  return {\n    source,\n    async sink (source: Source<Uint8Array | Uint8ArrayList>) {\n      async function * toGenerator (): AsyncGenerator<Uint8Array | Uint8ArrayList> {\n        yield * source\n      }\n\n      const gen = toGenerator()\n\n      while (true) {\n        onError = Promise.withResolvers<IteratorResult<Uint8ArrayList | Uint8Array>>()\n\n        const { done, value } = await Promise.race([\n          gen.next(),\n          onError.promise\n        ])\n\n        if (stream.writeStatus === 'closing' || stream.writeStatus === 'closed') {\n          break\n        }\n\n        if (value != null) {\n          if (!stream.send(value)) {\n            await Promise.race([\n              pEvent(stream, 'drain', {\n                rejectionEvents: [\n                  'close'\n                ]\n              })\n            ])\n          }\n        }\n\n        if (done === true) {\n          break\n        }\n      }\n\n      await stream.close()\n    }\n  }\n}\n\ninterface SourceFn<A = any> { (): A }\n\ntype PipeSource<A = any> =\n  Iterable<A> |\n  AsyncIterable<A> |\n  SourceFn<A> |\n  Duplex<A, any, any> |\n  MessageStream\n\ntype PipeTransform<A = any, B = any> =\n  Transform<A, B> |\n  Duplex<B, A> |\n  MessageStream\n\ntype PipeSink<A = any, B = any> =\n  Sink<A, B> |\n  Duplex<any, A, B> |\n  MessageStream\n\ntype PipeOutput<A> =\n  A extends Sink<any> ? ReturnType<A> :\n    A extends Duplex<any, any, any> ? ReturnType<A['sink']> :\n      A extends MessageStream ? Promise<void> :\n        never\n\n// single item pipe output includes pipe source types\ntype SingleItemPipeOutput<A> =\n  A extends Iterable<any> ? A :\n    A extends AsyncIterable<any> ? A :\n      A extends SourceFn ? ReturnType<A> :\n        A extends Duplex<any, any, any> ? A['source'] :\n          PipeOutput<A>\n\ntype PipeFnInput<A> =\n  A extends Iterable<any> ? A :\n    A extends AsyncIterable<any> ? A :\n      A extends SourceFn ? ReturnType<A> :\n        A extends Transform<any, any> ? ReturnType<A> :\n          A extends Duplex<any, any, any> ? A['source'] :\n            never\n\nexport function pipe<\n  A extends PipeSource\n> (\n  source: A\n): SingleItemPipeOutput<A>\n// two items, source to sink\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeSink<PipeFnInput<A>>\n> (\n  source: A,\n  sink: B\n): PipeOutput<B>\n\n// three items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeSink<PipeFnInput<B>>\n> (\n  source: A,\n  transform1: B,\n  sink: C\n): PipeOutput<C>\n\n// many items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeSink<PipeFnInput<C>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  sink: D\n): PipeOutput<D>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeSink<PipeFnInput<D>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  sink: E\n): PipeOutput<E>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeSink<PipeFnInput<E>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  sink: F\n): PipeOutput<F>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeSink<PipeFnInput<F>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  sink: G\n): PipeOutput<G>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeSink<PipeFnInput<G>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  sink: H\n): PipeOutput<H>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeSink<PipeFnInput<H>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  sink: I\n): PipeOutput<I>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeSink<PipeFnInput<I>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  sink: J\n): PipeOutput<J>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeTransform<PipeFnInput<I>>,\n  K extends PipeSink<PipeFnInput<J>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  transform9: J,\n  sink: K\n): PipeOutput<K>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeTransform<PipeFnInput<I>>,\n  K extends PipeTransform<PipeFnInput<J>>,\n  L extends PipeSink<PipeFnInput<K>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  transform9: J,\n  transform10: K,\n  sink: L\n): PipeOutput<L>\nexport function pipe (...input: any[]): any {\n  const sources = input.map(source => {\n    if (isMessageStream(source)) {\n      return messageStreamToDuplex(source)\n    }\n\n    return source\n  })\n\n  // @ts-expect-error it-pipe types say args cannot be spread like this\n  return itPipe(...sources)\n}\n", "import { InvalidParametersError } from '@libp2p/interface'\nimport * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { InvalidMessageLengthError } from './stream-utils.ts'\n\nconst DEFAULT_MAX_BUFFER_SIZE = 1024 * 1024 * 4\nconst DEFAULT_MAX_DATA_LENGTH = 1024 * 1024 * 4\n\nexport interface LengthPrefixedDecoderInit {\n  /**\n   * How large the internal buffer is allowed to grow - attempting to store more\n   * data than this will throw\n   */\n  maxBufferSize?: number\n\n  /**\n   * Throw an error if the message that would be read from the buffer is larger\n   * than this value\n   */\n  maxDataLength?: number\n\n  /**\n   * Read a varint from the buffer\n   */\n  lengthDecoder?(data: Uint8ArrayList | Uint8Array): number\n\n  /**\n   * Return how many bytes it takes to encode the passed value\n   */\n  encodingLength?(length: number): number\n}\n\n/**\n * Decode length-prefixed data from a buffer\n */\nexport class LengthPrefixedDecoder {\n  private readonly buffer: Uint8ArrayList\n  private readonly maxBufferSize: number\n  private readonly lengthDecoder: (data: Uint8ArrayList | Uint8Array) => number\n  private readonly maxDataLength: number\n  private readonly encodingLength: (length: number) => number\n\n  constructor (init: LengthPrefixedDecoderInit = {}) {\n    this.buffer = new Uint8ArrayList()\n    this.maxBufferSize = init.maxBufferSize ?? DEFAULT_MAX_BUFFER_SIZE\n    this.maxDataLength = init.maxDataLength ?? DEFAULT_MAX_DATA_LENGTH\n    this.lengthDecoder = init.lengthDecoder ?? varint.decode\n    this.encodingLength = init.encodingLength ?? varint.encodingLength\n  }\n\n  /**\n   * Decodes length-prefixed data\n   */\n  * decode (buf: Uint8Array | Uint8ArrayList): Generator<Uint8ArrayList> {\n    this.buffer.append(buf)\n\n    if (this.buffer.byteLength > this.maxBufferSize) {\n      throw new InvalidParametersError(`Buffer length limit exceeded - ${this.buffer.byteLength}/${this.maxBufferSize}`)\n    }\n\n    // Loop to consume as many bytes from the buffer as possible\n    // Eg: when a single chunk contains several frames\n    while (true) {\n      let dataLength: number\n\n      try {\n        dataLength = this.lengthDecoder(this.buffer)\n      } catch (err) {\n        if (err instanceof RangeError) {\n          // ignore errors where we don't have enough data to read the length\n          // prefix\n          break\n        }\n\n        throw err\n      }\n\n      if (dataLength < 0 || dataLength > this.maxDataLength) {\n        throw new InvalidMessageLengthError('Invalid message length')\n      }\n\n      const lengthLength = this.encodingLength(dataLength)\n      const chunkLength = lengthLength + dataLength\n\n      if (this.buffer.byteLength >= chunkLength) {\n        const buf = this.buffer.sublist(lengthLength, chunkLength)\n\n        this.buffer.consume(chunkLength)\n\n        if (buf.byteLength > 0) {\n          yield buf\n        }\n      } else {\n        break\n      }\n    }\n  }\n}\n", "/**\n * The reported length of the next data message was not a positive integer\n */\nexport class InvalidMessageLengthError extends Error {\n  name = 'InvalidMessageLengthError'\n  code = 'ERR_INVALID_MSG_LENGTH'\n}\n\n/**\n * The reported length of the next data message was larger than the configured\n * max allowable value\n */\nexport class InvalidDataLengthError extends Error {\n  name = 'InvalidDataLengthError'\n  code = 'ERR_MSG_DATA_TOO_LONG'\n}\n\n/**\n * The varint used to specify the length of the next data message contained more\n * bytes than the configured max allowable value\n */\nexport class InvalidDataLengthLengthError extends Error {\n  name = 'InvalidDataLengthLengthError'\n  code = 'ERR_MSG_LENGTH_TOO_LONG'\n}\n\n/**\n * The incoming stream ended before the expected number of bytes were read\n */\nexport class UnexpectedEOFError extends Error {\n  name = 'UnexpectedEOFError'\n  code = 'ERR_UNEXPECTED_EOF'\n}\n", "export function isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n", "import * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport { MAX_DATA_LENGTH } from './constants.js'\nimport { InvalidDataLengthError } from './errors.js'\nimport { isAsyncIterable } from './utils.js'\nimport type { EncoderOptions, LengthEncoderFunction } from './index.js'\nimport type { Source } from 'it-stream-types'\n\n// Helper function to validate the chunk size against maxDataLength\nfunction validateMaxDataLength (chunk: Uint8Array | Uint8ArrayList, maxDataLength: number): void {\n  if (chunk.byteLength > maxDataLength) {\n    throw new InvalidDataLengthError('Message length too long')\n  }\n}\n\nconst defaultEncoder: LengthEncoderFunction = (length) => {\n  const lengthLength = varint.encodingLength(length)\n  const lengthBuf = allocUnsafe(lengthLength)\n\n  varint.encode(length, lengthBuf)\n\n  defaultEncoder.bytes = lengthLength\n\n  return lengthBuf\n}\ndefaultEncoder.bytes = 0\n\nexport function encode (source: Iterable<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): Generator<Uint8Array, void, undefined>\nexport function encode (source: Source<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): AsyncGenerator<Uint8Array, void, undefined>\nexport function encode (source: Source<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): Generator<Uint8Array, void, undefined> | AsyncGenerator<Uint8Array, void, undefined> {\n  options = options ?? {}\n\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n  const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH\n\n  function * maybeYield (chunk: Uint8Array | Uint8ArrayList): Generator<Uint8Array, void, undefined> {\n    validateMaxDataLength(chunk, maxDataLength)\n\n    // length + data\n    const length = encodeLength(chunk.byteLength)\n\n    // yield only Uint8Arrays\n    if (length instanceof Uint8Array) {\n      yield length\n    } else {\n      yield * length\n    }\n\n    // yield only Uint8Arrays\n    if (chunk instanceof Uint8Array) {\n      yield chunk\n    } else {\n      yield * chunk\n    }\n  }\n\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const chunk of source) {\n        yield * maybeYield(chunk)\n      }\n    })()\n  }\n\n  return (function * () {\n    for (const chunk of source) {\n      yield * maybeYield(chunk)\n    }\n  })()\n}\n\nencode.single = (chunk: Uint8ArrayList | Uint8Array, options?: EncoderOptions) => {\n  options = options ?? {}\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n  const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH\n\n  validateMaxDataLength(chunk, maxDataLength)\n\n  return new Uint8ArrayList(\n    encodeLength(chunk.byteLength),\n    chunk\n  )\n}\n", "/* eslint max-depth: [\"error\", 6] */\n\nimport * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { MAX_DATA_LENGTH, MAX_LENGTH_LENGTH } from './constants.js'\nimport { InvalidDataLengthError, InvalidDataLengthLengthError, InvalidMessageLengthError, UnexpectedEOFError } from './errors.js'\nimport { isAsyncIterable } from './utils.js'\nimport type { DecoderOptions, LengthDecoderFunction } from './index.js'\nimport type { Reader } from 'it-reader'\nimport type { Source } from 'it-stream-types'\n\nenum ReadMode {\n  LENGTH,\n  DATA\n}\n\nconst defaultDecoder: LengthDecoderFunction = (buf) => {\n  const length = varint.decode(buf)\n  defaultDecoder.bytes = varint.encodingLength(length)\n\n  return length\n}\ndefaultDecoder.bytes = 0\n\nexport function decode (source: Iterable<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): Generator<Uint8ArrayList, void, unknown>\nexport function decode (source: Source<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): AsyncGenerator<Uint8ArrayList, void, unknown>\nexport function decode (source: Source<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): Generator<Uint8ArrayList, void, unknown> | AsyncGenerator<Uint8ArrayList, void, unknown> {\n  const buffer = new Uint8ArrayList()\n  let mode = ReadMode.LENGTH\n  let dataLength = -1\n\n  const lengthDecoder = options?.lengthDecoder ?? defaultDecoder\n  const maxLengthLength = options?.maxLengthLength ?? MAX_LENGTH_LENGTH\n  const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH\n\n  function * maybeYield (): Generator<Uint8ArrayList> {\n    while (buffer.byteLength > 0) {\n      if (mode === ReadMode.LENGTH) {\n        // read length, ignore errors for short reads\n        try {\n          dataLength = lengthDecoder(buffer)\n\n          if (dataLength < 0) {\n            throw new InvalidMessageLengthError('Invalid message length')\n          }\n\n          if (dataLength > maxDataLength) {\n            throw new InvalidDataLengthError('Message length too long')\n          }\n\n          const dataLengthLength = lengthDecoder.bytes\n          buffer.consume(dataLengthLength)\n\n          if (options?.onLength != null) {\n            options.onLength(dataLength)\n          }\n\n          mode = ReadMode.DATA\n        } catch (err: any) {\n          if (err instanceof RangeError) {\n            if (buffer.byteLength > maxLengthLength) {\n              throw new InvalidDataLengthLengthError('Message length length too long')\n            }\n\n            break\n          }\n\n          throw err\n        }\n      }\n\n      if (mode === ReadMode.DATA) {\n        if (buffer.byteLength < dataLength) {\n          // not enough data, wait for more\n          break\n        }\n\n        const data = buffer.sublist(0, dataLength)\n        buffer.consume(dataLength)\n\n        if (options?.onData != null) {\n          options.onData(data)\n        }\n\n        yield data\n\n        mode = ReadMode.LENGTH\n      }\n    }\n  }\n\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const buf of source) {\n        buffer.append(buf)\n\n        yield * maybeYield()\n      }\n\n      if (buffer.byteLength > 0) {\n        throw new UnexpectedEOFError('Unexpected end of input')\n      }\n    })()\n  }\n\n  return (function * () {\n    for (const buf of source) {\n      buffer.append(buf)\n\n      yield * maybeYield()\n    }\n\n    if (buffer.byteLength > 0) {\n      throw new UnexpectedEOFError('Unexpected end of input')\n    }\n  })()\n}\n\ndecode.fromReader = (reader: Reader, options?: DecoderOptions) => {\n  let byteLength = 1 // Read single byte chunks until the length is known\n\n  const varByteSource = (async function * () {\n    while (true) {\n      try {\n        const { done, value } = await reader.next(byteLength)\n\n        if (done === true) {\n          return\n        }\n\n        if (value != null) {\n          yield value\n        }\n      } catch (err: any) {\n        if (err.code === 'ERR_UNDER_READ') {\n          return { done: true, value: null }\n        }\n        throw err\n      } finally {\n        // Reset the byteLength so we continue to check for varints\n        byteLength = 1\n      }\n    }\n  }())\n\n  /**\n   * Once the length has been parsed, read chunk for that length\n   */\n  const onLength = (l: number): void => { byteLength = l }\n  return decode(varByteSource, {\n    ...(options ?? {}),\n    onLength\n  })\n}\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n", "import { detect } from 'detect-browser'\nimport pDefer from 'p-defer'\nimport pTimeout from 'p-timeout'\nimport { DATA_CHANNEL_DRAIN_TIMEOUT, DEFAULT_ICE_SERVERS, UFRAG_ALPHABET, UFRAG_PREFIX } from './constants.js'\nimport type { LoggerOptions } from '@libp2p/interface'\nimport type { Duplex, Source } from 'it-stream-types'\nimport type { PeerConnection } from 'node-datachannel'\n\nconst browser = detect()\nexport const isFirefox = ((browser != null) && browser.name === 'firefox')\n\nexport const nopSource = async function * nop (): AsyncGenerator<Uint8Array, any, unknown> {}\n\nexport const nopSink = async (_: any): Promise<void> => {}\n\n// Duplex that does nothing. Needed to fulfill the interface\nexport function inertDuplex (): Duplex<any, any, any> {\n  return {\n    source: {\n      [Symbol.asyncIterator] () {\n        return {\n          async next () {\n            // This will never resolve\n            return new Promise(() => { })\n          }\n        }\n      }\n    },\n    sink: async (source: Source<any>) => {\n      // This will never resolve\n      return new Promise(() => { })\n    }\n  }\n}\n\nexport function drainAndClose (channel: RTCDataChannel, direction: string, drainTimeout: number = DATA_CHANNEL_DRAIN_TIMEOUT, options: LoggerOptions): void {\n  if (channel.readyState !== 'open') {\n    return\n  }\n\n  void Promise.resolve()\n    .then(async () => {\n      // wait for bufferedAmount to become zero\n      if (channel.bufferedAmount > 0) {\n        options.log('%s drain channel with %d buffered bytes', direction, channel.bufferedAmount)\n        const deferred = pDefer()\n        let drained = false\n\n        channel.bufferedAmountLowThreshold = 0\n\n        const closeListener = (): void => {\n          if (!drained) {\n            options.log('%s drain channel closed before drain', direction)\n            deferred.resolve()\n          }\n        }\n\n        channel.addEventListener('close', closeListener, {\n          once: true\n        })\n\n        channel.addEventListener('bufferedamountlow', () => {\n          drained = true\n          channel.removeEventListener('close', closeListener)\n          deferred.resolve()\n        })\n\n        await pTimeout(deferred.promise, {\n          milliseconds: drainTimeout\n        })\n      }\n    })\n    .then(async () => {\n      // only close if the channel is still open\n      if (channel.readyState === 'open') {\n        channel.close()\n      }\n    })\n    .catch(err => {\n      options.log.error('error closing outbound stream - %e', err)\n    })\n}\n\nexport interface AbortPromiseOptions {\n  signal?: AbortSignal\n  message?: string\n}\n\nexport function isPeerConnection (obj: any): obj is PeerConnection {\n  return typeof obj.state === 'function'\n}\n\nexport async function getRtcConfiguration (config?: RTCConfiguration | (() => RTCConfiguration | Promise<RTCConfiguration>)): Promise<RTCConfiguration> {\n  config = config ?? {}\n\n  if (typeof config === 'function') {\n    config = await config()\n  }\n\n  config.iceServers = config.iceServers ?? DEFAULT_ICE_SERVERS.map(url => ({\n    urls: [\n      url\n    ]\n  }))\n\n  return config\n}\n\nexport const genUfrag = (len: number = 32): string => {\n  return UFRAG_PREFIX + [...Array(len)].map(() => UFRAG_ALPHABET.at(Math.floor(Math.random() * UFRAG_ALPHABET.length))).join('')\n}\n", "import { StreamResetError, StreamStateError } from '@libp2p/interface'\nimport { AbstractStream } from '@libp2p/utils'\nimport * as lengthPrefixed from 'it-length-prefixed'\nimport { pushable } from 'it-pushable'\nimport { pEvent } from 'p-event'\nimport { raceSignal } from 'race-signal'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { DEFAULT_FIN_ACK_TIMEOUT, MAX_BUFFERED_AMOUNT, MAX_MESSAGE_SIZE, PROTOBUF_OVERHEAD } from './constants.js'\nimport { Message } from './private-to-public/pb/message.js'\nimport { isFirefox } from './util.js'\nimport type { DataChannelOptions } from './index.js'\nimport type { AbortOptions, MessageStreamDirection, Logger } from '@libp2p/interface'\nimport type { AbstractStreamInit, SendResult } from '@libp2p/utils'\nimport type { Pushable } from 'it-pushable'\n\nexport interface WebRTCStreamInit extends AbstractStreamInit, DataChannelOptions {\n  /**\n   * The network channel used for bidirectional peer-to-peer transfers of\n   * arbitrary data\n   *\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel}\n   */\n  channel: RTCDataChannel\n\n  log: Logger\n}\n\nexport class WebRTCStream extends AbstractStream {\n  /**\n   * The data channel used to send and receive data\n   */\n  private readonly channel: RTCDataChannel\n\n  /**\n   * push data from the underlying datachannel to the length prefix decoder\n   * and then the protobuf decoder.\n   */\n  private readonly incomingData: Pushable<Uint8Array>\n  private readonly maxBufferedAmount: number\n  private receivedFinAck?: PromiseWithResolvers<void>\n  private finAckTimeout: number\n\n  constructor (init: WebRTCStreamInit) {\n    super({\n      ...init,\n      maxMessageSize: (init.maxMessageSize ?? MAX_MESSAGE_SIZE) - PROTOBUF_OVERHEAD\n    })\n\n    this.channel = init.channel\n    this.channel.binaryType = 'arraybuffer'\n    this.incomingData = pushable<Uint8Array>()\n    this.maxBufferedAmount = init.maxBufferedAmount ?? MAX_BUFFERED_AMOUNT\n    this.finAckTimeout = init.finAckTimeout ?? DEFAULT_FIN_ACK_TIMEOUT\n\n    // handle RTCDataChannel events\n    this.channel.onclose = () => {\n      this.log.trace('received datachannel close event')\n\n      this.onRemoteCloseWrite()\n      this.onTransportClosed()\n    }\n\n    this.channel.onerror = (evt) => {\n      const err = (evt as RTCErrorEvent).error\n\n      this.log.trace('received datachannel error event - %e', err)\n\n      this.abort(err)\n    }\n\n    this.channel.onmessage = async (event: MessageEvent<ArrayBuffer>) => {\n      this.log('incoming message %d bytes', event.data.byteLength)\n      const { data } = event\n\n      if (data === null || data.byteLength === 0) {\n        return\n      }\n\n      this.incomingData.push(new Uint8Array(data, 0, data.byteLength))\n    }\n\n    // dispatch drain event when the buffered amount drops to zero\n    this.channel.bufferedAmountLowThreshold = 0\n\n    this.channel.onbufferedamountlow = () => {\n      if (this.writableNeedsDrain) {\n        this.safeDispatchEvent('drain')\n      }\n    }\n\n    // pipe framed protobuf messages through a length prefixed decoder, and\n    // surface data from the `Message.message` field through a source.\n    Promise.resolve().then(async () => {\n      for await (const buf of lengthPrefixed.decode(this.incomingData)) {\n        this.processIncomingProtobuf(buf)\n      }\n    })\n      .catch(err => {\n        this.log.error('error processing incoming data channel messages - %e', err)\n      })\n\n    // close when both writable ends are closed or an error occurs\n    const cleanUpDatachannelOnClose = (): void => {\n      if (this.channel.readyState === 'open') {\n        this.log.trace('stream closed, closing underlying datachannel')\n        this.channel.close()\n      }\n    }\n    this.addEventListener('close', cleanUpDatachannelOnClose)\n\n    // chrome can receive message events before the open even is fired - calling\n    // code needs to attach message event listeners before these events occur\n    // but we need to wait before sending any data so this has to be done async\n    if (this.channel.readyState !== 'open') {\n      this.log('channel ready state is \"%s\" and not \"open\", waiting for \"open\" event before sending data', this.channel.readyState)\n      pEvent(this.channel, 'open', {\n        rejectionEvents: [\n          'close',\n          'error'\n        ]\n      })\n        .then(() => {\n          this.log('channel ready state is now \"%s\", dispatching drain', this.channel.readyState)\n          this.safeDispatchEvent('drain')\n        })\n        .catch(err => {\n          this.abort(err.error ?? err)\n        })\n    }\n  }\n\n  sendNewStream (): void {\n    // opening new streams is handled by WebRTC so this is a noop\n  }\n\n  _sendMessage (data: Uint8ArrayList): void {\n    if (this.channel.readyState !== 'open') {\n      throw new StreamStateError(`Invalid datachannel state - ${this.channel.readyState}`)\n    }\n\n    this.log.trace('sending message, channel state \"%s\"', this.channel.readyState)\n\n    if (isFirefox) {\n      // TODO: firefox can deliver small messages out of order - remove once a\n      // browser with https://bugzilla.mozilla.org/show_bug.cgi?id=1983831 is\n      // available in playwright-test\n      this.channel.send(data.subarray())\n      return\n    }\n\n    // send message without copying data\n    for (const buf of data) {\n      this.channel.send(buf)\n    }\n  }\n\n  sendData (data: Uint8ArrayList): SendResult {\n    if (this.channel.readyState !== 'open') {\n      return {\n        sentBytes: 0,\n        canSendMore: false\n      }\n    }\n\n    // TODO: firefox can deliver small messages out of order - remove once a\n    // browser with https://bugzilla.mozilla.org/show_bug.cgi?id=1983831 is\n    // available in playwright-test\n    // ----\n    // this is also necessary to work with rust-libp2p 0.54 though 0.53 seems ok\n    this._sendMessage(\n      lengthPrefixed.encode.single(Message.encode({\n        message: data.subarray()\n      }))\n    )\n\n    /*\n    // TODO: enable this when FF and rust-libp2p are not broken\n    // send message without copying data\n      for (const message of data) {\n        this._sendMessage(\n          lengthPrefixed.encode.single(Message.encode({\n            message\n          }))\n        )\n      }\n    }\n    */\n\n    return {\n      sentBytes: data.byteLength,\n      canSendMore: this.channel.bufferedAmount < this.maxBufferedAmount\n    }\n  }\n\n  sendReset (err: Error): void {\n    try {\n      this.log.error('sending reset - %e', err)\n      this._sendFlag(Message.Flag.RESET)\n      this.receivedFinAck?.reject(err)\n    } catch (err) {\n      this.log.error('failed to send reset - %e', err)\n    }\n  }\n\n  async sendCloseWrite (options?: AbortOptions): Promise<void> {\n    this._sendFlag(Message.Flag.FIN)\n    options?.signal?.throwIfAborted()\n    this.receivedFinAck = Promise.withResolvers<void>()\n\n    // don't wait for FIN_ACK forever\n    const signal = options?.signal ?? AbortSignal.timeout(this.finAckTimeout)\n\n    // allow cleaning up event promises\n    const eventPromises = [\n      pEvent(this.channel, 'close', {\n        signal\n      }),\n      pEvent(this.channel, 'error', {\n        signal\n      })\n    ]\n\n    // wait for either:\n    // 1. the FIN_ACK to be received\n    // 2. the datachannel to close\n    // 3. timeout\n    await Promise.any([\n      raceSignal(this.receivedFinAck.promise, signal),\n      ...eventPromises\n    ])\n      .finally(() => {\n        eventPromises.forEach(p => p.cancel())\n      })\n  }\n\n  async sendCloseRead (options?: AbortOptions): Promise<void> {\n    this._sendFlag(Message.Flag.STOP_SENDING)\n    options?.signal?.throwIfAborted()\n  }\n\n  /**\n   * Handle incoming\n   */\n  private processIncomingProtobuf (buffer: Uint8ArrayList): void {\n    const message = Message.decode(buffer)\n\n    // ignore data messages if we've closed the readable end already\n    if (message.message != null && (this.readStatus === 'readable' || this.readStatus === 'paused')) {\n      this.onData(new Uint8ArrayList(message.message))\n    }\n\n    if (message.flag !== undefined) {\n      this.log.trace('incoming flag %s, write status \"%s\", read status \"%s\"', message.flag, this.writeStatus, this.readStatus)\n\n      if (message.flag === Message.Flag.FIN) {\n        // we should expect no more data from the remote, stop reading\n        this._sendFlag(Message.Flag.FIN_ACK)\n        this.onRemoteCloseWrite()\n      }\n\n      if (message.flag === Message.Flag.RESET) {\n        // stop reading and writing to the stream immediately\n        this.receivedFinAck?.reject(new StreamResetError('The stream was reset'))\n        this.onRemoteReset()\n      }\n\n      if (message.flag === Message.Flag.STOP_SENDING) {\n        // the remote has stopped reading\n        this.onRemoteCloseRead()\n      }\n\n      if (message.flag === Message.Flag.FIN_ACK) {\n        // remote received our FIN\n        this.receivedFinAck?.resolve()\n      }\n    }\n  }\n\n  private _sendFlag (flag: Message.Flag): boolean {\n    if (this.channel.readyState !== 'open') {\n      // flags can be sent while we or the remote are closing the datachannel so\n      // if the channel isn't open, don't try to send it but return false to let\n      // the caller know and act if they need to\n      this.log.trace('not sending flag %s because channel is \"%s\" and not \"open\"', flag.toString(), this.channel.readyState)\n      return false\n    }\n\n    this.log.trace('sending flag %s', flag.toString())\n    const messageBuf = Message.encode({ flag })\n    const prefixedBuf = lengthPrefixed.encode.single(messageBuf)\n\n    try {\n      this._sendMessage(prefixedBuf)\n\n      return true\n    } catch (err: any) {\n      this.log.error('could not send flag %s - %e', flag.toString(), err)\n    }\n\n    return false\n  }\n\n  sendPause (): void {\n    // TODO: read backpressure?\n  }\n\n  sendResume (): void {\n    // TODO: read backpressure?\n  }\n}\n\nexport interface WebRTCStreamOptions extends DataChannelOptions {\n  /**\n   * The network channel used for bidirectional peer-to-peer transfers of\n   * arbitrary data\n   *\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel}\n   */\n  channel: RTCDataChannel\n\n  /**\n   * The stream direction\n   */\n  direction: MessageStreamDirection\n\n  /**\n   * The logger to create a scope from\n   */\n  log: Logger\n\n  /**\n   * If true the underlying datachannel is being used to perform the noise\n   * handshake during connection establishment\n   */\n  isHandshake?: boolean\n}\n\nexport function createStream (options: WebRTCStreamOptions): WebRTCStream {\n  const { channel, direction, isHandshake } = options\n\n  return new WebRTCStream({\n    ...options,\n    id: `${channel.id}`,\n    log: options.log.newScope(`${isHandshake === true ? 'handshake' : direction}:${channel.id}`),\n    protocol: ''\n  })\n}\n", "import { AbstractStreamMuxer } from '@libp2p/utils'\nimport { MUXER_PROTOCOL } from './constants.js'\nimport { createStream, WebRTCStream } from './stream.js'\nimport type { DataChannelOptions } from './index.js'\nimport type { ComponentLogger, CounterGroup, StreamMuxer, StreamMuxerFactory, CreateStreamOptions, MultiaddrConnection } from '@libp2p/interface'\n\nexport interface DataChannelMuxerFactoryInit {\n  /**\n   * WebRTC Peer Connection\n   */\n  peerConnection: RTCPeerConnection\n\n  /**\n   * The protocol to use\n   */\n  protocol?: string\n\n  /**\n   * Optional metrics for this data channel muxer\n   */\n  metrics?: CounterGroup\n\n  /**\n   * Options used to create data channels\n   */\n  dataChannelOptions?: DataChannelOptions\n}\n\nexport interface DataChannelMuxerFactoryComponents {\n  logger: ComponentLogger\n}\n\nexport class DataChannelMuxerFactory implements StreamMuxerFactory {\n  public readonly protocol: string\n\n  /**\n   * WebRTC Peer Connection\n   */\n  private readonly peerConnection: RTCPeerConnection\n  private readonly metrics?: CounterGroup\n  private readonly dataChannelOptions?: DataChannelOptions\n  private readonly earlyDataChannels: RTCDataChannel[]\n\n  constructor (init: DataChannelMuxerFactoryInit) {\n    this.onEarlyDataChannel = this.onEarlyDataChannel.bind(this)\n\n    this.peerConnection = init.peerConnection\n    this.metrics = init.metrics\n    this.protocol = init.protocol ?? MUXER_PROTOCOL\n    this.dataChannelOptions = init.dataChannelOptions ?? {}\n    this.peerConnection.addEventListener('datachannel', this.onEarlyDataChannel)\n    this.earlyDataChannels = []\n  }\n\n  private onEarlyDataChannel (evt: RTCDataChannelEvent): void {\n    this.earlyDataChannels.push(evt.channel)\n  }\n\n  createStreamMuxer (maConn: MultiaddrConnection): StreamMuxer {\n    this.peerConnection.removeEventListener('datachannel', this.onEarlyDataChannel)\n\n    return new DataChannelMuxer(maConn, {\n      peerConnection: this.peerConnection,\n      dataChannelOptions: this.dataChannelOptions,\n      metrics: this.metrics,\n      protocol: this.protocol,\n      earlyDataChannels: this.earlyDataChannels\n    })\n  }\n}\n\nexport interface DataChannelMuxerInit extends DataChannelMuxerFactoryInit {\n  protocol: string\n\n  /**\n   * Incoming data channels that were opened by the remote before the peer\n   * connection was established\n   */\n  earlyDataChannels: RTCDataChannel[]\n}\n\nexport interface DataChannelMuxerComponents {\n  logger: ComponentLogger\n}\n\n/**\n * A libp2p data channel stream muxer\n */\nexport class DataChannelMuxer extends AbstractStreamMuxer<WebRTCStream> implements StreamMuxer<WebRTCStream> {\n  private readonly peerConnection: RTCPeerConnection\n  private readonly dataChannelOptions: DataChannelOptions\n\n  constructor (maConn: MultiaddrConnection, init: DataChannelMuxerInit) {\n    super(maConn, {\n      ...init,\n      name: 'muxer'\n    })\n\n    this.peerConnection = init.peerConnection\n    this.protocol = init.protocol ?? MUXER_PROTOCOL\n    this.dataChannelOptions = init.dataChannelOptions ?? {}\n\n    /**\n     * Fired when a data channel has been added to the connection has been\n     * added by the remote peer.\n     *\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/datachannel_event}\n     */\n    this.peerConnection.ondatachannel = ({ channel }) => {\n      this.onDataChannel(channel)\n    }\n\n    queueMicrotask(() => {\n      if (this.status !== 'open') {\n        init.earlyDataChannels.forEach(channel => {\n          channel.close()\n        })\n        return\n      }\n\n      init.earlyDataChannels.forEach(channel => {\n        this.onDataChannel(channel)\n      })\n    })\n  }\n\n  private onDataChannel (channel: RTCDataChannel): void {\n    this.log('incoming datachannel with channel id %d, protocol %s and status %s', channel.id, channel.protocol, channel.readyState)\n\n    // 'init' channel is only used during connection establishment, it is\n    // closed by the initiator\n    if (channel.label === 'init') {\n      this.log.trace('closing init channel %d', channel.id)\n      channel.close()\n\n      return\n    }\n\n    const stream = createStream({\n      ...this.streamOptions,\n      ...this.dataChannelOptions,\n      channel,\n      direction: 'inbound',\n      log: this.log\n    })\n\n    this.onRemoteStream(stream)\n  }\n\n  async onCreateStream (options?: CreateStreamOptions): Promise<WebRTCStream> {\n    // The spec says the label MUST be an empty string: https://github.com/libp2p/specs/blob/master/webrtc/README.md#rtcdatachannel-label\n    const channel = this.peerConnection.createDataChannel('', {\n      // TODO: pre-negotiate stream protocol\n      // protocol: options?.protocol\n    })\n\n    this.log('open channel %d for protocol %s', channel.id, options?.protocol)\n\n    const stream = createStream({\n      ...options,\n      ...this.dataChannelOptions,\n      channel,\n      direction: 'outbound',\n      log: this.log\n    })\n\n    return stream\n  }\n\n  onData (): void {\n\n  }\n}\n", "import { AbstractMultiaddrConnection } from '@libp2p/utils'\nimport type { AbortOptions, MultiaddrConnection } from '@libp2p/interface'\nimport type { AbstractMultiaddrConnectionInit, SendResult } from '@libp2p/utils'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface RTCPeerConnectionMultiaddrConnectionInit extends Omit<AbstractMultiaddrConnectionInit, 'stream'> {\n  peerConnection: RTCPeerConnection\n}\n\nclass RTCPeerConnectionMultiaddrConnection extends AbstractMultiaddrConnection {\n  private peerConnection: RTCPeerConnection\n\n  constructor (init: RTCPeerConnectionMultiaddrConnectionInit) {\n    super(init)\n\n    this.peerConnection = init.peerConnection\n\n    const initialState = init.peerConnection.connectionState\n\n    this.peerConnection.onconnectionstatechange = () => {\n      this.log.trace('peer connection state change %s initial state %s', this.peerConnection.connectionState, initialState)\n\n      if (this.peerConnection.connectionState === 'disconnected' || this.peerConnection.connectionState === 'failed' || this.peerConnection.connectionState === 'closed') {\n        // nothing else to do but close the connection\n        this.onTransportClosed()\n\n        // only necessary with node-datachannel\n        // https://github.com/murat-dogan/node-datachannel/issues/366#issuecomment-3228453155\n        this.peerConnection.close()\n      }\n    }\n  }\n\n  sendData (data: Uint8ArrayList): SendResult {\n    return {\n      sentBytes: data.byteLength,\n      canSendMore: true\n    }\n  }\n\n  async sendClose (options?: AbortOptions): Promise<void> {\n    this.peerConnection.close()\n    options?.signal?.throwIfAborted()\n  }\n\n  sendReset (): void {\n    this.peerConnection.close()\n  }\n\n  sendPause (): void {\n    // TODO: readable backpressure?\n  }\n\n  sendResume (): void {\n    // TODO: readable backpressure?\n  }\n}\n\n/**\n * Convert a RTCPeerConnection into a MultiaddrConnection\n * https://github.com/libp2p/interface-transport#multiaddrconnection\n */\nexport const toMultiaddrConnection = (init: RTCPeerConnectionMultiaddrConnectionInit): MultiaddrConnection => {\n  return new RTCPeerConnectionMultiaddrConnection(init)\n}\n", "export const RTCPeerConnection = globalThis.RTCPeerConnection\nexport const RTCSessionDescription = globalThis.RTCSessionDescription\nexport const RTCIceCandidate = globalThis.RTCIceCandidate\n", "/**\n * Progress events are emitted during long running operations\n */\nexport interface ProgressEvent<T extends string = any, D = unknown> {\n  /**\n   * The event type\n   */\n  type: T\n\n  /**\n   * Context-specific event information\n   */\n  detail: D\n}\n\n/**\n * An implementation of the ProgressEvent interface, this is essentially\n * a typed `CustomEvent` with a `type` property that lets us disambiguate\n * events passed to `progress` callbacks.\n */\nexport class CustomProgressEvent<D = unknown, T extends string = any> extends Event implements ProgressEvent<T, D> {\n  public type: T\n  public detail: D\n\n  constructor (type: T, detail?: D) {\n    super(type)\n\n    this.type = type\n    // @ts-expect-error detail may be undefined\n    this.detail = detail\n  }\n}\n\n/**\n * Define an `onProgress` callback that can be invoked with `ProgressEvent`s\n *\n * @example\n *\n * ```typescript\n * type MyOperationProgressEvents =\n *   ProgressEvent<'operation:start'> |\n *   ProgressEvent<'operation:success', Result> |\n *   ProgressEvent<'operation:error', Error>\n *\n * export interface MyOperationOptions extends ProgressOptions<MyOperationProgressEvents> {\n *  // define options here\n * }\n * ```\n */\nexport interface ProgressOptions<Event extends ProgressEvent = any> {\n  onProgress?: (evt: Event) => void\n}\n", "export class WebRTCTransportError extends Error {\n  constructor (msg: string) {\n    super(`WebRTC transport error: ${msg}`)\n    this.name = 'WebRTCTransportError'\n  }\n}\n\nexport class SDPHandshakeFailedError extends WebRTCTransportError {\n  constructor (message = 'SDP handshake failed') {\n    super(message)\n    this.name = 'SDPHandshakeFailedError'\n  }\n}\n\nexport class ConnectionClosedError extends WebRTCTransportError {\n  constructor (state: RTCPeerConnectionState, msg: string) {\n    super(`peerconnection moved to state: ${state}: ${msg}`)\n    this.name = 'WebRTC/ConnectionClosed'\n  }\n}\n\nexport class DataChannelError extends WebRTCTransportError {\n  constructor (streamLabel: string, msg: string) {\n    super(`[stream: ${streamLabel}] data channel error: ${msg}`)\n    this.name = 'WebRTC/DataChannelError'\n  }\n}\n\nexport class InappropriateMultiaddrError extends WebRTCTransportError {\n  constructor (msg: string) {\n    super(`There was a problem with the Multiaddr which was passed in: ${msg}`)\n    this.name = 'WebRTC/InappropriateMultiaddrError'\n  }\n}\n\nexport class InvalidArgumentError extends WebRTCTransportError {\n  constructor (msg: string) {\n    super(`There was a problem with a provided argument: ${msg}`)\n    this.name = 'WebRTC/InvalidArgumentError'\n  }\n}\n\nexport class InvalidFingerprintError extends WebRTCTransportError {\n  constructor (fingerprint: string, source: string) {\n    super(`Invalid fingerprint \"${fingerprint}\" within ${source}`)\n    this.name = 'WebRTC/InvalidFingerprintError'\n  }\n}\n\nexport class OperationAbortedError extends WebRTCTransportError {\n  constructor (context: string, abortReason: string) {\n    super(`Signalled to abort because (${abortReason}}) ${context}`)\n    this.name = 'WebRTC/OperationAbortedError'\n  }\n}\n\nexport class OverStreamLimitError extends WebRTCTransportError {\n  constructor (msg: string) {\n    super(msg)\n    this.name = 'WebRTC/OverStreamLimitError'\n  }\n}\n\nexport class UnimplementedError extends WebRTCTransportError {\n  constructor (methodName: string) {\n    super(`A method (${methodName}) was called though it has been intentionally left unimplemented.`)\n    this.name = 'WebRTC/UnimplementedError'\n  }\n}\n\nexport class UnsupportedHashAlgorithmError extends WebRTCTransportError {\n  constructor (algo: number) {\n    super(`unsupported hash algorithm code: ${algo} please see the codes at https://github.com/multiformats/multicodec/blob/master/table.csv `)\n    this.name = 'WebRTC/UnsupportedHashAlgorithmError'\n  }\n}\n", "import { decodeMessage, encodeMessage, enumeration, message } from 'protons-runtime'\nimport type { Codec, DecodeOptions } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Message {\n  type?: Message.Type\n  data?: string\n}\n\nexport namespace Message {\n  export enum Type {\n    SDP_OFFER = 'SDP_OFFER',\n    SDP_ANSWER = 'SDP_ANSWER',\n    ICE_CANDIDATE = 'ICE_CANDIDATE'\n  }\n\n  enum __TypeValues {\n    SDP_OFFER = 0,\n    SDP_ANSWER = 1,\n    ICE_CANDIDATE = 2\n  }\n\n  export namespace Type {\n    export const codec = (): Codec<Type> => {\n      return enumeration<Type>(__TypeValues)\n    }\n  }\n\n  let _codec: Codec<Message>\n\n  export const codec = (): Codec<Message> => {\n    if (_codec == null) {\n      _codec = message<Message>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.type != null) {\n          w.uint32(8)\n          Message.Type.codec().encode(obj.type, w)\n        }\n\n        if (obj.data != null) {\n          w.uint32(18)\n          w.string(obj.data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length, opts = {}) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.type = Message.Type.codec().decode(reader)\n              break\n            }\n            case 2: {\n              obj.data = reader.string()\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<Message>): Uint8Array => {\n    return encodeMessage(obj, Message.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList, opts?: DecodeOptions<Message>): Message => {\n    return decodeMessage(buf, Message.codec(), opts)\n  }\n}\n", "import { ConnectionFailedError, InvalidMessageError, InvalidMultiaddrError } from '@libp2p/interface'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport { CustomProgressEvent } from 'progress-events'\nimport { RTCIceCandidate } from '../webrtc/index.js'\nimport { Message } from './pb/message.js'\nimport type { WebRTCDialEvents } from './transport.js'\nimport type { RTCPeerConnection } from '../webrtc/index.js'\nimport type { AbortOptions, LoggerOptions, PeerId, Stream } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { MessageStream } from 'it-protobuf-stream'\nimport type { DeferredPromise } from 'p-defer'\nimport type { ProgressOptions } from 'progress-events'\n\nexport interface ReadCandidatesOptions extends AbortOptions, LoggerOptions, ProgressOptions<WebRTCDialEvents> {\n  direction: string\n}\n\nexport const readCandidatesUntilConnected = async (pc: RTCPeerConnection, stream: MessageStream<Message, Stream>, options: ReadCandidatesOptions): Promise<void> => {\n  try {\n    const connectedPromise = Promise.withResolvers<void>()\n    resolveOnConnected(pc, connectedPromise)\n\n    // read candidates until we are connected or we reach the end of the stream\n    while (true) {\n      // if we connect, stop trying to read from the stream\n      const message = await Promise.race([\n        connectedPromise.promise,\n        stream.read({\n          signal: options.signal\n        })\n      ])\n\n      // stream ended or we became connected\n      if (message == null) {\n        // throw if we timed out\n        options.signal?.throwIfAborted()\n\n        break\n      }\n\n      if (message.type !== Message.Type.ICE_CANDIDATE) {\n        throw new InvalidMessageError('ICE candidate message expected')\n      }\n\n      const candidateInit = JSON.parse(message.data ?? 'null')\n\n      // an empty string means this generation of candidates is complete, a null\n      // candidate means candidate gathering has finished\n      // see - https://www.w3.org/TR/webrtc/#rtcpeerconnectioniceevent\n      if (candidateInit === '' || candidateInit === null) {\n        options.onProgress?.(new CustomProgressEvent('webrtc:end-of-ice-candidates'))\n        options.log.trace('end-of-candidates received')\n\n        continue\n      }\n\n      const candidate = new RTCIceCandidate(candidateInit)\n\n      options.log.trace('%s received new ICE candidate %o', options.direction, candidateInit)\n\n      try {\n        options.onProgress?.(new CustomProgressEvent<string>('webrtc:add-ice-candidate', candidate.candidate))\n        await pc.addIceCandidate(candidate)\n      } catch (err) {\n        options.log.error('%s bad candidate received %o - %e', options.direction, candidateInit, err)\n      }\n    }\n  } catch (err) {\n    options.log.error('%s error parsing ICE candidate - %e', options.direction, err)\n\n    if (options.signal?.aborted === true && pc.connectionState !== 'connected') {\n      throw err\n    }\n  }\n}\n\nfunction resolveOnConnected (pc: RTCPeerConnection, promise: DeferredPromise<void>): void {\n  if (pc.connectionState === 'connected') {\n    promise.resolve()\n    return\n  }\n\n  pc.onconnectionstatechange = (_) => {\n    switch (pc.connectionState) {\n      case 'connected':\n        promise.resolve()\n        break\n      case 'failed':\n      case 'disconnected':\n      case 'closed':\n        promise.reject(new ConnectionFailedError(`RTCPeerConnection connection state became \"${pc.connectionState}\"`))\n        break\n      default:\n        break\n    }\n  }\n}\n\nexport function getRemotePeer (ma: Multiaddr): PeerId {\n  let remotePeer: PeerId | undefined\n\n  for (const component of ma.getComponents()) {\n    if (component.name === 'p2p') {\n      remotePeer = peerIdFromString(component.value ?? '')\n    }\n  }\n\n  if (remotePeer == null) {\n    throw new InvalidMultiaddrError('Remote peerId must be present in multiaddr')\n  }\n\n  return remotePeer\n}\n", "import { pbStream } from '@libp2p/utils'\nimport { pEvent } from 'p-event'\nimport { CustomProgressEvent } from 'progress-events'\nimport { SIGNALING_PROTOCOL } from '../constants.js'\nimport { SDPHandshakeFailedError } from '../error.js'\nimport { DataChannelMuxerFactory } from '../muxer.js'\nimport { RTCPeerConnection, RTCSessionDescription } from '../webrtc/index.js'\nimport { Message } from './pb/message.js'\nimport { splitAddr } from './transport.js'\nimport { readCandidatesUntilConnected } from './util.js'\nimport type { WebRTCDialEvents, WebRTCTransportMetrics } from './transport.js'\nimport type { DataChannelOptions } from '../index.js'\nimport type { LoggerOptions, Connection, ComponentLogger, AbortOptions } from '@libp2p/interface'\nimport type { ConnectionManager, TransportManager } from '@libp2p/interface-internal'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { ProgressOptions } from 'progress-events'\n\nexport interface IncomingStreamOptions extends AbortOptions {\n  rtcConfiguration?: RTCConfiguration\n  dataChannelOptions?: Partial<DataChannelOptions>\n}\n\nexport interface ConnectOptions extends LoggerOptions, ProgressOptions<WebRTCDialEvents> {\n  rtcConfiguration?: RTCConfiguration\n  dataChannel?: DataChannelOptions\n  multiaddr: Multiaddr\n  connectionManager: ConnectionManager\n  transportManager: TransportManager\n  dataChannelOptions?: Partial<DataChannelOptions>\n  signal?: AbortSignal\n  metrics?: WebRTCTransportMetrics\n  logger: ComponentLogger\n}\n\nexport async function initiateConnection ({ rtcConfiguration, dataChannel, signal, metrics, multiaddr: ma, connectionManager, transportManager, log, logger, onProgress }: ConnectOptions): Promise<{ remoteAddress: Multiaddr, peerConnection: globalThis.RTCPeerConnection, muxerFactory: DataChannelMuxerFactory }> {\n  const { circuitAddress, targetPeer } = splitAddr(ma)\n\n  metrics?.dialerEvents.increment({ open: true })\n\n  log.trace('dialing circuit address: %a', circuitAddress)\n\n  const connections = connectionManager.getConnections(targetPeer)\n  let connection: Connection\n\n  if (connections.length === 0) {\n    onProgress?.(new CustomProgressEvent('webrtc:dial-relay'))\n\n    // use the transport manager to open a connection. Initiating a WebRTC\n    // connection takes place in the context of a dial - if we use the\n    // connection manager instead we can end up joining our own dial context\n    connection = await transportManager.dial(circuitAddress, {\n      signal,\n      onProgress\n    })\n  } else {\n    onProgress?.(new CustomProgressEvent('webrtc:reuse-relay-connection'))\n\n    connection = connections[0]\n  }\n\n  onProgress?.(new CustomProgressEvent('webrtc:open-signaling-stream'))\n\n  const stream = await connection.newStream(SIGNALING_PROTOCOL, {\n    signal,\n    runOnLimitedConnection: true\n  })\n\n  const messageStream = pbStream(stream).pb(Message)\n  const peerConnection = new RTCPeerConnection(rtcConfiguration)\n\n  // make sure C++ peer connection is garbage collected\n  // https://github.com/murat-dogan/node-datachannel/issues/366#issuecomment-3228453155\n  peerConnection.addEventListener('connectionstatechange', () => {\n    switch (peerConnection.connectionState) {\n      case 'closed':\n        peerConnection.close()\n        break\n      default:\n        break\n    }\n  })\n\n  const muxerFactory = new DataChannelMuxerFactory({\n    // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n    peerConnection,\n    dataChannelOptions: dataChannel\n  })\n\n  try {\n    // we create the channel so that the RTCPeerConnection has a component for\n    // which to collect candidates. The label is not relevant to connection\n    // initiation but can be useful for debugging\n    const channel = peerConnection.createDataChannel('init')\n\n    // setup callback to write ICE candidates to the remote peer\n    peerConnection.onicecandidate = ({ candidate }) => {\n      if (peerConnection.connectionState === 'connected') {\n        log.trace('ignore new ice candidate as peer connection is already connected')\n        return\n      }\n\n      // a null candidate means end-of-candidates, an empty string candidate\n      // means end-of-candidates for this generation, otherwise this should\n      // be a valid candidate object\n      // see - https://www.w3.org/TR/webrtc/#rtcpeerconnectioniceevent\n      if (candidate == null || candidate?.candidate === '') {\n        log.trace('initiator detected end of ICE candidates')\n        return\n      }\n\n      const data = JSON.stringify(candidate?.toJSON() ?? null)\n\n      log.trace('initiator sending ICE candidate %o', candidate)\n\n      void messageStream.write({\n        type: Message.Type.ICE_CANDIDATE,\n        data\n      }, {\n        signal\n      })\n        .catch(err => {\n          log.error('error sending ICE candidate - %e', err)\n        })\n    }\n    peerConnection.onicecandidateerror = (event) => {\n      log.error('initiator ICE candidate error', event)\n    }\n\n    // create an offer\n    const offerSdp = await peerConnection.createOffer().catch(err => {\n      log.error('could not execute createOffer - %e', err)\n      throw new SDPHandshakeFailedError('Failed to set createOffer')\n    })\n\n    log.trace('initiator send SDP offer %s', offerSdp.sdp)\n\n    onProgress?.(new CustomProgressEvent('webrtc:send-sdp-offer'))\n\n    // write the offer to the stream\n    await messageStream.write({ type: Message.Type.SDP_OFFER, data: offerSdp.sdp }, {\n      signal\n    })\n\n    // set offer as local description\n    await peerConnection.setLocalDescription(offerSdp).catch(err => {\n      log.error('could not execute setLocalDescription - %e', err)\n      throw new SDPHandshakeFailedError('Failed to set localDescription')\n    })\n\n    onProgress?.(new CustomProgressEvent('webrtc:read-sdp-answer'))\n\n    log.trace('initiator read SDP answer')\n\n    // read answer\n    const answerMessage = await messageStream.read({\n      signal\n    })\n\n    if (answerMessage.type !== Message.Type.SDP_ANSWER) {\n      throw new SDPHandshakeFailedError('Remote should send an SDP answer')\n    }\n\n    log.trace('initiator received SDP answer %s', answerMessage.data)\n\n    const answerSdp = new RTCSessionDescription({ type: 'answer', sdp: answerMessage.data })\n    await peerConnection.setRemoteDescription(answerSdp).catch(err => {\n      log.error('could not execute setRemoteDescription - %e', err)\n      throw new SDPHandshakeFailedError('Failed to set remoteDescription')\n    })\n\n    log.trace('initiator read candidates until connected')\n\n    onProgress?.(new CustomProgressEvent('webrtc:read-ice-candidates'))\n\n    await readCandidatesUntilConnected(peerConnection, messageStream, {\n      direction: 'initiator',\n      signal,\n      log,\n      onProgress\n    })\n\n    log.trace('initiator connected')\n\n    if (channel.readyState !== 'open') {\n      log.trace('wait for init channel to open')\n      await pEvent(channel, 'open', {\n        signal\n      })\n    }\n\n    log.trace('closing init channel')\n    channel.close()\n\n    // wait for init channel to close before proceeding, otherwise the channel\n    // id can be reused before both sides have seen the channel close\n    log.trace('waiting for init channel to close')\n    await pEvent(channel, 'close', {\n      signal\n    })\n\n    onProgress?.(new CustomProgressEvent('webrtc:close-signaling-stream'))\n\n    log.trace('closing signaling channel')\n    await stream.close({\n      signal\n    })\n\n    log.trace('initiator connected to remote address %s', ma)\n\n    return {\n      remoteAddress: ma,\n      // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n      peerConnection,\n      muxerFactory\n    }\n  } catch (err: any) {\n    log.error('outgoing signaling error - %e', err)\n\n    peerConnection.close()\n    stream.abort(err)\n    throw err\n  } finally {\n    peerConnection.onicecandidate = null\n    peerConnection.onicecandidateerror = null\n  }\n}\n", "import { CODE_P2P_CIRCUIT } from '@multiformats/multiaddr'\nimport { P2P } from '@multiformats/multiaddr-matcher'\nimport { fmt, code } from '@multiformats/multiaddr-matcher/utils'\nimport { TypedEventEmitter } from 'main-event'\nimport type { PeerId, ListenerEvents, Listener, Libp2pEvents } from '@libp2p/interface'\nimport type { TransportManager } from '@libp2p/interface-internal'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { TypedEventTarget } from 'main-event'\n\nconst Circuit = fmt(P2P.matchers[0], code(CODE_P2P_CIRCUIT))\n\nexport interface WebRTCPeerListenerComponents {\n  peerId: PeerId\n  transportManager: TransportManager\n  events: TypedEventTarget<Libp2pEvents>\n}\n\nexport interface WebRTCPeerListenerInit {\n  shutdownController: AbortController\n}\n\nexport class WebRTCPeerListener extends TypedEventEmitter<ListenerEvents> implements Listener {\n  private readonly transportManager: TransportManager\n  private readonly shutdownController: AbortController\n  private readonly events: TypedEventTarget<Libp2pEvents>\n\n  constructor (components: WebRTCPeerListenerComponents, init: WebRTCPeerListenerInit) {\n    super()\n\n    this.transportManager = components.transportManager\n    this.events = components.events\n    this.shutdownController = init.shutdownController\n\n    this.onTransportListening = this.onTransportListening.bind(this)\n  }\n\n  async listen (): Promise<void> {\n    this.events.addEventListener('transport:listening', this.onTransportListening)\n  }\n\n  onTransportListening (event: CustomEvent<Listener>): void {\n    const circuitAddresses = event.detail.getAddrs()\n      .filter(ma => Circuit.exactMatch(ma))\n      .map(ma => {\n        return ma.encapsulate('/webrtc')\n      })\n\n    if (circuitAddresses.length > 0) {\n      this.safeDispatchEvent('listening')\n    }\n  }\n\n  getAddrs (): Multiaddr[] {\n    return this.transportManager\n      .getListeners()\n      .filter(l => !(l instanceof WebRTCPeerListener))\n      .map(l => l.getAddrs()\n        .filter(ma => Circuit.exactMatch(ma))\n        .map(ma => {\n          return ma.encapsulate('/webrtc')\n        })\n      )\n      .flat()\n  }\n\n  updateAnnounceAddrs (): void {\n\n  }\n\n  async close (): Promise<void> {\n    this.events.removeEventListener('transport:listening', this.onTransportListening)\n\n    this.shutdownController.abort()\n    queueMicrotask(() => {\n      this.safeDispatchEvent('close')\n    })\n  }\n}\n", "import { pbStream } from '@libp2p/utils'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { SDPHandshakeFailedError } from '../error.js'\nimport { RTCSessionDescription } from '../webrtc/index.js'\nimport { Message } from './pb/message.js'\nimport { getRemotePeer, readCandidatesUntilConnected } from './util.js'\nimport type { RTCPeerConnection } from '../webrtc/index.js'\nimport type { AbortOptions, Connection, Logger, PeerId, Stream } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface IncomingStreamOptions extends AbortOptions {\n  peerConnection: RTCPeerConnection\n  log: Logger\n}\n\nexport async function handleIncomingStream (stream: Stream, connection: Connection, { peerConnection, signal, log }: IncomingStreamOptions): Promise<{ remoteAddress: Multiaddr, remotePeer: PeerId }> {\n  log.trace('new inbound signaling stream')\n\n  const messageStream = pbStream(stream).pb(Message)\n\n  try {\n    // candidate callbacks\n    peerConnection.onicecandidate = ({ candidate }) => {\n      if (peerConnection.connectionState === 'connected') {\n        log.trace('ignore new ice candidate as peer connection is already connected')\n        return\n      }\n\n      // a null candidate means end-of-candidates, an empty string candidate\n      // means end-of-candidates for this generation, otherwise this should\n      // be a valid candidate object\n      // see - https://www.w3.org/TR/webrtc/#rtcpeerconnectioniceevent\n      if (candidate == null || candidate?.candidate === '') {\n        log.trace('recipient detected end of ICE candidates')\n        return\n      }\n\n      const data = JSON.stringify(candidate?.toJSON() ?? null)\n\n      log.trace('recipient sending ICE candidate %s', data)\n\n      messageStream.write({\n        type: Message.Type.ICE_CANDIDATE,\n        data\n      }, {\n        signal\n      })\n        .catch(err => {\n          log.error('error sending ICE candidate - %e', err)\n        })\n    }\n\n    log.trace('recipient read SDP offer')\n\n    // read an SDP offer\n    const pbOffer = await messageStream.read({\n      signal\n    })\n\n    if (pbOffer.type !== Message.Type.SDP_OFFER) {\n      throw new SDPHandshakeFailedError(`expected message type SDP_OFFER, received: ${pbOffer.type ?? 'undefined'} `)\n    }\n\n    log.trace('recipient received SDP offer %s', pbOffer.data)\n\n    const offer = new RTCSessionDescription({\n      type: 'offer',\n      sdp: pbOffer.data\n    })\n\n    await peerConnection.setRemoteDescription(offer).catch(err => {\n      log.error('could not execute setRemoteDescription - %e', err)\n      throw new SDPHandshakeFailedError('Failed to set remoteDescription')\n    })\n\n    // create and write an SDP answer\n    const answer = await peerConnection.createAnswer().catch(err => {\n      log.error('could not execute createAnswer - %e', err)\n      throw new SDPHandshakeFailedError('Failed to create answer')\n    })\n\n    log.trace('recipient send SDP answer %s', answer.sdp)\n\n    // write the answer to the remote\n    await messageStream.write({ type: Message.Type.SDP_ANSWER, data: answer.sdp }, {\n      signal\n    })\n\n    await peerConnection.setLocalDescription(answer).catch(err => {\n      log.error('could not execute setLocalDescription - %e', err)\n      throw new SDPHandshakeFailedError('Failed to set localDescription')\n    })\n\n    log.trace('recipient read candidates until connected')\n\n    // wait until candidates are connected\n    await readCandidatesUntilConnected(peerConnection, messageStream, {\n      direction: 'recipient',\n      signal,\n      log\n    })\n  } catch (err: any) {\n    if (peerConnection.connectionState !== 'connected') {\n      log.error('error while handling signaling stream from peer %a - %e', connection.remoteAddr, err)\n\n      peerConnection.close()\n      throw err\n    } else {\n      log('error while handling signaling stream from peer %a, ignoring as the RTCPeerConnection is already connected', connection.remoteAddr, err)\n    }\n  }\n\n  const remotePeer = getRemotePeer(connection.remoteAddr)\n  const remoteAddress = multiaddr(`/webrtc/p2p/${remotePeer}`)\n\n  log.trace('recipient connected to remote address %s', remoteAddress)\n\n  return {\n    remoteAddress,\n    remotePeer\n  }\n}\n", "import { InvalidParametersError, serviceCapabilities, serviceDependencies, transportSymbol } from '@libp2p/interface'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { WebRTC } from '@multiformats/multiaddr-matcher'\nimport { setMaxListeners } from 'main-event'\nimport { SIGNALING_PROTOCOL } from '../constants.js'\nimport { DataChannelMuxerFactory } from '../muxer.js'\nimport { toMultiaddrConnection } from '../rtcpeerconnection-to-conn.ts'\nimport { getRtcConfiguration } from '../util.js'\nimport { RTCPeerConnection } from '../webrtc/index.js'\nimport { initiateConnection } from './initiate-connection.js'\nimport { WebRTCPeerListener } from './listener.js'\nimport { handleIncomingStream } from './signaling-stream-handler.js'\nimport { getRemotePeer } from './util.ts'\nimport type { DataChannelOptions } from '../index.js'\nimport type { OutboundConnectionUpgradeEvents, CreateListenerOptions, DialTransportOptions, Transport, Listener, Upgrader, ComponentLogger, Logger, Connection, PeerId, CounterGroup, Metrics, Startable, OpenConnectionProgressEvents, Libp2pEvents, MultiaddrConnection, Stream } from '@libp2p/interface'\nimport type { Registrar, ConnectionManager, TransportManager } from '@libp2p/interface-internal'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { TypedEventTarget } from 'main-event'\nimport type { ProgressEvent } from 'progress-events'\n\nexport interface WebRTCTransportInit {\n  /**\n   * Add additional configuration to any RTCPeerConnections that are created.\n   *\n   * This could be extra STUN/TURN servers, certificate, etc.\n   */\n  rtcConfiguration?: RTCConfiguration | (() => RTCConfiguration | Promise<RTCConfiguration>)\n\n  /**\n   * Any options here will be applied to any RTCDataChannels that are opened.\n   */\n  dataChannel?: DataChannelOptions\n}\n\nexport interface WebRTCTransportComponents {\n  peerId: PeerId\n  registrar: Registrar\n  upgrader: Upgrader\n  transportManager: TransportManager\n  connectionManager: ConnectionManager\n  metrics?: Metrics\n  logger: ComponentLogger\n  events: TypedEventTarget<Libp2pEvents>\n}\n\nexport interface WebRTCTransportMetrics {\n  dialerEvents: CounterGroup\n  listenerEvents: CounterGroup\n}\n\nexport type WebRTCDialEvents =\n  OutboundConnectionUpgradeEvents |\n  OpenConnectionProgressEvents |\n  ProgressEvent<'webrtc:dial-relay'> |\n  ProgressEvent<'webrtc:reuse-relay-connection'> |\n  ProgressEvent<'webrtc:open-signaling-stream'> |\n  ProgressEvent<'webrtc:send-sdp-offer'> |\n  ProgressEvent<'webrtc:read-sdp-answer'> |\n  ProgressEvent<'webrtc:read-ice-candidates'> |\n  ProgressEvent<'webrtc:add-ice-candidate', string> |\n  ProgressEvent<'webrtc:end-of-ice-candidates'> |\n  ProgressEvent<'webrtc:close-signaling-stream'>\n\nexport class WebRTCTransport implements Transport<WebRTCDialEvents>, Startable {\n  private readonly log: Logger\n  private _started = false\n  private readonly metrics?: WebRTCTransportMetrics\n  private readonly shutdownController: AbortController\n\n  constructor (\n    private readonly components: WebRTCTransportComponents,\n    private readonly init: WebRTCTransportInit = {}\n  ) {\n    this.log = components.logger.forComponent('libp2p:webrtc')\n    this.shutdownController = new AbortController()\n    setMaxListeners(Infinity, this.shutdownController.signal)\n\n    if (components.metrics != null) {\n      this.metrics = {\n        dialerEvents: components.metrics.registerCounterGroup('libp2p_webrtc_dialer_events_total', {\n          label: 'event',\n          help: 'Total count of WebRTC dialer events by type'\n        }),\n        listenerEvents: components.metrics.registerCounterGroup('libp2p_webrtc_listener_events_total', {\n          label: 'event',\n          help: 'Total count of WebRTC listener events by type'\n        })\n      }\n    }\n  }\n\n  readonly [transportSymbol] = true\n\n  readonly [Symbol.toStringTag] = '@libp2p/webrtc'\n\n  readonly [serviceCapabilities]: string[] = [\n    '@libp2p/transport'\n  ]\n\n  readonly [serviceDependencies]: string[] = [\n    '@libp2p/identify',\n    '@libp2p/circuit-relay-v2-transport'\n  ]\n\n  isStarted (): boolean {\n    return this._started\n  }\n\n  async start (): Promise<void> {\n    await this.components.registrar.handle(SIGNALING_PROTOCOL, (stream: Stream, connection: Connection) => {\n      // ensure we don't try to upgrade forever\n      const signal = this.components.upgrader.createInboundAbortSignal(this.shutdownController.signal)\n\n      this._onProtocol(stream, connection, signal)\n        .catch(err => {\n          this.log.error('failed to handle incoming connect from %p - %e', connection.remotePeer, err)\n        })\n        .finally(() => {\n          signal.clear()\n        })\n    }, {\n      runOnLimitedConnection: true\n    })\n    this._started = true\n  }\n\n  async stop (): Promise<void> {\n    await this.components.registrar.unhandle(SIGNALING_PROTOCOL)\n    this._started = false\n  }\n\n  createListener (options: CreateListenerOptions): Listener {\n    return new WebRTCPeerListener(this.components, {\n      shutdownController: this.shutdownController\n    })\n  }\n\n  /**\n   * Filter check for all Multiaddrs that this transport can listen on\n   */\n  listenFilter (multiaddrs: Multiaddr[]): Multiaddr[] {\n    return multiaddrs.filter(WebRTC.exactMatch)\n  }\n\n  /**\n   * Filter check for all Multiaddrs that this transport can dial\n   */\n  dialFilter (multiaddrs: Multiaddr[]): Multiaddr[] {\n    return this.listenFilter(multiaddrs)\n  }\n\n  /*\n   * dial connects to a remote via the circuit relay or any other protocol\n   * and proceeds to upgrade to a webrtc connection.\n   * multiaddr of the form: <multiaddr>/webrtc/p2p/<destination-peer>\n   * For a circuit relay, this will be of the form\n   * <relay address>/p2p/<relay-peer>/p2p-circuit/webrtc/p2p/<destination-peer>\n  */\n  async dial (ma: Multiaddr, options: DialTransportOptions<WebRTCDialEvents>): Promise<Connection> {\n    this.log.trace('dialing address: %a', ma)\n\n    const { remoteAddress, peerConnection, muxerFactory } = await initiateConnection({\n      rtcConfiguration: await getRtcConfiguration(this.init.rtcConfiguration),\n      dataChannel: this.init.dataChannel,\n      multiaddr: ma,\n      dataChannelOptions: this.init.dataChannel,\n      signal: options.signal,\n      connectionManager: this.components.connectionManager,\n      transportManager: this.components.transportManager,\n      log: this.log,\n      logger: this.components.logger,\n      onProgress: options.onProgress\n    })\n\n    const webRTCConn = toMultiaddrConnection({\n      peerConnection,\n      remoteAddr: remoteAddress,\n      metrics: this.metrics?.dialerEvents,\n      direction: 'outbound',\n      log: this.components.logger.forComponent('libp2p:webrtc:connection')\n    })\n\n    const connection = await options.upgrader.upgradeOutbound(webRTCConn, {\n      skipProtection: true,\n      skipEncryption: true,\n      remotePeer: getRemotePeer(ma),\n      muxerFactory,\n      onProgress: options.onProgress,\n      signal: options.signal\n    })\n\n    // close the connection on shut down\n    this._closeOnShutdown(peerConnection, webRTCConn)\n\n    return connection\n  }\n\n  async _onProtocol (stream: Stream, connection: Connection, signal: AbortSignal): Promise<void> {\n    const peerConnection = new RTCPeerConnection(await getRtcConfiguration(this.init.rtcConfiguration))\n\n    // make sure C++ peer connection is garbage collected\n    // https://github.com/murat-dogan/node-datachannel/issues/366#issuecomment-3228453155\n    peerConnection.addEventListener('connectionstatechange', () => {\n      switch (peerConnection.connectionState) {\n        case 'closed':\n          peerConnection.close()\n          break\n        default:\n          break\n      }\n    })\n    const muxerFactory = new DataChannelMuxerFactory({\n      // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n      peerConnection,\n      dataChannelOptions: this.init.dataChannel\n    })\n\n    try {\n      const { remoteAddress, remotePeer } = await handleIncomingStream(stream, connection, {\n        peerConnection,\n        signal,\n        log: this.log\n      })\n\n      // close the stream if SDP messages have been exchanged successfully\n      await stream.close({\n        signal\n      })\n\n      const webRTCConn = toMultiaddrConnection({\n        // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n        peerConnection,\n        remoteAddr: remoteAddress,\n        metrics: this.metrics?.listenerEvents,\n        direction: 'inbound',\n        log: this.components.logger.forComponent('libp2p:webrtc:connection')\n      })\n\n      await this.components.upgrader.upgradeInbound(webRTCConn, {\n        skipEncryption: true,\n        skipProtection: true,\n        remotePeer,\n        muxerFactory,\n        signal\n      })\n\n      // close the connection on shut down\n      // @ts-expect-error https://github.com/murat-dogan/node-datachannel/pull/370\n      this._closeOnShutdown(peerConnection, webRTCConn)\n    } catch (err: any) {\n      this.log.error('incoming signaling error - %e', err)\n\n      peerConnection.close()\n      stream.abort(err)\n      throw err\n    }\n  }\n\n  private _closeOnShutdown (pc: globalThis.RTCPeerConnection, webRTCConn: MultiaddrConnection): void {\n    // close the connection on shut down\n    const shutDownListener = (): void => {\n      webRTCConn.close()\n        .catch(err => {\n          this.log.error('could not close WebRTCMultiaddrConnection - %e', err)\n        })\n    }\n\n    this.shutdownController.signal.addEventListener('abort', shutDownListener)\n\n    pc.addEventListener('close', () => {\n      this.shutdownController.signal.removeEventListener('abort', shutDownListener)\n    })\n  }\n}\n\nexport function splitAddr (ma: Multiaddr): { circuitAddress: Multiaddr, targetPeer: PeerId } {\n  const target = ma.getComponents()\n    .filter(({ name }) => name === 'p2p')\n    .map(({ value }) => value)\n    .pop()\n\n  if (target == null) {\n    throw new InvalidParametersError('Destination peer id was missing')\n  }\n\n  const circuitAddress = multiaddr(\n    ma.getComponents()\n      .filter(({ name }) => name !== 'webrtc')\n  )\n\n  return { circuitAddress, targetPeer: peerIdFromString(target) }\n}\n", "/*!\n * MIT License\n * \n * Copyright (c) Peculiar Ventures. All rights reserved.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\nimport 'reflect-metadata';\nimport { AsnConvert, OctetString, AsnUtf8StringConverter } from '@peculiar/asn1-schema';\nimport * as asn1X509 from '@peculiar/asn1-x509';\nimport { AlgorithmIdentifier, Extension as Extension$1, Name as Name$1, RelativeDistinguishedName, AttributeTypeAndValue, SubjectPublicKeyInfo, BasicConstraints, id_ce_basicConstraints, KeyUsage, id_ce_keyUsage, Attribute as Attribute$1, Version, Extensions, Certificate, id_ce_invalidityDate, InvalidityDate, id_ce_cRLReasons, CRLReason, RevokedCertificate, Time, CertificateList } from '@peculiar/asn1-x509';\nimport { BufferSourceConverter, isEqual, Convert, combine } from 'pvtsutils';\nimport { __decorate, __classPrivateFieldGet, __classPrivateFieldSet } from 'tslib';\nimport * as asn1Cms from '@peculiar/asn1-cms';\nimport * as asn1Ecc from '@peculiar/asn1-ecc';\nimport { id_ecPublicKey, ECDSASigValue } from '@peculiar/asn1-ecc';\nimport * as asn1Rsa from '@peculiar/asn1-rsa';\nimport { id_RSASSA_PSS, id_rsaEncryption, RSAPublicKey, id_sha512, id_sha384, id_sha256, id_sha1 } from '@peculiar/asn1-rsa';\nimport { container, injectable } from 'tsyringe';\nimport * as asnPkcs9 from '@peculiar/asn1-pkcs9';\nimport { id_pkcs9_at_extensionRequest } from '@peculiar/asn1-pkcs9';\nimport { CertificationRequest, CertificationRequestInfo } from '@peculiar/asn1-csr';\n\nconst diAlgorithm = \"crypto.algorithm\";\nclass AlgorithmProvider {\n    getAlgorithms() {\n        return container.resolveAll(diAlgorithm);\n    }\n    toAsnAlgorithm(alg) {\n        ({ ...alg });\n        for (const algorithm of this.getAlgorithms()) {\n            const res = algorithm.toAsnAlgorithm(alg);\n            if (res) {\n                return res;\n            }\n        }\n        if (/^[0-9.]+$/.test(alg.name)) {\n            const res = new AlgorithmIdentifier({\n                algorithm: alg.name,\n            });\n            if (\"parameters\" in alg) {\n                const unknown = alg;\n                res.parameters = unknown.parameters;\n            }\n            return res;\n        }\n        throw new Error(\"Cannot convert WebCrypto algorithm to ASN.1 algorithm\");\n    }\n    toWebAlgorithm(alg) {\n        for (const algorithm of this.getAlgorithms()) {\n            const res = algorithm.toWebAlgorithm(alg);\n            if (res) {\n                return res;\n            }\n        }\n        const unknown = {\n            name: alg.algorithm,\n            parameters: alg.parameters,\n        };\n        return unknown;\n    }\n}\nconst diAlgorithmProvider = \"crypto.algorithmProvider\";\ncontainer.registerSingleton(diAlgorithmProvider, AlgorithmProvider);\n\nvar EcAlgorithm_1;\nconst idVersionOne = \"1.3.36.3.3.2.8.1.1\";\nconst idBrainpoolP160r1 = `${idVersionOne}.1`;\nconst idBrainpoolP160t1 = `${idVersionOne}.2`;\nconst idBrainpoolP192r1 = `${idVersionOne}.3`;\nconst idBrainpoolP192t1 = `${idVersionOne}.4`;\nconst idBrainpoolP224r1 = `${idVersionOne}.5`;\nconst idBrainpoolP224t1 = `${idVersionOne}.6`;\nconst idBrainpoolP256r1 = `${idVersionOne}.7`;\nconst idBrainpoolP256t1 = `${idVersionOne}.8`;\nconst idBrainpoolP320r1 = `${idVersionOne}.9`;\nconst idBrainpoolP320t1 = `${idVersionOne}.10`;\nconst idBrainpoolP384r1 = `${idVersionOne}.11`;\nconst idBrainpoolP384t1 = `${idVersionOne}.12`;\nconst idBrainpoolP512r1 = `${idVersionOne}.13`;\nconst idBrainpoolP512t1 = `${idVersionOne}.14`;\nconst brainpoolP160r1 = \"brainpoolP160r1\";\nconst brainpoolP160t1 = \"brainpoolP160t1\";\nconst brainpoolP192r1 = \"brainpoolP192r1\";\nconst brainpoolP192t1 = \"brainpoolP192t1\";\nconst brainpoolP224r1 = \"brainpoolP224r1\";\nconst brainpoolP224t1 = \"brainpoolP224t1\";\nconst brainpoolP256r1 = \"brainpoolP256r1\";\nconst brainpoolP256t1 = \"brainpoolP256t1\";\nconst brainpoolP320r1 = \"brainpoolP320r1\";\nconst brainpoolP320t1 = \"brainpoolP320t1\";\nconst brainpoolP384r1 = \"brainpoolP384r1\";\nconst brainpoolP384t1 = \"brainpoolP384t1\";\nconst brainpoolP512r1 = \"brainpoolP512r1\";\nconst brainpoolP512t1 = \"brainpoolP512t1\";\nconst ECDSA = \"ECDSA\";\nlet EcAlgorithm = EcAlgorithm_1 = class EcAlgorithm {\n    toAsnAlgorithm(alg) {\n        switch (alg.name.toLowerCase()) {\n            case ECDSA.toLowerCase():\n                if (\"hash\" in alg) {\n                    const hash = typeof alg.hash === \"string\" ? alg.hash : alg.hash.name;\n                    switch (hash.toLowerCase()) {\n                        case \"sha-1\":\n                            return asn1Ecc.ecdsaWithSHA1;\n                        case \"sha-256\":\n                            return asn1Ecc.ecdsaWithSHA256;\n                        case \"sha-384\":\n                            return asn1Ecc.ecdsaWithSHA384;\n                        case \"sha-512\":\n                            return asn1Ecc.ecdsaWithSHA512;\n                    }\n                }\n                else if (\"namedCurve\" in alg) {\n                    let parameters = \"\";\n                    switch (alg.namedCurve) {\n                        case \"P-256\":\n                            parameters = asn1Ecc.id_secp256r1;\n                            break;\n                        case \"K-256\":\n                            parameters = EcAlgorithm_1.SECP256K1;\n                            break;\n                        case \"P-384\":\n                            parameters = asn1Ecc.id_secp384r1;\n                            break;\n                        case \"P-521\":\n                            parameters = asn1Ecc.id_secp521r1;\n                            break;\n                        case brainpoolP160r1:\n                            parameters = idBrainpoolP160r1;\n                            break;\n                        case brainpoolP160t1:\n                            parameters = idBrainpoolP160t1;\n                            break;\n                        case brainpoolP192r1:\n                            parameters = idBrainpoolP192r1;\n                            break;\n                        case brainpoolP192t1:\n                            parameters = idBrainpoolP192t1;\n                            break;\n                        case brainpoolP224r1:\n                            parameters = idBrainpoolP224r1;\n                            break;\n                        case brainpoolP224t1:\n                            parameters = idBrainpoolP224t1;\n                            break;\n                        case brainpoolP256r1:\n                            parameters = idBrainpoolP256r1;\n                            break;\n                        case brainpoolP256t1:\n                            parameters = idBrainpoolP256t1;\n                            break;\n                        case brainpoolP320r1:\n                            parameters = idBrainpoolP320r1;\n                            break;\n                        case brainpoolP320t1:\n                            parameters = idBrainpoolP320t1;\n                            break;\n                        case brainpoolP384r1:\n                            parameters = idBrainpoolP384r1;\n                            break;\n                        case brainpoolP384t1:\n                            parameters = idBrainpoolP384t1;\n                            break;\n                        case brainpoolP512r1:\n                            parameters = idBrainpoolP512r1;\n                            break;\n                        case brainpoolP512t1:\n                            parameters = idBrainpoolP512t1;\n                            break;\n                    }\n                    if (parameters) {\n                        return new AlgorithmIdentifier({\n                            algorithm: asn1Ecc.id_ecPublicKey,\n                            parameters: AsnConvert.serialize(new asn1Ecc.ECParameters({ namedCurve: parameters })),\n                        });\n                    }\n                }\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case asn1Ecc.id_ecdsaWithSHA1:\n                return { name: ECDSA, hash: { name: \"SHA-1\" } };\n            case asn1Ecc.id_ecdsaWithSHA256:\n                return { name: ECDSA, hash: { name: \"SHA-256\" } };\n            case asn1Ecc.id_ecdsaWithSHA384:\n                return { name: ECDSA, hash: { name: \"SHA-384\" } };\n            case asn1Ecc.id_ecdsaWithSHA512:\n                return { name: ECDSA, hash: { name: \"SHA-512\" } };\n            case asn1Ecc.id_ecPublicKey: {\n                if (!alg.parameters) {\n                    throw new TypeError(\"Cannot get required parameters from EC algorithm\");\n                }\n                const parameters = AsnConvert.parse(alg.parameters, asn1Ecc.ECParameters);\n                switch (parameters.namedCurve) {\n                    case asn1Ecc.id_secp256r1:\n                        return { name: ECDSA, namedCurve: \"P-256\" };\n                    case EcAlgorithm_1.SECP256K1:\n                        return { name: ECDSA, namedCurve: \"K-256\" };\n                    case asn1Ecc.id_secp384r1:\n                        return { name: ECDSA, namedCurve: \"P-384\" };\n                    case asn1Ecc.id_secp521r1:\n                        return { name: ECDSA, namedCurve: \"P-521\" };\n                    case idBrainpoolP160r1:\n                        return { name: ECDSA, namedCurve: brainpoolP160r1 };\n                    case idBrainpoolP160t1:\n                        return { name: ECDSA, namedCurve: brainpoolP160t1 };\n                    case idBrainpoolP192r1:\n                        return { name: ECDSA, namedCurve: brainpoolP192r1 };\n                    case idBrainpoolP192t1:\n                        return { name: ECDSA, namedCurve: brainpoolP192t1 };\n                    case idBrainpoolP224r1:\n                        return { name: ECDSA, namedCurve: brainpoolP224r1 };\n                    case idBrainpoolP224t1:\n                        return { name: ECDSA, namedCurve: brainpoolP224t1 };\n                    case idBrainpoolP256r1:\n                        return { name: ECDSA, namedCurve: brainpoolP256r1 };\n                    case idBrainpoolP256t1:\n                        return { name: ECDSA, namedCurve: brainpoolP256t1 };\n                    case idBrainpoolP320r1:\n                        return { name: ECDSA, namedCurve: brainpoolP320r1 };\n                    case idBrainpoolP320t1:\n                        return { name: ECDSA, namedCurve: brainpoolP320t1 };\n                    case idBrainpoolP384r1:\n                        return { name: ECDSA, namedCurve: brainpoolP384r1 };\n                    case idBrainpoolP384t1:\n                        return { name: ECDSA, namedCurve: brainpoolP384t1 };\n                    case idBrainpoolP512r1:\n                        return { name: ECDSA, namedCurve: brainpoolP512r1 };\n                    case idBrainpoolP512t1:\n                        return { name: ECDSA, namedCurve: brainpoolP512t1 };\n                }\n            }\n        }\n        return null;\n    }\n};\nEcAlgorithm.SECP256K1 = \"1.3.132.0.10\";\nEcAlgorithm = EcAlgorithm_1 = __decorate([\n    injectable()\n], EcAlgorithm);\ncontainer.registerSingleton(diAlgorithm, EcAlgorithm);\n\nconst NAME = Symbol(\"name\");\nconst VALUE = Symbol(\"value\");\nclass TextObject {\n    constructor(name, items = {}, value = \"\") {\n        this[NAME] = name;\n        this[VALUE] = value;\n        for (const key in items) {\n            this[key] = items[key];\n        }\n    }\n}\nTextObject.NAME = NAME;\nTextObject.VALUE = VALUE;\nclass DefaultAlgorithmSerializer {\n    static toTextObject(alg) {\n        const obj = new TextObject(\"Algorithm Identifier\", {}, OidSerializer.toString(alg.algorithm));\n        if (alg.parameters) {\n            switch (alg.algorithm) {\n                case asn1Ecc.id_ecPublicKey: {\n                    const ecAlg = new EcAlgorithm().toWebAlgorithm(alg);\n                    if (ecAlg && \"namedCurve\" in ecAlg) {\n                        obj[\"Named Curve\"] = ecAlg.namedCurve;\n                    }\n                    else {\n                        obj[\"Parameters\"] = alg.parameters;\n                    }\n                    break;\n                }\n                default:\n                    obj[\"Parameters\"] = alg.parameters;\n            }\n        }\n        return obj;\n    }\n}\nclass OidSerializer {\n    static toString(oid) {\n        const name = this.items[oid];\n        if (name) {\n            return name;\n        }\n        return oid;\n    }\n}\nOidSerializer.items = {\n    [asn1Rsa.id_sha1]: \"sha1\",\n    [asn1Rsa.id_sha224]: \"sha224\",\n    [asn1Rsa.id_sha256]: \"sha256\",\n    [asn1Rsa.id_sha384]: \"sha384\",\n    [asn1Rsa.id_sha512]: \"sha512\",\n    [asn1Rsa.id_rsaEncryption]: \"rsaEncryption\",\n    [asn1Rsa.id_sha1WithRSAEncryption]: \"sha1WithRSAEncryption\",\n    [asn1Rsa.id_sha224WithRSAEncryption]: \"sha224WithRSAEncryption\",\n    [asn1Rsa.id_sha256WithRSAEncryption]: \"sha256WithRSAEncryption\",\n    [asn1Rsa.id_sha384WithRSAEncryption]: \"sha384WithRSAEncryption\",\n    [asn1Rsa.id_sha512WithRSAEncryption]: \"sha512WithRSAEncryption\",\n    [asn1Ecc.id_ecPublicKey]: \"ecPublicKey\",\n    [asn1Ecc.id_ecdsaWithSHA1]: \"ecdsaWithSHA1\",\n    [asn1Ecc.id_ecdsaWithSHA224]: \"ecdsaWithSHA224\",\n    [asn1Ecc.id_ecdsaWithSHA256]: \"ecdsaWithSHA256\",\n    [asn1Ecc.id_ecdsaWithSHA384]: \"ecdsaWithSHA384\",\n    [asn1Ecc.id_ecdsaWithSHA512]: \"ecdsaWithSHA512\",\n    [asn1X509.id_kp_serverAuth]: \"TLS WWW server authentication\",\n    [asn1X509.id_kp_clientAuth]: \"TLS WWW client authentication\",\n    [asn1X509.id_kp_codeSigning]: \"Code Signing\",\n    [asn1X509.id_kp_emailProtection]: \"E-mail Protection\",\n    [asn1X509.id_kp_timeStamping]: \"Time Stamping\",\n    [asn1X509.id_kp_OCSPSigning]: \"OCSP Signing\",\n    [asn1Cms.id_signedData]: \"Signed Data\",\n};\nclass TextConverter {\n    static serialize(obj) {\n        return this.serializeObj(obj).join(\"\\n\");\n    }\n    static pad(deep = 0) {\n        return \"\".padStart(2 * deep, \" \");\n    }\n    static serializeObj(obj, deep = 0) {\n        const res = [];\n        let pad = this.pad(deep++);\n        let value = \"\";\n        const objValue = obj[TextObject.VALUE];\n        if (objValue) {\n            value = ` ${objValue}`;\n        }\n        res.push(`${pad}${obj[TextObject.NAME]}:${value}`);\n        pad = this.pad(deep);\n        for (const key in obj) {\n            if (typeof key === \"symbol\") {\n                continue;\n            }\n            const value = obj[key];\n            const keyValue = key ? `${key}: ` : \"\";\n            if (typeof value === \"string\" ||\n                typeof value === \"number\" ||\n                typeof value === \"boolean\") {\n                res.push(`${pad}${keyValue}${value}`);\n            }\n            else if (value instanceof Date) {\n                res.push(`${pad}${keyValue}${value.toUTCString()}`);\n            }\n            else if (Array.isArray(value)) {\n                for (const obj of value) {\n                    obj[TextObject.NAME] = key;\n                    res.push(...this.serializeObj(obj, deep));\n                }\n            }\n            else if (value instanceof TextObject) {\n                value[TextObject.NAME] = key;\n                res.push(...this.serializeObj(value, deep));\n            }\n            else if (BufferSourceConverter.isBufferSource(value)) {\n                if (key) {\n                    res.push(`${pad}${keyValue}`);\n                    res.push(...this.serializeBufferSource(value, deep + 1));\n                }\n                else {\n                    res.push(...this.serializeBufferSource(value, deep));\n                }\n            }\n            else if (\"toTextObject\" in value) {\n                const obj = value.toTextObject();\n                obj[TextObject.NAME] = key;\n                res.push(...this.serializeObj(obj, deep));\n            }\n            else {\n                throw new TypeError(\"Cannot serialize data in text format. Unsupported type.\");\n            }\n        }\n        return res;\n    }\n    static serializeBufferSource(buffer, deep = 0) {\n        const pad = this.pad(deep);\n        const view = BufferSourceConverter.toUint8Array(buffer);\n        const res = [];\n        for (let i = 0; i < view.length;) {\n            const row = [];\n            for (let j = 0; j < 16 && i < view.length; j++) {\n                if (j === 8) {\n                    row.push(\"\");\n                }\n                const hex = view[i++].toString(16).padStart(2, \"0\");\n                row.push(hex);\n            }\n            res.push(`${pad}${row.join(\" \")}`);\n        }\n        return res;\n    }\n    static serializeAlgorithm(alg) {\n        return this.algorithmSerializer.toTextObject(alg);\n    }\n}\nTextConverter.oidSerializer = OidSerializer;\nTextConverter.algorithmSerializer = DefaultAlgorithmSerializer;\n\nvar _AsnData_rawData;\nclass AsnData {\n    get rawData() {\n        if (!__classPrivateFieldGet(this, _AsnData_rawData, \"f\")) {\n            __classPrivateFieldSet(this, _AsnData_rawData, AsnConvert.serialize(this.asn), \"f\");\n        }\n        return __classPrivateFieldGet(this, _AsnData_rawData, \"f\");\n    }\n    constructor(...args) {\n        _AsnData_rawData.set(this, void 0);\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            this.asn = AsnConvert.parse(args[0], args[1]);\n            __classPrivateFieldSet(this, _AsnData_rawData, BufferSourceConverter.toArrayBuffer(args[0]), \"f\");\n            this.onInit(this.asn);\n        }\n        else {\n            this.asn = args[0];\n            this.onInit(this.asn);\n        }\n    }\n    equal(data) {\n        if (data instanceof AsnData) {\n            return isEqual(data.rawData, this.rawData);\n        }\n        return false;\n    }\n    toString(format = \"text\") {\n        switch (format) {\n            case \"asn\":\n                return AsnConvert.toString(this.rawData);\n            case \"text\":\n                return TextConverter.serialize(this.toTextObject());\n            case \"hex\":\n                return Convert.ToHex(this.rawData);\n            case \"base64\":\n                return Convert.ToBase64(this.rawData);\n            case \"base64url\":\n                return Convert.ToBase64Url(this.rawData);\n            default:\n                throw TypeError(\"Argument 'format' is unsupported value\");\n        }\n    }\n    getTextName() {\n        const constructor = this.constructor;\n        return constructor.NAME;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        obj[\"\"] = this.rawData;\n        return obj;\n    }\n    toTextObjectEmpty(value) {\n        return new TextObject(this.getTextName(), {}, value);\n    }\n}\n_AsnData_rawData = new WeakMap();\nAsnData.NAME = \"ASN\";\n\nclass Extension extends AsnData {\n    constructor(...args) {\n        let raw;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\n        }\n        else {\n            raw = AsnConvert.serialize(new Extension$1({\n                extnID: args[0],\n                critical: args[1],\n                extnValue: new OctetString(BufferSourceConverter.toArrayBuffer(args[2])),\n            }));\n        }\n        super(raw, Extension$1);\n    }\n    onInit(asn) {\n        this.type = asn.extnID;\n        this.critical = asn.critical;\n        this.value = asn.extnValue.buffer;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"\"] = this.value;\n        return obj;\n    }\n    toTextObjectWithoutValue() {\n        const obj = this.toTextObjectEmpty(this.critical ? \"critical\" : undefined);\n        if (obj[TextObject.NAME] === Extension.NAME) {\n            obj[TextObject.NAME] = OidSerializer.toString(this.type);\n        }\n        return obj;\n    }\n}\n\nvar _a;\nclass CryptoProvider {\n    static isCryptoKeyPair(data) {\n        return data && data.privateKey && data.publicKey;\n    }\n    static isCryptoKey(data) {\n        return data && data.usages && data.type && data.algorithm && data.extractable !== undefined;\n    }\n    constructor() {\n        this.items = new Map();\n        this[_a] = \"CryptoProvider\";\n        if (typeof self !== \"undefined\" && typeof crypto !== \"undefined\") {\n            this.set(CryptoProvider.DEFAULT, crypto);\n        }\n        else if (typeof global !== \"undefined\" && global.crypto && global.crypto.subtle) {\n            this.set(CryptoProvider.DEFAULT, global.crypto);\n        }\n    }\n    clear() {\n        this.items.clear();\n    }\n    delete(key) {\n        return this.items.delete(key);\n    }\n    forEach(callbackfn, thisArg) {\n        return this.items.forEach(callbackfn, thisArg);\n    }\n    has(key) {\n        return this.items.has(key);\n    }\n    get size() {\n        return this.items.size;\n    }\n    entries() {\n        return this.items.entries();\n    }\n    keys() {\n        return this.items.keys();\n    }\n    values() {\n        return this.items.values();\n    }\n    [Symbol.iterator]() {\n        return this.items[Symbol.iterator]();\n    }\n    get(key = CryptoProvider.DEFAULT) {\n        const crypto = this.items.get(key.toLowerCase());\n        if (!crypto) {\n            throw new Error(`Cannot get Crypto by name '${key}'`);\n        }\n        return crypto;\n    }\n    set(key, value) {\n        if (typeof key === \"string\") {\n            if (!value) {\n                throw new TypeError(\"Argument 'value' is required\");\n            }\n            this.items.set(key.toLowerCase(), value);\n        }\n        else {\n            this.items.set(CryptoProvider.DEFAULT, key);\n        }\n        return this;\n    }\n}\n_a = Symbol.toStringTag;\nCryptoProvider.DEFAULT = \"default\";\nconst cryptoProvider = new CryptoProvider();\n\nconst OID_REGEX = /^[0-2](?:\\.[1-9][0-9]*)+$/;\nfunction isOID(id) {\n    return new RegExp(OID_REGEX).test(id);\n}\nclass NameIdentifier {\n    constructor(names = {}) {\n        this.items = {};\n        for (const id in names) {\n            this.register(id, names[id]);\n        }\n    }\n    get(idOrName) {\n        return this.items[idOrName] || null;\n    }\n    findId(idOrName) {\n        if (!isOID(idOrName)) {\n            return this.get(idOrName);\n        }\n        return idOrName;\n    }\n    register(id, name) {\n        this.items[id] = name;\n        this.items[name] = id;\n    }\n}\nconst names = new NameIdentifier();\nnames.register(\"CN\", \"2.5.4.3\");\nnames.register(\"L\", \"2.5.4.7\");\nnames.register(\"ST\", \"2.5.4.8\");\nnames.register(\"O\", \"2.5.4.10\");\nnames.register(\"OU\", \"2.5.4.11\");\nnames.register(\"C\", \"2.5.4.6\");\nnames.register(\"DC\", \"0.9.2342.19200300.100.1.25\");\nnames.register(\"E\", \"1.2.840.113549.1.9.1\");\nnames.register(\"G\", \"2.5.4.42\");\nnames.register(\"I\", \"2.5.4.43\");\nnames.register(\"SN\", \"2.5.4.4\");\nnames.register(\"T\", \"2.5.4.12\");\nfunction replaceUnknownCharacter(text, char) {\n    return `\\\\${Convert.ToHex(Convert.FromUtf8String(char)).toUpperCase()}`;\n}\nfunction escape(data) {\n    return data\n        .replace(/([,+\"\\\\<>;])/g, \"\\\\$1\")\n        .replace(/^([ #])/, \"\\\\$1\")\n        .replace(/([ ]$)/, \"\\\\$1\")\n        .replace(/([\\r\\n\\t])/, replaceUnknownCharacter);\n}\nclass Name {\n    static isASCII(text) {\n        for (let i = 0; i < text.length; i++) {\n            const code = text.charCodeAt(i);\n            if (code > 0xFF) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static isPrintableString(text) {\n        return /^[A-Za-z0-9 '()+,-./:=?]*$/g.test(text);\n    }\n    constructor(data, extraNames = {}) {\n        this.extraNames = new NameIdentifier();\n        this.asn = new Name$1();\n        for (const key in extraNames) {\n            if (Object.prototype.hasOwnProperty.call(extraNames, key)) {\n                const value = extraNames[key];\n                this.extraNames.register(key, value);\n            }\n        }\n        if (typeof data === \"string\") {\n            this.asn = this.fromString(data);\n        }\n        else if (data instanceof Name$1) {\n            this.asn = data;\n        }\n        else if (BufferSourceConverter.isBufferSource(data)) {\n            this.asn = AsnConvert.parse(data, Name$1);\n        }\n        else {\n            this.asn = this.fromJSON(data);\n        }\n    }\n    getField(idOrName) {\n        const id = this.extraNames.findId(idOrName) || names.findId(idOrName);\n        const res = [];\n        for (const name of this.asn) {\n            for (const rdn of name) {\n                if (rdn.type === id) {\n                    res.push(rdn.value.toString());\n                }\n            }\n        }\n        return res;\n    }\n    getName(idOrName) {\n        return this.extraNames.get(idOrName) || names.get(idOrName);\n    }\n    toString() {\n        return this.asn.map(rdn => rdn.map(o => {\n            const type = this.getName(o.type) || o.type;\n            const value = o.value.anyValue\n                ? `#${Convert.ToHex(o.value.anyValue)}`\n                : escape(o.value.toString());\n            return `${type}=${value}`;\n        })\n            .join(\"+\"))\n            .join(\", \");\n    }\n    toJSON() {\n        var _a;\n        const json = [];\n        for (const rdn of this.asn) {\n            const jsonItem = {};\n            for (const attr of rdn) {\n                const type = this.getName(attr.type) || attr.type;\n                (_a = jsonItem[type]) !== null && _a !== void 0 ? _a : (jsonItem[type] = []);\n                jsonItem[type].push(attr.value.anyValue ? `#${Convert.ToHex(attr.value.anyValue)}` : attr.value.toString());\n            }\n            json.push(jsonItem);\n        }\n        return json;\n    }\n    fromString(data) {\n        const asn = new Name$1();\n        const regex = /(\\d\\.[\\d.]*\\d|[A-Za-z]+)=((?:\"\")|(?:\".*?[^\\\\]\")|(?:[^,+\"\\\\](?=[,+]|$))|(?:[^,+].*?(?:[^\\\\][,+]))|(?:))([,+])?/g;\n        let matches = null;\n        let level = \",\";\n        while (matches = regex.exec(`${data},`)) {\n            let [, type, value] = matches;\n            const lastChar = value[value.length - 1];\n            if (lastChar === \",\" || lastChar === \"+\") {\n                value = value.slice(0, value.length - 1);\n                matches[3] = lastChar;\n            }\n            const next = matches[3];\n            type = this.getTypeOid(type);\n            const attr = this.createAttribute(type, value);\n            if (level === \"+\") {\n                asn[asn.length - 1].push(attr);\n            }\n            else {\n                asn.push(new RelativeDistinguishedName([attr]));\n            }\n            level = next;\n        }\n        return asn;\n    }\n    fromJSON(data) {\n        const asn = new Name$1();\n        for (const item of data) {\n            const asnRdn = new RelativeDistinguishedName();\n            for (const type in item) {\n                const typeId = this.getTypeOid(type);\n                const values = item[type];\n                for (const value of values) {\n                    const asnAttr = this.createAttribute(typeId, value);\n                    asnRdn.push(asnAttr);\n                }\n            }\n            asn.push(asnRdn);\n        }\n        return asn;\n    }\n    getTypeOid(type) {\n        if (!/[\\d.]+/.test(type)) {\n            type = this.getName(type) || \"\";\n        }\n        if (!type) {\n            throw new Error(`Cannot get OID for name type '${type}'`);\n        }\n        return type;\n    }\n    createAttribute(type, value) {\n        const attr = new AttributeTypeAndValue({ type });\n        if (typeof value === \"object\") {\n            for (const key in value) {\n                switch (key) {\n                    case \"ia5String\":\n                        attr.value.ia5String = value[key];\n                        break;\n                    case \"utf8String\":\n                        attr.value.utf8String = value[key];\n                        break;\n                    case \"universalString\":\n                        attr.value.universalString = value[key];\n                        break;\n                    case \"bmpString\":\n                        attr.value.bmpString = value[key];\n                        break;\n                    case \"printableString\":\n                        attr.value.printableString = value[key];\n                        break;\n                }\n            }\n        }\n        else if (value[0] === \"#\") {\n            attr.value.anyValue = Convert.FromHex(value.slice(1));\n        }\n        else {\n            const processedValue = this.processStringValue(value);\n            if (type === this.getName(\"E\") || type === this.getName(\"DC\")) {\n                attr.value.ia5String = processedValue;\n            }\n            else {\n                if (Name.isPrintableString(processedValue)) {\n                    attr.value.printableString = processedValue;\n                }\n                else {\n                    attr.value.utf8String = processedValue;\n                }\n            }\n        }\n        return attr;\n    }\n    processStringValue(value) {\n        const quotedMatches = /\"(.*?[^\\\\])?\"/.exec(value);\n        if (quotedMatches) {\n            value = quotedMatches[1];\n        }\n        return value\n            .replace(/\\\\0a/ig, \"\\n\")\n            .replace(/\\\\0d/ig, \"\\r\")\n            .replace(/\\\\0g/ig, \"\\t\")\n            .replace(/\\\\(.)/g, \"$1\");\n    }\n    toArrayBuffer() {\n        return AsnConvert.serialize(this.asn);\n    }\n    async getThumbprint(...args) {\n        var _a;\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args.length >= 1 && !((_a = args[0]) === null || _a === void 0 ? void 0 : _a.subtle)) {\n            algorithm = args[0] || algorithm;\n            crypto = args[1] || cryptoProvider.get();\n        }\n        else {\n            crypto = args[0] || cryptoProvider.get();\n        }\n        return await crypto.subtle.digest(algorithm, this.toArrayBuffer());\n    }\n}\n\nconst ERR_GN_CONSTRUCTOR = \"Cannot initialize GeneralName from ASN.1 data.\";\nconst ERR_GN_STRING_FORMAT = `${ERR_GN_CONSTRUCTOR} Unsupported string format in use.`;\nconst ERR_GUID = `${ERR_GN_CONSTRUCTOR} Value doesn't match to GUID regular expression.`;\nconst GUID_REGEX = /^([0-9a-f]{8})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{12})$/i;\nconst id_GUID = \"1.3.6.1.4.1.311.25.1\";\nconst id_UPN = \"1.3.6.1.4.1.311.20.2.3\";\nconst DNS = \"dns\";\nconst DN = \"dn\";\nconst EMAIL = \"email\";\nconst IP = \"ip\";\nconst URL = \"url\";\nconst GUID = \"guid\";\nconst UPN = \"upn\";\nconst REGISTERED_ID = \"id\";\nclass GeneralName extends AsnData {\n    constructor(...args) {\n        let name;\n        if (args.length === 2) {\n            switch (args[0]) {\n                case DN: {\n                    const derName = new Name(args[1]).toArrayBuffer();\n                    const asnName = AsnConvert.parse(derName, asn1X509.Name);\n                    name = new asn1X509.GeneralName({ directoryName: asnName });\n                    break;\n                }\n                case DNS:\n                    name = new asn1X509.GeneralName({ dNSName: args[1] });\n                    break;\n                case EMAIL:\n                    name = new asn1X509.GeneralName({ rfc822Name: args[1] });\n                    break;\n                case GUID: {\n                    const matches = new RegExp(GUID_REGEX, \"i\").exec(args[1]);\n                    if (!matches) {\n                        throw new Error(\"Cannot parse GUID value. Value doesn't match to regular expression\");\n                    }\n                    const hex = matches\n                        .slice(1)\n                        .map((o, i) => {\n                        if (i < 3) {\n                            return Convert.ToHex(new Uint8Array(Convert.FromHex(o)).reverse());\n                        }\n                        return o;\n                    })\n                        .join(\"\");\n                    name = new asn1X509.GeneralName({\n                        otherName: new asn1X509.OtherName({\n                            typeId: id_GUID,\n                            value: AsnConvert.serialize(new OctetString(Convert.FromHex(hex))),\n                        }),\n                    });\n                    break;\n                }\n                case IP:\n                    name = new asn1X509.GeneralName({ iPAddress: args[1] });\n                    break;\n                case REGISTERED_ID:\n                    name = new asn1X509.GeneralName({ registeredID: args[1] });\n                    break;\n                case UPN: {\n                    name = new asn1X509.GeneralName({\n                        otherName: new asn1X509.OtherName({\n                            typeId: id_UPN,\n                            value: AsnConvert.serialize(AsnUtf8StringConverter.toASN(args[1])),\n                        })\n                    });\n                    break;\n                }\n                case URL:\n                    name = new asn1X509.GeneralName({ uniformResourceIdentifier: args[1] });\n                    break;\n                default:\n                    throw new Error(\"Cannot create GeneralName. Unsupported type of the name\");\n            }\n        }\n        else if (BufferSourceConverter.isBufferSource(args[0])) {\n            name = AsnConvert.parse(args[0], asn1X509.GeneralName);\n        }\n        else {\n            name = args[0];\n        }\n        super(name);\n    }\n    onInit(asn) {\n        if (asn.dNSName != undefined) {\n            this.type = DNS;\n            this.value = asn.dNSName;\n        }\n        else if (asn.rfc822Name != undefined) {\n            this.type = EMAIL;\n            this.value = asn.rfc822Name;\n        }\n        else if (asn.iPAddress != undefined) {\n            this.type = IP;\n            this.value = asn.iPAddress;\n        }\n        else if (asn.uniformResourceIdentifier != undefined) {\n            this.type = URL;\n            this.value = asn.uniformResourceIdentifier;\n        }\n        else if (asn.registeredID != undefined) {\n            this.type = REGISTERED_ID;\n            this.value = asn.registeredID;\n        }\n        else if (asn.directoryName != undefined) {\n            this.type = DN;\n            this.value = new Name(asn.directoryName).toString();\n        }\n        else if (asn.otherName != undefined) {\n            if (asn.otherName.typeId === id_GUID) {\n                this.type = GUID;\n                const guid = AsnConvert.parse(asn.otherName.value, OctetString);\n                const matches = new RegExp(GUID_REGEX, \"i\").exec(Convert.ToHex(guid));\n                if (!matches) {\n                    throw new Error(ERR_GUID);\n                }\n                this.value = matches\n                    .slice(1)\n                    .map((o, i) => {\n                    if (i < 3) {\n                        return Convert.ToHex(new Uint8Array(Convert.FromHex(o)).reverse());\n                    }\n                    return o;\n                })\n                    .join(\"-\");\n            }\n            else if (asn.otherName.typeId === id_UPN) {\n                this.type = UPN;\n                this.value = AsnConvert.parse(asn.otherName.value, asn1X509.DirectoryString).toString();\n            }\n            else {\n                throw new Error(ERR_GN_STRING_FORMAT);\n            }\n        }\n        else {\n            throw new Error(ERR_GN_STRING_FORMAT);\n        }\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            value: this.value,\n        };\n    }\n    toTextObject() {\n        let type;\n        switch (this.type) {\n            case DN:\n            case DNS:\n            case GUID:\n            case IP:\n            case REGISTERED_ID:\n            case UPN:\n            case URL:\n                type = this.type.toUpperCase();\n                break;\n            case EMAIL:\n                type = \"Email\";\n                break;\n            default:\n                throw new Error(\"Unsupported GeneralName type\");\n        }\n        let value = this.value;\n        if (this.type === REGISTERED_ID) {\n            value = OidSerializer.toString(value);\n        }\n        return new TextObject(type, undefined, value);\n    }\n}\nclass GeneralNames extends AsnData {\n    constructor(params) {\n        let names;\n        if (params instanceof asn1X509.GeneralNames) {\n            names = params;\n        }\n        else if (Array.isArray(params)) {\n            const items = [];\n            for (const name of params) {\n                if (name instanceof asn1X509.GeneralName) {\n                    items.push(name);\n                }\n                else {\n                    const asnName = AsnConvert.parse(new GeneralName(name.type, name.value).rawData, asn1X509.GeneralName);\n                    items.push(asnName);\n                }\n            }\n            names = new asn1X509.GeneralNames(items);\n        }\n        else if (BufferSourceConverter.isBufferSource(params)) {\n            names = AsnConvert.parse(params, asn1X509.GeneralNames);\n        }\n        else {\n            throw new Error(\"Cannot initialize GeneralNames. Incorrect incoming arguments\");\n        }\n        super(names);\n    }\n    onInit(asn) {\n        const items = [];\n        for (const asnName of asn) {\n            let name = null;\n            try {\n                name = new GeneralName(asnName);\n            }\n            catch {\n                continue;\n            }\n            items.push(name);\n        }\n        this.items = items;\n    }\n    toJSON() {\n        return this.items.map(o => o.toJSON());\n    }\n    toTextObject() {\n        const res = super.toTextObjectEmpty();\n        for (const name of this.items) {\n            const nameObj = name.toTextObject();\n            let field = res[nameObj[TextObject.NAME]];\n            if (!Array.isArray(field)) {\n                field = [];\n                res[nameObj[TextObject.NAME]] = field;\n            }\n            field.push(nameObj);\n        }\n        return res;\n    }\n}\nGeneralNames.NAME = \"GeneralNames\";\n\nconst rPaddingTag = \"-{5}\";\nconst rEolChars = \"\\\\n\";\nconst rNameTag = `[^${rEolChars}]+`;\nconst rBeginTag = `${rPaddingTag}BEGIN (${rNameTag}(?=${rPaddingTag}))${rPaddingTag}`;\nconst rEndTag = `${rPaddingTag}END \\\\1${rPaddingTag}`;\nconst rEolGroup = \"\\\\n\";\nconst rHeaderKey = `[^:${rEolChars}]+`;\nconst rHeaderValue = `(?:[^${rEolChars}]+${rEolGroup}(?: +[^${rEolChars}]+${rEolGroup})*)`;\nconst rBase64Chars = \"[a-zA-Z0-9=+/]+\";\nconst rBase64 = `(?:${rBase64Chars}${rEolGroup})+`;\nconst rPem = `${rBeginTag}${rEolGroup}(?:((?:${rHeaderKey}: ${rHeaderValue})+))?${rEolGroup}?(${rBase64})${rEndTag}`;\nclass PemConverter {\n    static isPem(data) {\n        return typeof data === \"string\"\n            && new RegExp(rPem, \"g\").test(data.replace(/\\r/g, \"\"));\n    }\n    static decodeWithHeaders(pem) {\n        pem = pem.replace(/\\r/g, \"\");\n        const pattern = new RegExp(rPem, \"g\");\n        const res = [];\n        let matches = null;\n        while (matches = pattern.exec(pem)) {\n            const base64 = matches[3]\n                .replace(new RegExp(`[${rEolChars}]+`, \"g\"), \"\");\n            const pemStruct = {\n                type: matches[1],\n                headers: [],\n                rawData: Convert.FromBase64(base64),\n            };\n            const headersString = matches[2];\n            if (headersString) {\n                const headers = headersString.split(new RegExp(rEolGroup, \"g\"));\n                let lastHeader = null;\n                for (const header of headers) {\n                    const [key, value] = header.split(/:(.*)/);\n                    if (value === undefined) {\n                        if (!lastHeader) {\n                            throw new Error(\"Cannot parse PEM string. Incorrect header value\");\n                        }\n                        lastHeader.value += key.trim();\n                    }\n                    else {\n                        if (lastHeader) {\n                            pemStruct.headers.push(lastHeader);\n                        }\n                        lastHeader = { key, value: value.trim() };\n                    }\n                }\n                if (lastHeader) {\n                    pemStruct.headers.push(lastHeader);\n                }\n            }\n            res.push(pemStruct);\n        }\n        return res;\n    }\n    static decode(pem) {\n        const blocks = this.decodeWithHeaders(pem);\n        return blocks.map(o => o.rawData);\n    }\n    static decodeFirst(pem) {\n        const items = this.decode(pem);\n        if (!items.length) {\n            throw new RangeError(\"PEM string doesn't contain any objects\");\n        }\n        return items[0];\n    }\n    static encode(rawData, tag) {\n        if (Array.isArray(rawData)) {\n            const raws = new Array();\n            if (tag) {\n                rawData.forEach(element => {\n                    if (!BufferSourceConverter.isBufferSource(element)) {\n                        throw new TypeError(\"Cannot encode array of BufferSource in PEM format. Not all items of the array are BufferSource\");\n                    }\n                    raws.push(this.encodeStruct({\n                        type: tag,\n                        rawData: BufferSourceConverter.toArrayBuffer(element),\n                    }));\n                });\n            }\n            else {\n                rawData.forEach(element => {\n                    if (!(\"type\" in element)) {\n                        throw new TypeError(\"Cannot encode array of PemStruct in PEM format. Not all items of the array are PemStrut\");\n                    }\n                    raws.push(this.encodeStruct(element));\n                });\n            }\n            return raws.join(\"\\n\");\n        }\n        else {\n            if (!tag) {\n                throw new Error(\"Required argument 'tag' is missed\");\n            }\n            return this.encodeStruct({\n                type: tag,\n                rawData: BufferSourceConverter.toArrayBuffer(rawData),\n            });\n        }\n    }\n    static encodeStruct(pem) {\n        var _a;\n        const upperCaseType = pem.type.toLocaleUpperCase();\n        const res = [];\n        res.push(`-----BEGIN ${upperCaseType}-----`);\n        if ((_a = pem.headers) === null || _a === void 0 ? void 0 : _a.length) {\n            for (const header of pem.headers) {\n                res.push(`${header.key}: ${header.value}`);\n            }\n            res.push(\"\");\n        }\n        const base64 = Convert.ToBase64(pem.rawData);\n        let sliced;\n        let offset = 0;\n        const rows = Array();\n        while (offset < base64.length) {\n            if (base64.length - offset < 64) {\n                sliced = base64.substring(offset);\n            }\n            else {\n                sliced = base64.substring(offset, offset + 64);\n                offset += 64;\n            }\n            if (sliced.length !== 0) {\n                rows.push(sliced);\n                if (sliced.length < 64) {\n                    break;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        res.push(...rows);\n        res.push(`-----END ${upperCaseType}-----`);\n        return res.join(\"\\n\");\n    }\n}\nPemConverter.CertificateTag = \"CERTIFICATE\";\nPemConverter.CrlTag = \"CRL\";\nPemConverter.CertificateRequestTag = \"CERTIFICATE REQUEST\";\nPemConverter.PublicKeyTag = \"PUBLIC KEY\";\nPemConverter.PrivateKeyTag = \"PRIVATE KEY\";\n\nclass PemData extends AsnData {\n    static isAsnEncoded(data) {\n        return BufferSourceConverter.isBufferSource(data) || typeof data === \"string\";\n    }\n    static toArrayBuffer(raw) {\n        if (typeof raw === \"string\") {\n            if (PemConverter.isPem(raw)) {\n                return PemConverter.decode(raw)[0];\n            }\n            else if (Convert.isHex(raw)) {\n                return Convert.FromHex(raw);\n            }\n            else if (Convert.isBase64(raw)) {\n                return Convert.FromBase64(raw);\n            }\n            else if (Convert.isBase64Url(raw)) {\n                return Convert.FromBase64Url(raw);\n            }\n            else {\n                throw new TypeError(\"Unsupported format of 'raw' argument. Must be one of DER, PEM, HEX, Base64, or Base4Url\");\n            }\n        }\n        else {\n            const buffer = BufferSourceConverter.toUint8Array(raw);\n            if (buffer.length > 0 && buffer[0] === 0x30) {\n                return BufferSourceConverter.toArrayBuffer(raw);\n            }\n            const stringRaw = Convert.ToBinary(raw);\n            if (PemConverter.isPem(stringRaw)) {\n                return PemConverter.decode(stringRaw)[0];\n            }\n            else if (Convert.isHex(stringRaw)) {\n                return Convert.FromHex(stringRaw);\n            }\n            else if (Convert.isBase64(stringRaw)) {\n                return Convert.FromBase64(stringRaw);\n            }\n            else if (Convert.isBase64Url(stringRaw)) {\n                return Convert.FromBase64Url(stringRaw);\n            }\n            throw new TypeError(\"Unsupported format of 'raw' argument. Must be one of DER, PEM, HEX, Base64, or Base4Url\");\n        }\n    }\n    constructor(...args) {\n        if (PemData.isAsnEncoded(args[0])) {\n            super(PemData.toArrayBuffer(args[0]), args[1]);\n        }\n        else {\n            super(args[0]);\n        }\n    }\n    toString(format = \"pem\") {\n        switch (format) {\n            case \"pem\":\n                return PemConverter.encode(this.rawData, this.tag);\n            default:\n                return super.toString(format);\n        }\n    }\n}\n\nclass PublicKey extends PemData {\n    static async create(data, crypto = cryptoProvider.get()) {\n        if (data instanceof PublicKey) {\n            return data;\n        }\n        else if (CryptoProvider.isCryptoKey(data)) {\n            if (data.type !== \"public\") {\n                throw new TypeError(\"Public key is required\");\n            }\n            const spki = await crypto.subtle.exportKey(\"spki\", data);\n            return new PublicKey(spki);\n        }\n        else if (data.publicKey) {\n            return data.publicKey;\n        }\n        else if (BufferSourceConverter.isBufferSource(data)) {\n            return new PublicKey(data);\n        }\n        else {\n            throw new TypeError(\"Unsupported PublicKeyType\");\n        }\n    }\n    constructor(param) {\n        if (PemData.isAsnEncoded(param)) {\n            super(param, SubjectPublicKeyInfo);\n        }\n        else {\n            super(param);\n        }\n        this.tag = PemConverter.PublicKeyTag;\n    }\n    async export(...args) {\n        let crypto;\n        let keyUsages = [\"verify\"];\n        let algorithm = { hash: \"SHA-256\", ...this.algorithm };\n        if (args.length > 1) {\n            algorithm = args[0] || algorithm;\n            keyUsages = args[1] || keyUsages;\n            crypto = args[2] || cryptoProvider.get();\n        }\n        else {\n            crypto = args[0] || cryptoProvider.get();\n        }\n        let raw = this.rawData;\n        const asnSpki = AsnConvert.parse(this.rawData, SubjectPublicKeyInfo);\n        if (asnSpki.algorithm.algorithm === id_RSASSA_PSS) {\n            raw = convertSpkiToRsaPkcs1(asnSpki, raw);\n        }\n        return crypto.subtle.importKey(\"spki\", raw, algorithm, true, keyUsages);\n    }\n    onInit(asn) {\n        const algProv = container.resolve(diAlgorithmProvider);\n        const algorithm = this.algorithm = algProv.toWebAlgorithm(asn.algorithm);\n        switch (asn.algorithm.algorithm) {\n            case id_rsaEncryption:\n                {\n                    const rsaPublicKey = AsnConvert.parse(asn.subjectPublicKey, RSAPublicKey);\n                    const modulus = BufferSourceConverter.toUint8Array(rsaPublicKey.modulus);\n                    algorithm.publicExponent = BufferSourceConverter.toUint8Array(rsaPublicKey.publicExponent);\n                    algorithm.modulusLength = (!modulus[0] ? modulus.slice(1) : modulus).byteLength << 3;\n                    break;\n                }\n        }\n    }\n    async getThumbprint(...args) {\n        var _a;\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args.length >= 1 && !((_a = args[0]) === null || _a === void 0 ? void 0 : _a.subtle)) {\n            algorithm = args[0] || algorithm;\n            crypto = args[1] || cryptoProvider.get();\n        }\n        else {\n            crypto = args[0] || cryptoProvider.get();\n        }\n        return await crypto.subtle.digest(algorithm, this.rawData);\n    }\n    async getKeyIdentifier(...args) {\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args.length === 1) {\n            if (typeof args[0] === \"string\") {\n                algorithm = args[0];\n                crypto = cryptoProvider.get();\n            }\n            else {\n                crypto = args[0];\n            }\n        }\n        else if (args.length === 2) {\n            algorithm = args[0];\n            crypto = args[1];\n        }\n        else {\n            crypto = cryptoProvider.get();\n        }\n        const asn = AsnConvert.parse(this.rawData, SubjectPublicKeyInfo);\n        return await crypto.subtle.digest(algorithm, asn.subjectPublicKey);\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        const asn = AsnConvert.parse(this.rawData, SubjectPublicKeyInfo);\n        obj[\"Algorithm\"] = TextConverter.serializeAlgorithm(asn.algorithm);\n        switch (asn.algorithm.algorithm) {\n            case id_ecPublicKey:\n                obj[\"EC Point\"] = asn.subjectPublicKey;\n                break;\n            case id_rsaEncryption:\n            default:\n                obj[\"Raw Data\"] = asn.subjectPublicKey;\n        }\n        return obj;\n    }\n}\nfunction convertSpkiToRsaPkcs1(asnSpki, raw) {\n    asnSpki.algorithm = new AlgorithmIdentifier({\n        algorithm: id_rsaEncryption,\n        parameters: null,\n    });\n    raw = AsnConvert.serialize(asnSpki);\n    return raw;\n}\n\nclass AuthorityKeyIdentifierExtension extends Extension {\n    static async create(param, critical = false, crypto = cryptoProvider.get()) {\n        if (\"name\" in param && \"serialNumber\" in param) {\n            return new AuthorityKeyIdentifierExtension(param, critical);\n        }\n        const key = await PublicKey.create(param, crypto);\n        const id = await key.getKeyIdentifier(crypto);\n        return new AuthorityKeyIdentifierExtension(Convert.ToHex(id), critical);\n    }\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else if (typeof args[0] === \"string\") {\n            const value = new asn1X509.AuthorityKeyIdentifier({ keyIdentifier: new asn1X509.KeyIdentifier(Convert.FromHex(args[0])) });\n            super(asn1X509.id_ce_authorityKeyIdentifier, args[1], AsnConvert.serialize(value));\n        }\n        else {\n            const certId = args[0];\n            const certIdName = certId.name instanceof GeneralNames\n                ? AsnConvert.parse(certId.name.rawData, asn1X509.GeneralNames)\n                : certId.name;\n            const value = new asn1X509.AuthorityKeyIdentifier({\n                authorityCertIssuer: certIdName,\n                authorityCertSerialNumber: Convert.FromHex(certId.serialNumber),\n            });\n            super(asn1X509.id_ce_authorityKeyIdentifier, args[1], AsnConvert.serialize(value));\n        }\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        const aki = AsnConvert.parse(asn.extnValue, asn1X509.AuthorityKeyIdentifier);\n        if (aki.keyIdentifier) {\n            this.keyId = Convert.ToHex(aki.keyIdentifier);\n        }\n        if (aki.authorityCertIssuer || aki.authorityCertSerialNumber) {\n            this.certId = {\n                name: aki.authorityCertIssuer || [],\n                serialNumber: aki.authorityCertSerialNumber ? Convert.ToHex(aki.authorityCertSerialNumber) : \"\",\n            };\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const asn = AsnConvert.parse(this.value, asn1X509.AuthorityKeyIdentifier);\n        if (asn.authorityCertIssuer) {\n            obj[\"Authority Issuer\"] = new GeneralNames(asn.authorityCertIssuer).toTextObject();\n        }\n        if (asn.authorityCertSerialNumber) {\n            obj[\"Authority Serial Number\"] = asn.authorityCertSerialNumber;\n        }\n        if (asn.keyIdentifier) {\n            obj[\"\"] = asn.keyIdentifier;\n        }\n        return obj;\n    }\n}\nAuthorityKeyIdentifierExtension.NAME = \"Authority Key Identifier\";\n\nclass BasicConstraintsExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, BasicConstraints);\n            this.ca = value.cA;\n            this.pathLength = value.pathLenConstraint;\n        }\n        else {\n            const value = new BasicConstraints({\n                cA: args[0],\n                pathLenConstraint: args[1],\n            });\n            super(id_ce_basicConstraints, args[2], AsnConvert.serialize(value));\n            this.ca = args[0];\n            this.pathLength = args[1];\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        if (this.ca) {\n            obj[\"CA\"] = this.ca;\n        }\n        if (this.pathLength !== undefined) {\n            obj[\"Path Length\"] = this.pathLength;\n        }\n        return obj;\n    }\n}\nBasicConstraintsExtension.NAME = \"Basic Constraints\";\n\nvar ExtendedKeyUsage;\n(function (ExtendedKeyUsage) {\n    ExtendedKeyUsage[\"serverAuth\"] = \"1.3.6.1.5.5.7.3.1\";\n    ExtendedKeyUsage[\"clientAuth\"] = \"1.3.6.1.5.5.7.3.2\";\n    ExtendedKeyUsage[\"codeSigning\"] = \"1.3.6.1.5.5.7.3.3\";\n    ExtendedKeyUsage[\"emailProtection\"] = \"1.3.6.1.5.5.7.3.4\";\n    ExtendedKeyUsage[\"timeStamping\"] = \"1.3.6.1.5.5.7.3.8\";\n    ExtendedKeyUsage[\"ocspSigning\"] = \"1.3.6.1.5.5.7.3.9\";\n})(ExtendedKeyUsage || (ExtendedKeyUsage = {}));\nclass ExtendedKeyUsageExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, asn1X509.ExtendedKeyUsage);\n            this.usages = value.map(o => o);\n        }\n        else {\n            const value = new asn1X509.ExtendedKeyUsage(args[0]);\n            super(asn1X509.id_ce_extKeyUsage, args[1], AsnConvert.serialize(value));\n            this.usages = args[0];\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"\"] = this.usages.map(o => OidSerializer.toString(o)).join(\", \");\n        return obj;\n    }\n}\nExtendedKeyUsageExtension.NAME = \"Extended Key Usages\";\n\nvar KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nclass KeyUsagesExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, KeyUsage);\n            this.usages = value.toNumber();\n        }\n        else {\n            const value = new KeyUsage(args[0]);\n            super(id_ce_keyUsage, args[1], AsnConvert.serialize(value));\n            this.usages = args[0];\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const asn = AsnConvert.parse(this.value, KeyUsage);\n        obj[\"\"] = asn.toJSON().join(\", \");\n        return obj;\n    }\n}\nKeyUsagesExtension.NAME = \"Key Usages\";\n\nclass SubjectKeyIdentifierExtension extends Extension {\n    static async create(publicKey, critical = false, crypto = cryptoProvider.get()) {\n        const key = await PublicKey.create(publicKey, crypto);\n        const id = await key.getKeyIdentifier(crypto);\n        return new SubjectKeyIdentifierExtension(Convert.ToHex(id), critical);\n    }\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const value = AsnConvert.parse(this.value, asn1X509.SubjectKeyIdentifier);\n            this.keyId = Convert.ToHex(value);\n        }\n        else {\n            const identifier = typeof args[0] === \"string\"\n                ? Convert.FromHex(args[0])\n                : args[0];\n            const value = new asn1X509.SubjectKeyIdentifier(identifier);\n            super(asn1X509.id_ce_subjectKeyIdentifier, args[1], AsnConvert.serialize(value));\n            this.keyId = Convert.ToHex(identifier);\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const asn = AsnConvert.parse(this.value, asn1X509.SubjectKeyIdentifier);\n        obj[\"\"] = asn;\n        return obj;\n    }\n}\nSubjectKeyIdentifierExtension.NAME = \"Subject Key Identifier\";\n\nclass SubjectAlternativeNameExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else {\n            super(asn1X509.id_ce_subjectAltName, args[1], new GeneralNames(args[0] || []).rawData);\n        }\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        const value = AsnConvert.parse(asn.extnValue, asn1X509.SubjectAlternativeName);\n        this.names = new GeneralNames(value);\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const namesObj = this.names.toTextObject();\n        for (const key in namesObj) {\n            obj[key] = namesObj[key];\n        }\n        return obj;\n    }\n}\nSubjectAlternativeNameExtension.NAME = \"Subject Alternative Name\";\n\nclass ExtensionFactory {\n    static register(id, type) {\n        this.items.set(id, type);\n    }\n    static create(data) {\n        const extension = new Extension(data);\n        const Type = this.items.get(extension.type);\n        if (Type) {\n            return new Type(data);\n        }\n        return extension;\n    }\n}\nExtensionFactory.items = new Map();\n\nclass CertificatePolicyExtension extends Extension {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n            const asnPolicies = AsnConvert.parse(this.value, asn1X509.CertificatePolicies);\n            this.policies = asnPolicies.map(o => o.policyIdentifier);\n        }\n        else {\n            const policies = args[0];\n            const critical = (_a = args[1]) !== null && _a !== void 0 ? _a : false;\n            const value = new asn1X509.CertificatePolicies(policies.map(o => (new asn1X509.PolicyInformation({\n                policyIdentifier: o,\n            }))));\n            super(asn1X509.id_ce_certificatePolicies, critical, AsnConvert.serialize(value));\n            this.policies = policies;\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"Policy\"] = this.policies.map(o => new TextObject(\"\", {}, OidSerializer.toString(o)));\n        return obj;\n    }\n}\nCertificatePolicyExtension.NAME = \"Certificate Policies\";\nExtensionFactory.register(asn1X509.id_ce_certificatePolicies, CertificatePolicyExtension);\n\nclass CRLDistributionPointsExtension extends Extension {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else if (Array.isArray(args[0]) && typeof args[0][0] === \"string\") {\n            const urls = args[0];\n            const dps = urls.map(url => {\n                return new asn1X509.DistributionPoint({\n                    distributionPoint: new asn1X509.DistributionPointName({\n                        fullName: [new asn1X509.GeneralName({ uniformResourceIdentifier: url })],\n                    }),\n                });\n            });\n            const value = new asn1X509.CRLDistributionPoints(dps);\n            super(asn1X509.id_ce_cRLDistributionPoints, args[1], AsnConvert.serialize(value));\n        }\n        else {\n            const value = new asn1X509.CRLDistributionPoints(args[0]);\n            super(asn1X509.id_ce_cRLDistributionPoints, args[1], AsnConvert.serialize(value));\n        }\n        (_a = this.distributionPoints) !== null && _a !== void 0 ? _a : (this.distributionPoints = []);\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        const crlExt = AsnConvert.parse(asn.extnValue, asn1X509.CRLDistributionPoints);\n        this.distributionPoints = crlExt;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"Distribution Point\"] = this.distributionPoints.map(dp => {\n            var _a;\n            const dpObj = {};\n            if (dp.distributionPoint) {\n                dpObj[\"\"] = (_a = dp.distributionPoint.fullName) === null || _a === void 0 ? void 0 : _a.map(name => new GeneralName(name).toString()).join(\", \");\n            }\n            if (dp.reasons) {\n                dpObj[\"Reasons\"] = dp.reasons.toString();\n            }\n            if (dp.cRLIssuer) {\n                dpObj[\"CRL Issuer\"] = dp.cRLIssuer.map(issuer => issuer.toString()).join(\", \");\n            }\n            return dpObj;\n        });\n        return obj;\n    }\n}\nCRLDistributionPointsExtension.NAME = \"CRL Distribution Points\";\n\nclass AuthorityInfoAccessExtension extends Extension {\n    constructor(...args) {\n        var _a, _b, _c, _d;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else if (args[0] instanceof asn1X509.AuthorityInfoAccessSyntax) {\n            const value = new asn1X509.AuthorityInfoAccessSyntax(args[0]);\n            super(asn1X509.id_pe_authorityInfoAccess, args[1], AsnConvert.serialize(value));\n        }\n        else {\n            const params = args[0];\n            const value = new asn1X509.AuthorityInfoAccessSyntax();\n            addAccessDescriptions(value, params, asn1X509.id_ad_ocsp, \"ocsp\");\n            addAccessDescriptions(value, params, asn1X509.id_ad_caIssuers, \"caIssuers\");\n            addAccessDescriptions(value, params, asn1X509.id_ad_timeStamping, \"timeStamping\");\n            addAccessDescriptions(value, params, asn1X509.id_ad_caRepository, \"caRepository\");\n            super(asn1X509.id_pe_authorityInfoAccess, args[1], AsnConvert.serialize(value));\n        }\n        (_a = this.ocsp) !== null && _a !== void 0 ? _a : (this.ocsp = []);\n        (_b = this.caIssuers) !== null && _b !== void 0 ? _b : (this.caIssuers = []);\n        (_c = this.timeStamping) !== null && _c !== void 0 ? _c : (this.timeStamping = []);\n        (_d = this.caRepository) !== null && _d !== void 0 ? _d : (this.caRepository = []);\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        this.ocsp = [];\n        this.caIssuers = [];\n        this.timeStamping = [];\n        this.caRepository = [];\n        const aia = AsnConvert.parse(asn.extnValue, asn1X509.AuthorityInfoAccessSyntax);\n        aia.forEach(accessDescription => {\n            switch (accessDescription.accessMethod) {\n                case asn1X509.id_ad_ocsp:\n                    this.ocsp.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n                case asn1X509.id_ad_caIssuers:\n                    this.caIssuers.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n                case asn1X509.id_ad_timeStamping:\n                    this.timeStamping.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n                case asn1X509.id_ad_caRepository:\n                    this.caRepository.push(new GeneralName(accessDescription.accessLocation));\n                    break;\n            }\n        });\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        if (this.ocsp.length) {\n            addUrlsToObject(obj, \"OCSP\", this.ocsp);\n        }\n        if (this.caIssuers.length) {\n            addUrlsToObject(obj, \"CA Issuers\", this.caIssuers);\n        }\n        if (this.timeStamping.length) {\n            addUrlsToObject(obj, \"Time Stamping\", this.timeStamping);\n        }\n        if (this.caRepository.length) {\n            addUrlsToObject(obj, \"CA Repository\", this.caRepository);\n        }\n        return obj;\n    }\n}\nAuthorityInfoAccessExtension.NAME = \"Authority Info Access\";\nfunction addUrlsToObject(obj, key, urls) {\n    if (urls.length === 1) {\n        obj[key] = urls[0].toTextObject();\n    }\n    else {\n        const names = new TextObject(\"\");\n        urls.forEach((name, index) => {\n            const nameObj = name.toTextObject();\n            const indexedKey = `${nameObj[TextObject.NAME]} ${index + 1}`;\n            let field = names[indexedKey];\n            if (!Array.isArray(field)) {\n                field = [];\n                names[indexedKey] = field;\n            }\n            field.push(nameObj);\n        });\n        obj[key] = names;\n    }\n}\nfunction addAccessDescriptions(value, params, method, key) {\n    const items = params[key];\n    if (items) {\n        const array = Array.isArray(items) ? items : [items];\n        array.forEach(url => {\n            if (typeof url === \"string\") {\n                url = new GeneralName(\"url\", url);\n            }\n            value.push(new asn1X509.AccessDescription({\n                accessMethod: method,\n                accessLocation: AsnConvert.parse(url.rawData, asn1X509.GeneralName),\n            }));\n        });\n    }\n}\n\nclass IssuerAlternativeNameExtension extends Extension {\n    constructor(...args) {\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else {\n            super(asn1X509.id_ce_issuerAltName, args[1], new GeneralNames(args[0] || []).rawData);\n        }\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        const value = AsnConvert.parse(asn.extnValue, asn1X509.GeneralNames);\n        this.names = new GeneralNames(value);\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const namesObj = this.names.toTextObject();\n        for (const key in namesObj) {\n            obj[key] = namesObj[key];\n        }\n        return obj;\n    }\n}\nIssuerAlternativeNameExtension.NAME = \"Issuer Alternative Name\";\n\nclass Attribute extends AsnData {\n    constructor(...args) {\n        let raw;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\n        }\n        else {\n            const type = args[0];\n            const values = Array.isArray(args[1]) ? args[1].map(o => BufferSourceConverter.toArrayBuffer(o)) : [];\n            raw = AsnConvert.serialize(new Attribute$1({ type, values }));\n        }\n        super(raw, Attribute$1);\n    }\n    onInit(asn) {\n        this.type = asn.type;\n        this.values = asn.values;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[\"Value\"] = this.values.map(o => new TextObject(\"\", { \"\": o }));\n        return obj;\n    }\n    toTextObjectWithoutValue() {\n        const obj = this.toTextObjectEmpty();\n        if (obj[TextObject.NAME] === Attribute.NAME) {\n            obj[TextObject.NAME] = OidSerializer.toString(this.type);\n        }\n        return obj;\n    }\n}\nAttribute.NAME = \"Attribute\";\n\nclass ChallengePasswordAttribute extends Attribute {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else {\n            const value = new asnPkcs9.ChallengePassword({\n                printableString: args[0],\n            });\n            super(asnPkcs9.id_pkcs9_at_challengePassword, [AsnConvert.serialize(value)]);\n        }\n        (_a = this.password) !== null && _a !== void 0 ? _a : (this.password = \"\");\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        if (this.values[0]) {\n            const value = AsnConvert.parse(this.values[0], asnPkcs9.ChallengePassword);\n            this.password = value.toString();\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        obj[TextObject.VALUE] = this.password;\n        return obj;\n    }\n}\nChallengePasswordAttribute.NAME = \"Challenge Password\";\n\nclass ExtensionsAttribute extends Attribute {\n    constructor(...args) {\n        var _a;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            super(args[0]);\n        }\n        else {\n            const extensions = args[0];\n            const value = new asn1X509.Extensions();\n            for (const extension of extensions) {\n                value.push(AsnConvert.parse(extension.rawData, asn1X509.Extension));\n            }\n            super(asnPkcs9.id_pkcs9_at_extensionRequest, [AsnConvert.serialize(value)]);\n        }\n        (_a = this.items) !== null && _a !== void 0 ? _a : (this.items = []);\n    }\n    onInit(asn) {\n        super.onInit(asn);\n        if (this.values[0]) {\n            const value = AsnConvert.parse(this.values[0], asn1X509.Extensions);\n            this.items = value.map(o => ExtensionFactory.create(AsnConvert.serialize(o)));\n        }\n    }\n    toTextObject() {\n        const obj = this.toTextObjectWithoutValue();\n        const extensions = this.items.map(o => o.toTextObject());\n        for (const extension of extensions) {\n            obj[extension[TextObject.NAME]] = extension;\n        }\n        return obj;\n    }\n}\nExtensionsAttribute.NAME = \"Extensions\";\n\nclass AttributeFactory {\n    static register(id, type) {\n        this.items.set(id, type);\n    }\n    static create(data) {\n        const attribute = new Attribute(data);\n        const Type = this.items.get(attribute.type);\n        if (Type) {\n            return new Type(data);\n        }\n        return attribute;\n    }\n}\nAttributeFactory.items = new Map();\n\nconst diAsnSignatureFormatter = \"crypto.signatureFormatter\";\nclass AsnDefaultSignatureFormatter {\n    toAsnSignature(algorithm, signature) {\n        return BufferSourceConverter.toArrayBuffer(signature);\n    }\n    toWebSignature(algorithm, signature) {\n        return BufferSourceConverter.toArrayBuffer(signature);\n    }\n}\n\nvar RsaAlgorithm_1;\nlet RsaAlgorithm = RsaAlgorithm_1 = class RsaAlgorithm {\n    static createPssParams(hash, saltLength) {\n        const hashAlgorithm = RsaAlgorithm_1.getHashAlgorithm(hash);\n        if (!hashAlgorithm) {\n            return null;\n        }\n        return new asn1Rsa.RsaSaPssParams({\n            hashAlgorithm,\n            maskGenAlgorithm: new AlgorithmIdentifier({\n                algorithm: asn1Rsa.id_mgf1,\n                parameters: AsnConvert.serialize(hashAlgorithm),\n            }),\n            saltLength,\n        });\n    }\n    static getHashAlgorithm(alg) {\n        const algProv = container.resolve(diAlgorithmProvider);\n        if (typeof alg === \"string\") {\n            return algProv.toAsnAlgorithm({ name: alg });\n        }\n        if (typeof alg === \"object\" && alg && \"name\" in alg) {\n            return algProv.toAsnAlgorithm(alg);\n        }\n        return null;\n    }\n    toAsnAlgorithm(alg) {\n        switch (alg.name.toLowerCase()) {\n            case \"rsassa-pkcs1-v1_5\":\n                if (\"hash\" in alg) {\n                    let hash;\n                    if (typeof alg.hash === \"string\") {\n                        hash = alg.hash;\n                    }\n                    else if (alg.hash && typeof alg.hash === \"object\"\n                        && \"name\" in alg.hash && typeof alg.hash.name === \"string\") {\n                        hash = alg.hash.name.toUpperCase();\n                    }\n                    else {\n                        throw new Error(\"Cannot get hash algorithm name\");\n                    }\n                    switch (hash.toLowerCase()) {\n                        case \"sha-1\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha1WithRSAEncryption, parameters: null });\n                        case \"sha-256\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha256WithRSAEncryption, parameters: null });\n                        case \"sha-384\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha384WithRSAEncryption, parameters: null });\n                        case \"sha-512\":\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha512WithRSAEncryption, parameters: null });\n                    }\n                }\n                else {\n                    return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_rsaEncryption, parameters: null });\n                }\n                break;\n            case \"rsa-pss\":\n                if (\"hash\" in alg) {\n                    if (!(\"saltLength\" in alg && typeof alg.saltLength === \"number\")) {\n                        throw new Error(\"Cannot get 'saltLength' from 'alg' argument\");\n                    }\n                    const pssParams = RsaAlgorithm_1.createPssParams(alg.hash, alg.saltLength);\n                    if (!pssParams) {\n                        throw new Error(\"Cannot create PSS parameters\");\n                    }\n                    return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_RSASSA_PSS, parameters: AsnConvert.serialize(pssParams) });\n                }\n                else {\n                    return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_RSASSA_PSS, parameters: null });\n                }\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case asn1Rsa.id_rsaEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\" };\n            case asn1Rsa.id_sha1WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-1\" } };\n            case asn1Rsa.id_sha256WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-256\" } };\n            case asn1Rsa.id_sha384WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-384\" } };\n            case asn1Rsa.id_sha512WithRSAEncryption:\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-512\" } };\n            case asn1Rsa.id_RSASSA_PSS:\n                if (alg.parameters) {\n                    const pssParams = AsnConvert.parse(alg.parameters, asn1Rsa.RsaSaPssParams);\n                    const algProv = container.resolve(diAlgorithmProvider);\n                    const hashAlg = algProv.toWebAlgorithm(pssParams.hashAlgorithm);\n                    return {\n                        name: \"RSA-PSS\",\n                        hash: hashAlg,\n                        saltLength: pssParams.saltLength,\n                    };\n                }\n                else {\n                    return { name: \"RSA-PSS\" };\n                }\n        }\n        return null;\n    }\n};\nRsaAlgorithm = RsaAlgorithm_1 = __decorate([\n    injectable()\n], RsaAlgorithm);\ncontainer.registerSingleton(diAlgorithm, RsaAlgorithm);\n\nlet ShaAlgorithm = class ShaAlgorithm {\n    toAsnAlgorithm(alg) {\n        switch (alg.name.toLowerCase()) {\n            case \"sha-1\":\n                return new AlgorithmIdentifier({ algorithm: id_sha1 });\n            case \"sha-256\":\n                return new AlgorithmIdentifier({ algorithm: id_sha256 });\n            case \"sha-384\":\n                return new AlgorithmIdentifier({ algorithm: id_sha384 });\n            case \"sha-512\":\n                return new AlgorithmIdentifier({ algorithm: id_sha512 });\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case id_sha1:\n                return { name: \"SHA-1\" };\n            case id_sha256:\n                return { name: \"SHA-256\" };\n            case id_sha384:\n                return { name: \"SHA-384\" };\n            case id_sha512:\n                return { name: \"SHA-512\" };\n        }\n        return null;\n    }\n};\nShaAlgorithm = __decorate([\n    injectable()\n], ShaAlgorithm);\ncontainer.registerSingleton(diAlgorithm, ShaAlgorithm);\n\nclass AsnEcSignatureFormatter {\n    addPadding(pointSize, data) {\n        const bytes = BufferSourceConverter.toUint8Array(data);\n        const res = new Uint8Array(pointSize);\n        res.set(bytes, pointSize - bytes.length);\n        return res.buffer;\n    }\n    removePadding(data, positive = false) {\n        let bytes = BufferSourceConverter.toUint8Array(data);\n        for (let i = 0; i < bytes.length; i++) {\n            if (!bytes[i]) {\n                continue;\n            }\n            bytes = bytes.slice(i);\n            break;\n        }\n        if (positive && bytes[0] > 127) {\n            const result = new Uint8Array(bytes.length + 1);\n            result.set(bytes, 1);\n            return result.buffer;\n        }\n        return bytes.buffer;\n    }\n    toAsnSignature(algorithm, signature) {\n        if (algorithm.name === \"ECDSA\") {\n            const namedCurve = algorithm.namedCurve;\n            const pointSize = AsnEcSignatureFormatter.namedCurveSize.get(namedCurve) || AsnEcSignatureFormatter.defaultNamedCurveSize;\n            const ecSignature = new ECDSASigValue();\n            const uint8Signature = BufferSourceConverter.toUint8Array(signature);\n            ecSignature.r = this.removePadding(uint8Signature.slice(0, pointSize), true);\n            ecSignature.s = this.removePadding(uint8Signature.slice(pointSize, pointSize + pointSize), true);\n            return AsnConvert.serialize(ecSignature);\n        }\n        return null;\n    }\n    toWebSignature(algorithm, signature) {\n        if (algorithm.name === \"ECDSA\") {\n            const ecSigValue = AsnConvert.parse(signature, ECDSASigValue);\n            const namedCurve = algorithm.namedCurve;\n            const pointSize = AsnEcSignatureFormatter.namedCurveSize.get(namedCurve) || AsnEcSignatureFormatter.defaultNamedCurveSize;\n            const r = this.addPadding(pointSize, this.removePadding(ecSigValue.r));\n            const s = this.addPadding(pointSize, this.removePadding(ecSigValue.s));\n            return combine(r, s);\n        }\n        return null;\n    }\n}\nAsnEcSignatureFormatter.namedCurveSize = new Map();\nAsnEcSignatureFormatter.defaultNamedCurveSize = 32;\n\nconst idX25519 = \"1.3.101.110\";\nconst idX448 = \"1.3.101.111\";\nconst idEd25519 = \"1.3.101.112\";\nconst idEd448 = \"1.3.101.113\";\nlet EdAlgorithm = class EdAlgorithm {\n    toAsnAlgorithm(alg) {\n        let algorithm = null;\n        switch (alg.name.toLowerCase()) {\n            case \"ed25519\":\n                algorithm = idEd25519;\n                break;\n            case \"x25519\":\n                algorithm = idX25519;\n                break;\n            case \"eddsa\":\n                switch (alg.namedCurve.toLowerCase()) {\n                    case \"ed25519\":\n                        algorithm = idEd25519;\n                        break;\n                    case \"ed448\":\n                        algorithm = idEd448;\n                        break;\n                }\n                break;\n            case \"ecdh-es\":\n                switch (alg.namedCurve.toLowerCase()) {\n                    case \"x25519\":\n                        algorithm = idX25519;\n                        break;\n                    case \"x448\":\n                        algorithm = idX448;\n                        break;\n                }\n        }\n        if (algorithm) {\n            return new AlgorithmIdentifier({\n                algorithm,\n            });\n        }\n        return null;\n    }\n    toWebAlgorithm(alg) {\n        switch (alg.algorithm) {\n            case idEd25519:\n                return { name: \"Ed25519\" };\n            case idEd448:\n                return { name: \"EdDSA\", namedCurve: \"Ed448\" };\n            case idX25519:\n                return { name: \"X25519\" };\n            case idX448:\n                return { name: \"ECDH-ES\", namedCurve: \"X448\" };\n        }\n        return null;\n    }\n};\nEdAlgorithm = __decorate([\n    injectable()\n], EdAlgorithm);\ncontainer.registerSingleton(diAlgorithm, EdAlgorithm);\n\nvar _Pkcs10CertificateRequest_tbs, _Pkcs10CertificateRequest_subjectName, _Pkcs10CertificateRequest_subject, _Pkcs10CertificateRequest_signatureAlgorithm, _Pkcs10CertificateRequest_signature, _Pkcs10CertificateRequest_publicKey, _Pkcs10CertificateRequest_attributes, _Pkcs10CertificateRequest_extensions;\nclass Pkcs10CertificateRequest extends PemData {\n    get subjectName() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_subjectName, \"f\")) {\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_subjectName, new Name(this.asn.certificationRequestInfo.subject), \"f\");\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_subjectName, \"f\");\n    }\n    get subject() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_subject, \"f\")) {\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_subject, this.subjectName.toString(), \"f\");\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_subject, \"f\");\n    }\n    get signatureAlgorithm() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_signatureAlgorithm, \"f\")) {\n            const algProv = container.resolve(diAlgorithmProvider);\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_signatureAlgorithm, algProv.toWebAlgorithm(this.asn.signatureAlgorithm), \"f\");\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_signatureAlgorithm, \"f\");\n    }\n    get signature() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_signature, \"f\")) {\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_signature, this.asn.signature, \"f\");\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_signature, \"f\");\n    }\n    get publicKey() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_publicKey, \"f\")) {\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_publicKey, new PublicKey(this.asn.certificationRequestInfo.subjectPKInfo), \"f\");\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_publicKey, \"f\");\n    }\n    get attributes() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_attributes, \"f\")) {\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_attributes, this.asn.certificationRequestInfo.attributes\n                .map(o => AttributeFactory.create(AsnConvert.serialize(o))), \"f\");\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_attributes, \"f\");\n    }\n    get extensions() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_extensions, \"f\")) {\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_extensions, [], \"f\");\n            const extensions = this.getAttribute(id_pkcs9_at_extensionRequest);\n            if (extensions instanceof ExtensionsAttribute) {\n                __classPrivateFieldSet(this, _Pkcs10CertificateRequest_extensions, extensions.items, \"f\");\n            }\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_extensions, \"f\");\n    }\n    get tbs() {\n        if (!__classPrivateFieldGet(this, _Pkcs10CertificateRequest_tbs, \"f\")) {\n            __classPrivateFieldSet(this, _Pkcs10CertificateRequest_tbs, this.asn.certificationRequestInfoRaw || AsnConvert.serialize(this.asn.certificationRequestInfo), \"f\");\n        }\n        return __classPrivateFieldGet(this, _Pkcs10CertificateRequest_tbs, \"f\");\n    }\n    constructor(param) {\n        const args = PemData.isAsnEncoded(param) ? [param, CertificationRequest] : [param];\n        super(args[0], args[1]);\n        _Pkcs10CertificateRequest_tbs.set(this, void 0);\n        _Pkcs10CertificateRequest_subjectName.set(this, void 0);\n        _Pkcs10CertificateRequest_subject.set(this, void 0);\n        _Pkcs10CertificateRequest_signatureAlgorithm.set(this, void 0);\n        _Pkcs10CertificateRequest_signature.set(this, void 0);\n        _Pkcs10CertificateRequest_publicKey.set(this, void 0);\n        _Pkcs10CertificateRequest_attributes.set(this, void 0);\n        _Pkcs10CertificateRequest_extensions.set(this, void 0);\n        this.tag = PemConverter.CertificateRequestTag;\n    }\n    onInit(_asn) {\n    }\n    getAttribute(type) {\n        for (const attr of this.attributes) {\n            if (attr.type === type) {\n                return attr;\n            }\n        }\n        return null;\n    }\n    getAttributes(type) {\n        return this.attributes.filter(o => o.type === type);\n    }\n    getExtension(type) {\n        for (const ext of this.extensions) {\n            if (ext.type === type) {\n                return ext;\n            }\n        }\n        return null;\n    }\n    getExtensions(type) {\n        return this.extensions.filter(o => o.type === type);\n    }\n    async verify(crypto = cryptoProvider.get()) {\n        const algorithm = { ...this.publicKey.algorithm, ...this.signatureAlgorithm };\n        const publicKey = await this.publicKey.export(algorithm, [\"verify\"], crypto);\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let signature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            signature = signatureFormatter.toWebSignature(algorithm, this.signature);\n            if (signature) {\n                break;\n            }\n        }\n        if (!signature) {\n            throw Error(\"Cannot convert WebCrypto signature value to ASN.1 format\");\n        }\n        const ok = await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\n        return ok;\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        const req = AsnConvert.parse(this.rawData, CertificationRequest);\n        const tbs = req.certificationRequestInfo;\n        const data = new TextObject(\"\", {\n            \"Version\": `${Version[tbs.version]} (${tbs.version})`,\n            \"Subject\": this.subject,\n            \"Subject Public Key Info\": this.publicKey,\n        });\n        if (this.attributes.length) {\n            const attrs = new TextObject(\"\");\n            for (const ext of this.attributes) {\n                const attrObj = ext.toTextObject();\n                attrs[attrObj[TextObject.NAME]] = attrObj;\n            }\n            data[\"Attributes\"] = attrs;\n        }\n        obj[\"Data\"] = data;\n        obj[\"Signature\"] = new TextObject(\"\", {\n            \"Algorithm\": TextConverter.serializeAlgorithm(req.signatureAlgorithm),\n            \"\": req.signature,\n        });\n        return obj;\n    }\n}\n_Pkcs10CertificateRequest_tbs = new WeakMap(), _Pkcs10CertificateRequest_subjectName = new WeakMap(), _Pkcs10CertificateRequest_subject = new WeakMap(), _Pkcs10CertificateRequest_signatureAlgorithm = new WeakMap(), _Pkcs10CertificateRequest_signature = new WeakMap(), _Pkcs10CertificateRequest_publicKey = new WeakMap(), _Pkcs10CertificateRequest_attributes = new WeakMap(), _Pkcs10CertificateRequest_extensions = new WeakMap();\nPkcs10CertificateRequest.NAME = \"PKCS#10 Certificate Request\";\n\nclass Pkcs10CertificateRequestGenerator {\n    static async create(params, crypto = cryptoProvider.get()) {\n        if (!params.keys.privateKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\n        }\n        if (!params.keys.publicKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'publicKey' is empty\");\n        }\n        const spki = await crypto.subtle.exportKey(\"spki\", params.keys.publicKey);\n        const asnReq = new CertificationRequest({\n            certificationRequestInfo: new CertificationRequestInfo({\n                subjectPKInfo: AsnConvert.parse(spki, SubjectPublicKeyInfo),\n            }),\n        });\n        if (params.name) {\n            const name = params.name instanceof Name\n                ? params.name\n                : new Name(params.name);\n            asnReq.certificationRequestInfo.subject = AsnConvert.parse(name.toArrayBuffer(), Name$1);\n        }\n        if (params.attributes) {\n            for (const o of params.attributes) {\n                asnReq.certificationRequestInfo.attributes.push(AsnConvert.parse(o.rawData, Attribute$1));\n            }\n        }\n        if (params.extensions && params.extensions.length) {\n            const attr = new Attribute$1({ type: id_pkcs9_at_extensionRequest });\n            const extensions = new Extensions();\n            for (const o of params.extensions) {\n                extensions.push(AsnConvert.parse(o.rawData, Extension$1));\n            }\n            attr.values.push(AsnConvert.serialize(extensions));\n            asnReq.certificationRequestInfo.attributes.push(attr);\n        }\n        const signingAlgorithm = { ...params.signingAlgorithm, ...params.keys.privateKey.algorithm };\n        const algProv = container.resolve(diAlgorithmProvider);\n        asnReq.signatureAlgorithm = algProv.toAsnAlgorithm(signingAlgorithm);\n        const tbs = AsnConvert.serialize(asnReq.certificationRequestInfo);\n        const signature = await crypto.subtle.sign(signingAlgorithm, params.keys.privateKey, tbs);\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let asnSignature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            asnSignature = signatureFormatter.toAsnSignature(signingAlgorithm, signature);\n            if (asnSignature) {\n                break;\n            }\n        }\n        if (!asnSignature) {\n            throw Error(\"Cannot convert WebCrypto signature value to ASN.1 format\");\n        }\n        asnReq.signature = asnSignature;\n        return new Pkcs10CertificateRequest(AsnConvert.serialize(asnReq));\n    }\n}\n\nvar _X509Certificate_tbs, _X509Certificate_serialNumber, _X509Certificate_subjectName, _X509Certificate_subject, _X509Certificate_issuerName, _X509Certificate_issuer, _X509Certificate_notBefore, _X509Certificate_notAfter, _X509Certificate_signatureAlgorithm, _X509Certificate_signature, _X509Certificate_extensions, _X509Certificate_publicKey;\nclass X509Certificate extends PemData {\n    get publicKey() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_publicKey, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_publicKey, new PublicKey(this.asn.tbsCertificate.subjectPublicKeyInfo), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_publicKey, \"f\");\n    }\n    get serialNumber() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_serialNumber, \"f\")) {\n            const tbs = this.asn.tbsCertificate;\n            let serialNumberBytes = new Uint8Array(tbs.serialNumber);\n            if (serialNumberBytes.length > 1 && serialNumberBytes[0] === 0x00 && serialNumberBytes[1] > 0x7F) {\n                serialNumberBytes = serialNumberBytes.slice(1);\n            }\n            __classPrivateFieldSet(this, _X509Certificate_serialNumber, Convert.ToHex(serialNumberBytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_serialNumber, \"f\");\n    }\n    get subjectName() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_subjectName, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_subjectName, new Name(this.asn.tbsCertificate.subject), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_subjectName, \"f\");\n    }\n    get subject() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_subject, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_subject, this.subjectName.toString(), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_subject, \"f\");\n    }\n    get issuerName() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_issuerName, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_issuerName, new Name(this.asn.tbsCertificate.issuer), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_issuerName, \"f\");\n    }\n    get issuer() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_issuer, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_issuer, this.issuerName.toString(), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_issuer, \"f\");\n    }\n    get notBefore() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_notBefore, \"f\")) {\n            const notBefore = this.asn.tbsCertificate.validity.notBefore.utcTime || this.asn.tbsCertificate.validity.notBefore.generalTime;\n            if (!notBefore) {\n                throw new Error(\"Cannot get 'notBefore' value\");\n            }\n            __classPrivateFieldSet(this, _X509Certificate_notBefore, notBefore, \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_notBefore, \"f\");\n    }\n    get notAfter() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_notAfter, \"f\")) {\n            const notAfter = this.asn.tbsCertificate.validity.notAfter.utcTime || this.asn.tbsCertificate.validity.notAfter.generalTime;\n            if (!notAfter) {\n                throw new Error(\"Cannot get 'notAfter' value\");\n            }\n            __classPrivateFieldSet(this, _X509Certificate_notAfter, notAfter, \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_notAfter, \"f\");\n    }\n    get signatureAlgorithm() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_signatureAlgorithm, \"f\")) {\n            const algProv = container.resolve(diAlgorithmProvider);\n            __classPrivateFieldSet(this, _X509Certificate_signatureAlgorithm, algProv.toWebAlgorithm(this.asn.signatureAlgorithm), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_signatureAlgorithm, \"f\");\n    }\n    get signature() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_signature, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_signature, this.asn.signatureValue, \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_signature, \"f\");\n    }\n    get extensions() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_extensions, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_extensions, [], \"f\");\n            if (this.asn.tbsCertificate.extensions) {\n                __classPrivateFieldSet(this, _X509Certificate_extensions, this.asn.tbsCertificate.extensions.map(o => ExtensionFactory.create(AsnConvert.serialize(o))), \"f\");\n            }\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_extensions, \"f\");\n    }\n    get tbs() {\n        if (!__classPrivateFieldGet(this, _X509Certificate_tbs, \"f\")) {\n            __classPrivateFieldSet(this, _X509Certificate_tbs, this.asn.tbsCertificateRaw || AsnConvert.serialize(this.asn.tbsCertificate), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Certificate_tbs, \"f\");\n    }\n    constructor(param) {\n        const args = PemData.isAsnEncoded(param) ? [param, Certificate] : [param];\n        super(args[0], args[1]);\n        _X509Certificate_tbs.set(this, void 0);\n        _X509Certificate_serialNumber.set(this, void 0);\n        _X509Certificate_subjectName.set(this, void 0);\n        _X509Certificate_subject.set(this, void 0);\n        _X509Certificate_issuerName.set(this, void 0);\n        _X509Certificate_issuer.set(this, void 0);\n        _X509Certificate_notBefore.set(this, void 0);\n        _X509Certificate_notAfter.set(this, void 0);\n        _X509Certificate_signatureAlgorithm.set(this, void 0);\n        _X509Certificate_signature.set(this, void 0);\n        _X509Certificate_extensions.set(this, void 0);\n        _X509Certificate_publicKey.set(this, void 0);\n        this.tag = PemConverter.CertificateTag;\n    }\n    onInit(_asn) {\n    }\n    getExtension(type) {\n        for (const ext of this.extensions) {\n            if (typeof type === \"string\") {\n                if (ext.type === type) {\n                    return ext;\n                }\n            }\n            else {\n                if (ext instanceof type) {\n                    return ext;\n                }\n            }\n        }\n        return null;\n    }\n    getExtensions(type) {\n        return this.extensions.filter(o => {\n            if (typeof type === \"string\") {\n                return o.type === type;\n            }\n            else {\n                return o instanceof type;\n            }\n        });\n    }\n    async verify(params = {}, crypto = cryptoProvider.get()) {\n        let keyAlgorithm;\n        let publicKey;\n        const paramsKey = params.publicKey;\n        try {\n            if (!paramsKey) {\n                keyAlgorithm = { ...this.publicKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = await this.publicKey.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else if (\"publicKey\" in paramsKey) {\n                keyAlgorithm = { ...paramsKey.publicKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = await paramsKey.publicKey.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else if (paramsKey instanceof PublicKey) {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = await paramsKey.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else if (BufferSourceConverter.isBufferSource(paramsKey)) {\n                const key = new PublicKey(paramsKey);\n                keyAlgorithm = { ...key.algorithm, ...this.signatureAlgorithm };\n                publicKey = await key.export(keyAlgorithm, [\"verify\"], crypto);\n            }\n            else {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = paramsKey;\n            }\n        }\n        catch (_e) {\n            return false;\n        }\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let signature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            signature = signatureFormatter.toWebSignature(keyAlgorithm, this.signature);\n            if (signature) {\n                break;\n            }\n        }\n        if (!signature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        const ok = await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\n        if (params.signatureOnly) {\n            return ok;\n        }\n        else {\n            const date = params.date || new Date();\n            const time = date.getTime();\n            return ok && this.notBefore.getTime() < time && time < this.notAfter.getTime();\n        }\n    }\n    async getThumbprint(...args) {\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args[0]) {\n            if (!args[0].subtle) {\n                algorithm = args[0] || algorithm;\n                crypto = args[1];\n            }\n            else {\n                crypto = args[0];\n            }\n        }\n        crypto !== null && crypto !== void 0 ? crypto : (crypto = cryptoProvider.get());\n        return await crypto.subtle.digest(algorithm, this.rawData);\n    }\n    async isSelfSigned(crypto = cryptoProvider.get()) {\n        return this.subject === this.issuer && await this.verify({ signatureOnly: true }, crypto);\n    }\n    toTextObject() {\n        const obj = this.toTextObjectEmpty();\n        const cert = AsnConvert.parse(this.rawData, Certificate);\n        const tbs = cert.tbsCertificate;\n        const data = new TextObject(\"\", {\n            \"Version\": `${Version[tbs.version]} (${tbs.version})`,\n            \"Serial Number\": tbs.serialNumber,\n            \"Signature Algorithm\": TextConverter.serializeAlgorithm(tbs.signature),\n            \"Issuer\": this.issuer,\n            \"Validity\": new TextObject(\"\", {\n                \"Not Before\": tbs.validity.notBefore.getTime(),\n                \"Not After\": tbs.validity.notAfter.getTime(),\n            }),\n            \"Subject\": this.subject,\n            \"Subject Public Key Info\": this.publicKey,\n        });\n        if (tbs.issuerUniqueID) {\n            data[\"Issuer Unique ID\"] = tbs.issuerUniqueID;\n        }\n        if (tbs.subjectUniqueID) {\n            data[\"Subject Unique ID\"] = tbs.subjectUniqueID;\n        }\n        if (this.extensions.length) {\n            const extensions = new TextObject(\"\");\n            for (const ext of this.extensions) {\n                const extObj = ext.toTextObject();\n                extensions[extObj[TextObject.NAME]] = extObj;\n            }\n            data[\"Extensions\"] = extensions;\n        }\n        obj[\"Data\"] = data;\n        obj[\"Signature\"] = new TextObject(\"\", {\n            \"Algorithm\": TextConverter.serializeAlgorithm(cert.signatureAlgorithm),\n            \"\": cert.signatureValue,\n        });\n        return obj;\n    }\n}\n_X509Certificate_tbs = new WeakMap(), _X509Certificate_serialNumber = new WeakMap(), _X509Certificate_subjectName = new WeakMap(), _X509Certificate_subject = new WeakMap(), _X509Certificate_issuerName = new WeakMap(), _X509Certificate_issuer = new WeakMap(), _X509Certificate_notBefore = new WeakMap(), _X509Certificate_notAfter = new WeakMap(), _X509Certificate_signatureAlgorithm = new WeakMap(), _X509Certificate_signature = new WeakMap(), _X509Certificate_extensions = new WeakMap(), _X509Certificate_publicKey = new WeakMap();\nX509Certificate.NAME = \"Certificate\";\n\nclass X509Certificates extends Array {\n    constructor(param) {\n        super();\n        if (PemData.isAsnEncoded(param)) {\n            this.import(param);\n        }\n        else if (param instanceof X509Certificate) {\n            this.push(param);\n        }\n        else if (Array.isArray(param)) {\n            for (const item of param) {\n                this.push(item);\n            }\n        }\n    }\n    export(format) {\n        const signedData = new asn1Cms.SignedData();\n        signedData.version = 1;\n        signedData.encapContentInfo.eContentType = asn1Cms.id_data;\n        signedData.encapContentInfo.eContent = new asn1Cms.EncapsulatedContent({\n            single: new OctetString(),\n        });\n        signedData.certificates = new asn1Cms.CertificateSet(this.map(o => new asn1Cms.CertificateChoices({\n            certificate: AsnConvert.parse(o.rawData, Certificate)\n        })));\n        const cms = new asn1Cms.ContentInfo({\n            contentType: asn1Cms.id_signedData,\n            content: AsnConvert.serialize(signedData),\n        });\n        const raw = AsnConvert.serialize(cms);\n        if (format === \"raw\") {\n            return raw;\n        }\n        return this.toString(format);\n    }\n    import(data) {\n        const raw = PemData.toArrayBuffer(data);\n        const cms = AsnConvert.parse(raw, asn1Cms.ContentInfo);\n        if (cms.contentType !== asn1Cms.id_signedData) {\n            throw new TypeError(\"Cannot parse CMS package. Incoming data is not a SignedData object.\");\n        }\n        const signedData = AsnConvert.parse(cms.content, asn1Cms.SignedData);\n        this.clear();\n        for (const item of signedData.certificates || []) {\n            if (item.certificate) {\n                this.push(new X509Certificate(item.certificate));\n            }\n        }\n    }\n    clear() {\n        while (this.pop()) {\n        }\n    }\n    toString(format = \"pem\") {\n        const raw = this.export(\"raw\");\n        switch (format) {\n            case \"pem\":\n                return PemConverter.encode(raw, \"CMS\");\n            case \"pem-chain\":\n                return this\n                    .map(o => o.toString(\"pem\"))\n                    .join(\"\\n\");\n            case \"asn\":\n                return AsnConvert.toString(raw);\n            case \"hex\":\n                return Convert.ToHex(raw);\n            case \"base64\":\n                return Convert.ToBase64(raw);\n            case \"base64url\":\n                return Convert.ToBase64Url(raw);\n            case \"text\":\n                return TextConverter.serialize(this.toTextObject());\n            default:\n                throw TypeError(\"Argument 'format' is unsupported value\");\n        }\n    }\n    toTextObject() {\n        const contentInfo = AsnConvert.parse(this.export(\"raw\"), asn1Cms.ContentInfo);\n        const signedData = AsnConvert.parse(contentInfo.content, asn1Cms.SignedData);\n        const obj = new TextObject(\"X509Certificates\", {\n            \"Content Type\": OidSerializer.toString(contentInfo.contentType),\n            \"Content\": new TextObject(\"\", {\n                \"Version\": `${asn1Cms.CMSVersion[signedData.version]} (${signedData.version})`,\n                \"Certificates\": new TextObject(\"\", { \"Certificate\": this.map(o => o.toTextObject()) }),\n            }),\n        });\n        return obj;\n    }\n}\n\nclass X509ChainBuilder {\n    constructor(params = {}) {\n        this.certificates = [];\n        if (params.certificates) {\n            this.certificates = params.certificates;\n        }\n    }\n    async build(cert, crypto = cryptoProvider.get()) {\n        const chain = new X509Certificates(cert);\n        let current = cert;\n        while (current = await this.findIssuer(current, crypto)) {\n            const thumbprint = await current.getThumbprint(crypto);\n            for (const item of chain) {\n                const thumbprint2 = await item.getThumbprint(crypto);\n                if (isEqual(thumbprint, thumbprint2)) {\n                    throw new Error(\"Cannot build a certificate chain. Circular dependency.\");\n                }\n            }\n            chain.push(current);\n        }\n        return chain;\n    }\n    async findIssuer(cert, crypto = cryptoProvider.get()) {\n        if (!await cert.isSelfSigned(crypto)) {\n            const akiExt = cert.getExtension(asn1X509.id_ce_authorityKeyIdentifier);\n            for (const item of this.certificates) {\n                if (item.subject !== cert.issuer) {\n                    continue;\n                }\n                if (akiExt) {\n                    if (akiExt.keyId) {\n                        const skiExt = item.getExtension(asn1X509.id_ce_subjectKeyIdentifier);\n                        if (skiExt && skiExt.keyId !== akiExt.keyId) {\n                            continue;\n                        }\n                    }\n                    else if (akiExt.certId) {\n                        const sanExt = item.getExtension(asn1X509.id_ce_subjectAltName);\n                        if (sanExt &&\n                            !(akiExt.certId.serialNumber === item.serialNumber && isEqual(AsnConvert.serialize(akiExt.certId.name), AsnConvert.serialize(sanExt)))) {\n                            continue;\n                        }\n                    }\n                }\n                try {\n                    const algorithm = { ...item.publicKey.algorithm, ...cert.signatureAlgorithm };\n                    const publicKey = await item.publicKey.export(algorithm, [\"verify\"], crypto);\n                    const ok = await cert.verify({ publicKey, signatureOnly: true }, crypto);\n                    if (!ok) {\n                        continue;\n                    }\n                }\n                catch (_e) {\n                    continue;\n                }\n                return item;\n            }\n        }\n        return null;\n    }\n}\n\nfunction generateCertificateSerialNumber(input, crypto = cryptoProvider.get()) {\n    const inputView = BufferSourceConverter.toUint8Array(Convert.FromHex(input || \"\"));\n    let serialNumber = inputView && inputView.length && inputView.some(o => o > 0)\n        ? new Uint8Array(inputView)\n        : undefined;\n    if (!serialNumber) {\n        serialNumber = crypto.getRandomValues(new Uint8Array(16));\n    }\n    let firstNonZero = 0;\n    while (firstNonZero < serialNumber.length - 1 && serialNumber[firstNonZero] === 0) {\n        firstNonZero++;\n    }\n    serialNumber = serialNumber.slice(firstNonZero);\n    if (serialNumber[0] > 0x7F) {\n        const newSerialNumber = new Uint8Array(serialNumber.length + 1);\n        newSerialNumber[0] = 0x00;\n        newSerialNumber.set(serialNumber, 1);\n        serialNumber = newSerialNumber;\n    }\n    return serialNumber.buffer;\n}\n\nclass X509CertificateGenerator {\n    static async createSelfSigned(params, crypto = cryptoProvider.get()) {\n        if (!params.keys.privateKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\n        }\n        if (!params.keys.publicKey) {\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'publicKey' is empty\");\n        }\n        return this.create({\n            serialNumber: params.serialNumber,\n            subject: params.name,\n            issuer: params.name,\n            notBefore: params.notBefore,\n            notAfter: params.notAfter,\n            publicKey: params.keys.publicKey,\n            signingKey: params.keys.privateKey,\n            signingAlgorithm: params.signingAlgorithm,\n            extensions: params.extensions,\n        }, crypto);\n    }\n    static async create(params, crypto = cryptoProvider.get()) {\n        var _a;\n        let spki;\n        if (params.publicKey instanceof PublicKey) {\n            spki = params.publicKey.rawData;\n        }\n        else if (\"publicKey\" in params.publicKey) {\n            spki = params.publicKey.publicKey.rawData;\n        }\n        else if (BufferSourceConverter.isBufferSource(params.publicKey)) {\n            spki = params.publicKey;\n        }\n        else {\n            spki = await crypto.subtle.exportKey(\"spki\", params.publicKey);\n        }\n        const serialNumber = generateCertificateSerialNumber(params.serialNumber);\n        const notBefore = params.notBefore || new Date();\n        const notAfter = params.notAfter || new Date(notBefore.getTime() + 31536000000);\n        const asnX509 = new asn1X509.Certificate({\n            tbsCertificate: new asn1X509.TBSCertificate({\n                version: asn1X509.Version.v3,\n                serialNumber,\n                validity: new asn1X509.Validity({\n                    notBefore,\n                    notAfter,\n                }),\n                extensions: new asn1X509.Extensions(((_a = params.extensions) === null || _a === void 0 ? void 0 : _a.map(o => AsnConvert.parse(o.rawData, asn1X509.Extension))) || []),\n                subjectPublicKeyInfo: AsnConvert.parse(spki, asn1X509.SubjectPublicKeyInfo),\n            }),\n        });\n        if (params.subject) {\n            const name = params.subject instanceof Name\n                ? params.subject\n                : new Name(params.subject);\n            asnX509.tbsCertificate.subject = AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name);\n        }\n        if (params.issuer) {\n            const name = params.issuer instanceof Name\n                ? params.issuer\n                : new Name(params.issuer);\n            asnX509.tbsCertificate.issuer = AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name);\n        }\n        const defaultSigningAlgorithm = {\n            hash: \"SHA-256\",\n        };\n        const signatureAlgorithm = (\"signingKey\" in params)\n            ? { ...defaultSigningAlgorithm, ...params.signingAlgorithm, ...params.signingKey.algorithm }\n            : { ...defaultSigningAlgorithm, ...params.signingAlgorithm };\n        const algProv = container.resolve(diAlgorithmProvider);\n        asnX509.tbsCertificate.signature = asnX509.signatureAlgorithm = algProv.toAsnAlgorithm(signatureAlgorithm);\n        const tbs = AsnConvert.serialize(asnX509.tbsCertificate);\n        const signatureValue = (\"signingKey\" in params)\n            ? await crypto.subtle.sign(signatureAlgorithm, params.signingKey, tbs)\n            : params.signature;\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let asnSignature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            asnSignature = signatureFormatter.toAsnSignature(signatureAlgorithm, signatureValue);\n            if (asnSignature) {\n                break;\n            }\n        }\n        if (!asnSignature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        asnX509.signatureValue = asnSignature;\n        return new X509Certificate(AsnConvert.serialize(asnX509));\n    }\n}\n\nvar _X509CrlEntry_serialNumber, _X509CrlEntry_revocationDate, _X509CrlEntry_reason, _X509CrlEntry_invalidity, _X509CrlEntry_extensions;\nvar X509CrlReason;\n(function (X509CrlReason) {\n    X509CrlReason[X509CrlReason[\"unspecified\"] = 0] = \"unspecified\";\n    X509CrlReason[X509CrlReason[\"keyCompromise\"] = 1] = \"keyCompromise\";\n    X509CrlReason[X509CrlReason[\"cACompromise\"] = 2] = \"cACompromise\";\n    X509CrlReason[X509CrlReason[\"affiliationChanged\"] = 3] = \"affiliationChanged\";\n    X509CrlReason[X509CrlReason[\"superseded\"] = 4] = \"superseded\";\n    X509CrlReason[X509CrlReason[\"cessationOfOperation\"] = 5] = \"cessationOfOperation\";\n    X509CrlReason[X509CrlReason[\"certificateHold\"] = 6] = \"certificateHold\";\n    X509CrlReason[X509CrlReason[\"removeFromCRL\"] = 8] = \"removeFromCRL\";\n    X509CrlReason[X509CrlReason[\"privilegeWithdrawn\"] = 9] = \"privilegeWithdrawn\";\n    X509CrlReason[X509CrlReason[\"aACompromise\"] = 10] = \"aACompromise\";\n})(X509CrlReason || (X509CrlReason = {}));\nclass X509CrlEntry extends AsnData {\n    get serialNumber() {\n        if (!__classPrivateFieldGet(this, _X509CrlEntry_serialNumber, \"f\")) {\n            __classPrivateFieldSet(this, _X509CrlEntry_serialNumber, Convert.ToHex(this.asn.userCertificate), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509CrlEntry_serialNumber, \"f\");\n    }\n    get revocationDate() {\n        if (!__classPrivateFieldGet(this, _X509CrlEntry_revocationDate, \"f\")) {\n            __classPrivateFieldSet(this, _X509CrlEntry_revocationDate, this.asn.revocationDate.getTime(), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509CrlEntry_revocationDate, \"f\");\n    }\n    get reason() {\n        if (__classPrivateFieldGet(this, _X509CrlEntry_reason, \"f\") === undefined) {\n            void this.extensions;\n        }\n        return __classPrivateFieldGet(this, _X509CrlEntry_reason, \"f\");\n    }\n    get invalidity() {\n        if (__classPrivateFieldGet(this, _X509CrlEntry_invalidity, \"f\") === undefined) {\n            void this.extensions;\n        }\n        return __classPrivateFieldGet(this, _X509CrlEntry_invalidity, \"f\");\n    }\n    get extensions() {\n        if (!__classPrivateFieldGet(this, _X509CrlEntry_extensions, \"f\")) {\n            __classPrivateFieldSet(this, _X509CrlEntry_extensions, [], \"f\");\n            if (this.asn.crlEntryExtensions) {\n                __classPrivateFieldSet(this, _X509CrlEntry_extensions, this.asn.crlEntryExtensions.map((o) => {\n                    const extension = ExtensionFactory.create(AsnConvert.serialize(o));\n                    switch (extension.type) {\n                        case id_ce_cRLReasons:\n                            if (__classPrivateFieldGet(this, _X509CrlEntry_reason, \"f\") === undefined) {\n                                __classPrivateFieldSet(this, _X509CrlEntry_reason, AsnConvert.parse(extension.value, CRLReason).reason, \"f\");\n                            }\n                            break;\n                        case id_ce_invalidityDate:\n                            if (__classPrivateFieldGet(this, _X509CrlEntry_invalidity, \"f\") === undefined) {\n                                __classPrivateFieldSet(this, _X509CrlEntry_invalidity, AsnConvert.parse(extension.value, InvalidityDate).value, \"f\");\n                            }\n                            break;\n                    }\n                    return extension;\n                }), \"f\");\n            }\n        }\n        return __classPrivateFieldGet(this, _X509CrlEntry_extensions, \"f\");\n    }\n    constructor(...args) {\n        let raw;\n        if (BufferSourceConverter.isBufferSource(args[0])) {\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\n        }\n        else if (typeof args[0] === \"string\") {\n            raw = AsnConvert.serialize(new RevokedCertificate({\n                userCertificate: generateCertificateSerialNumber(args[0]),\n                revocationDate: new Time(args[1]),\n                crlEntryExtensions: args[2],\n            }));\n        }\n        else if (args[0] instanceof RevokedCertificate) {\n            raw = args[0];\n        }\n        if (!raw) {\n            throw new TypeError(\"Cannot create X509CrlEntry instance. Wrong constructor arguments.\");\n        }\n        super(raw, RevokedCertificate);\n        _X509CrlEntry_serialNumber.set(this, void 0);\n        _X509CrlEntry_revocationDate.set(this, void 0);\n        _X509CrlEntry_reason.set(this, void 0);\n        _X509CrlEntry_invalidity.set(this, void 0);\n        _X509CrlEntry_extensions.set(this, void 0);\n    }\n    onInit(_asn) {\n    }\n}\n_X509CrlEntry_serialNumber = new WeakMap(), _X509CrlEntry_revocationDate = new WeakMap(), _X509CrlEntry_reason = new WeakMap(), _X509CrlEntry_invalidity = new WeakMap(), _X509CrlEntry_extensions = new WeakMap();\n\nvar _X509Crl_tbs, _X509Crl_signatureAlgorithm, _X509Crl_issuerName, _X509Crl_thisUpdate, _X509Crl_nextUpdate, _X509Crl_entries, _X509Crl_extensions;\nclass X509Crl extends PemData {\n    get version() {\n        return this.asn.tbsCertList.version;\n    }\n    get signatureAlgorithm() {\n        if (!__classPrivateFieldGet(this, _X509Crl_signatureAlgorithm, \"f\")) {\n            const algProv = container.resolve(diAlgorithmProvider);\n            __classPrivateFieldSet(this, _X509Crl_signatureAlgorithm, algProv.toWebAlgorithm(this.asn.signatureAlgorithm), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Crl_signatureAlgorithm, \"f\");\n    }\n    get signature() {\n        return this.asn.signature;\n    }\n    get issuer() {\n        return this.issuerName.toString();\n    }\n    get issuerName() {\n        if (!__classPrivateFieldGet(this, _X509Crl_issuerName, \"f\")) {\n            __classPrivateFieldSet(this, _X509Crl_issuerName, new Name(this.asn.tbsCertList.issuer), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Crl_issuerName, \"f\");\n    }\n    get thisUpdate() {\n        if (!__classPrivateFieldGet(this, _X509Crl_thisUpdate, \"f\")) {\n            const thisUpdate = this.asn.tbsCertList.thisUpdate.getTime();\n            if (!thisUpdate) {\n                throw new Error(\"Cannot get 'thisUpdate' value\");\n            }\n            __classPrivateFieldSet(this, _X509Crl_thisUpdate, thisUpdate, \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Crl_thisUpdate, \"f\");\n    }\n    get nextUpdate() {\n        var _a;\n        if (__classPrivateFieldGet(this, _X509Crl_nextUpdate, \"f\") === undefined) {\n            __classPrivateFieldSet(this, _X509Crl_nextUpdate, ((_a = this.asn.tbsCertList.nextUpdate) === null || _a === void 0 ? void 0 : _a.getTime()) || undefined, \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Crl_nextUpdate, \"f\");\n    }\n    get entries() {\n        var _a;\n        if (!__classPrivateFieldGet(this, _X509Crl_entries, \"f\")) {\n            __classPrivateFieldSet(this, _X509Crl_entries, ((_a = this.asn.tbsCertList.revokedCertificates) === null || _a === void 0 ? void 0 : _a.map(o => new X509CrlEntry(o))) || [], \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Crl_entries, \"f\");\n    }\n    get extensions() {\n        if (!__classPrivateFieldGet(this, _X509Crl_extensions, \"f\")) {\n            __classPrivateFieldSet(this, _X509Crl_extensions, [], \"f\");\n            if (this.asn.tbsCertList.crlExtensions) {\n                __classPrivateFieldSet(this, _X509Crl_extensions, this.asn.tbsCertList.crlExtensions.map((o) => ExtensionFactory.create(AsnConvert.serialize(o))), \"f\");\n            }\n        }\n        return __classPrivateFieldGet(this, _X509Crl_extensions, \"f\");\n    }\n    get tbs() {\n        if (!__classPrivateFieldGet(this, _X509Crl_tbs, \"f\")) {\n            __classPrivateFieldSet(this, _X509Crl_tbs, this.asn.tbsCertListRaw || AsnConvert.serialize(this.asn.tbsCertList), \"f\");\n        }\n        return __classPrivateFieldGet(this, _X509Crl_tbs, \"f\");\n    }\n    get tbsCertListSignatureAlgorithm() {\n        return this.asn.tbsCertList.signature;\n    }\n    get certListSignatureAlgorithm() {\n        return this.asn.signatureAlgorithm;\n    }\n    constructor(param) {\n        super(param, PemData.isAsnEncoded(param) ? CertificateList : undefined);\n        this.tag = PemConverter.CrlTag;\n        _X509Crl_tbs.set(this, void 0);\n        _X509Crl_signatureAlgorithm.set(this, void 0);\n        _X509Crl_issuerName.set(this, void 0);\n        _X509Crl_thisUpdate.set(this, void 0);\n        _X509Crl_nextUpdate.set(this, void 0);\n        _X509Crl_entries.set(this, void 0);\n        _X509Crl_extensions.set(this, void 0);\n    }\n    onInit(_asn) {\n    }\n    getExtension(type) {\n        for (const ext of this.extensions) {\n            if (typeof type === \"string\") {\n                if (ext.type === type) {\n                    return ext;\n                }\n            }\n            else {\n                if (ext instanceof type) {\n                    return ext;\n                }\n            }\n        }\n        return null;\n    }\n    getExtensions(type) {\n        return this.extensions.filter((o) => {\n            if (typeof type === \"string\") {\n                return o.type === type;\n            }\n            else {\n                return o instanceof type;\n            }\n        });\n    }\n    async verify(params, crypto = cryptoProvider.get()) {\n        if (!this.certListSignatureAlgorithm.isEqual(this.tbsCertListSignatureAlgorithm)) {\n            throw new Error(\"algorithm identifier in the sequence tbsCertList and CertificateList mismatch\");\n        }\n        let keyAlgorithm;\n        let publicKey;\n        const paramsKey = params.publicKey;\n        try {\n            if (paramsKey instanceof X509Certificate) {\n                keyAlgorithm = {\n                    ...paramsKey.publicKey.algorithm,\n                    ...paramsKey.signatureAlgorithm,\n                };\n                publicKey = await paramsKey.publicKey.export(keyAlgorithm, [\"verify\"]);\n            }\n            else if (paramsKey instanceof PublicKey) {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = await paramsKey.export(keyAlgorithm, [\"verify\"]);\n            }\n            else {\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\n                publicKey = paramsKey;\n            }\n        }\n        catch (_e) {\n            return false;\n        }\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let signature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            signature = signatureFormatter.toWebSignature(keyAlgorithm, this.signature);\n            if (signature) {\n                break;\n            }\n        }\n        if (!signature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        return await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\n    }\n    async getThumbprint(...args) {\n        let crypto;\n        let algorithm = \"SHA-1\";\n        if (args[0]) {\n            if (!args[0].subtle) {\n                algorithm = args[0] || algorithm;\n                crypto = args[1];\n            }\n            else {\n                crypto = args[0];\n            }\n        }\n        crypto !== null && crypto !== void 0 ? crypto : (crypto = cryptoProvider.get());\n        return await crypto.subtle.digest(algorithm, this.rawData);\n    }\n    findRevoked(certOrSerialNumber) {\n        const serialNumber = typeof certOrSerialNumber === \"string\" ? certOrSerialNumber : certOrSerialNumber.serialNumber;\n        const serialBuffer = generateCertificateSerialNumber(serialNumber);\n        for (const revoked of this.asn.tbsCertList.revokedCertificates || []) {\n            if (BufferSourceConverter.isEqual(revoked.userCertificate, serialBuffer)) {\n                return new X509CrlEntry(AsnConvert.serialize(revoked));\n            }\n        }\n        return null;\n    }\n}\n_X509Crl_tbs = new WeakMap(), _X509Crl_signatureAlgorithm = new WeakMap(), _X509Crl_issuerName = new WeakMap(), _X509Crl_thisUpdate = new WeakMap(), _X509Crl_nextUpdate = new WeakMap(), _X509Crl_entries = new WeakMap(), _X509Crl_extensions = new WeakMap();\n\nclass X509CrlGenerator {\n    static async create(params, crypto = cryptoProvider.get()) {\n        var _a;\n        const name = params.issuer instanceof Name\n            ? params.issuer\n            : new Name(params.issuer);\n        const asnX509Crl = new asn1X509.CertificateList({\n            tbsCertList: new asn1X509.TBSCertList({\n                version: asn1X509.Version.v2,\n                issuer: AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name),\n                thisUpdate: new Time(params.thisUpdate || new Date()),\n            }),\n        });\n        if (params.nextUpdate) {\n            asnX509Crl.tbsCertList.nextUpdate = new Time(params.nextUpdate);\n        }\n        if (params.extensions && params.extensions.length) {\n            asnX509Crl.tbsCertList.crlExtensions = new asn1X509.Extensions(params.extensions.map(o => AsnConvert.parse(o.rawData, asn1X509.Extension)) || []);\n        }\n        if (params.entries && params.entries.length) {\n            asnX509Crl.tbsCertList.revokedCertificates = [];\n            for (const entry of params.entries) {\n                const userCertificate = PemData.toArrayBuffer(entry.serialNumber);\n                const index = asnX509Crl.tbsCertList.revokedCertificates.findIndex(cert => isEqual(cert.userCertificate, userCertificate));\n                if (index > -1) {\n                    throw new Error(`Certificate serial number ${entry.serialNumber} already exists in tbsCertList`);\n                }\n                const revokedCert = new RevokedCertificate({\n                    userCertificate: userCertificate,\n                    revocationDate: new Time(entry.revocationDate || new Date())\n                });\n                if (\"extensions\" in entry && ((_a = entry.extensions) === null || _a === void 0 ? void 0 : _a.length)) {\n                    revokedCert.crlEntryExtensions = entry.extensions.map(o => AsnConvert.parse(o.rawData, asn1X509.Extension));\n                }\n                else {\n                    revokedCert.crlEntryExtensions = [];\n                }\n                if (!(entry instanceof X509CrlEntry)) {\n                    if (entry.reason) {\n                        revokedCert.crlEntryExtensions.push(new asn1X509.Extension({\n                            extnID: asn1X509.id_ce_cRLReasons,\n                            critical: false,\n                            extnValue: new OctetString(AsnConvert.serialize(new asn1X509.CRLReason(entry.reason))),\n                        }));\n                    }\n                    if (entry.invalidity) {\n                        revokedCert.crlEntryExtensions.push(new asn1X509.Extension({\n                            extnID: asn1X509.id_ce_invalidityDate,\n                            critical: false,\n                            extnValue: new OctetString(AsnConvert.serialize(new asn1X509.InvalidityDate(entry.invalidity))),\n                        }));\n                    }\n                    if (entry.issuer) {\n                        const name = params.issuer instanceof Name\n                            ? params.issuer\n                            : new Name(params.issuer);\n                        revokedCert.crlEntryExtensions.push(new asn1X509.Extension({\n                            extnID: asn1X509.id_ce_certificateIssuer,\n                            critical: false,\n                            extnValue: new OctetString(AsnConvert.serialize(AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name))),\n                        }));\n                    }\n                }\n                asnX509Crl.tbsCertList.revokedCertificates.push(revokedCert);\n            }\n        }\n        const signingAlgorithm = { ...params.signingAlgorithm, ...params.signingKey.algorithm };\n        const algProv = container.resolve(diAlgorithmProvider);\n        asnX509Crl.tbsCertList.signature = asnX509Crl.signatureAlgorithm = algProv.toAsnAlgorithm(signingAlgorithm);\n        const tbs = AsnConvert.serialize(asnX509Crl.tbsCertList);\n        const signature = await crypto.subtle.sign(signingAlgorithm, params.signingKey, tbs);\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\n        let asnSignature = null;\n        for (const signatureFormatter of signatureFormatters) {\n            asnSignature = signatureFormatter.toAsnSignature(signingAlgorithm, signature);\n            if (asnSignature) {\n                break;\n            }\n        }\n        if (!asnSignature) {\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\n        }\n        asnX509Crl.signature = asnSignature;\n        return new X509Crl(AsnConvert.serialize(asnX509Crl));\n    }\n}\n\nExtensionFactory.register(asn1X509.id_ce_basicConstraints, BasicConstraintsExtension);\nExtensionFactory.register(asn1X509.id_ce_extKeyUsage, ExtendedKeyUsageExtension);\nExtensionFactory.register(asn1X509.id_ce_keyUsage, KeyUsagesExtension);\nExtensionFactory.register(asn1X509.id_ce_subjectKeyIdentifier, SubjectKeyIdentifierExtension);\nExtensionFactory.register(asn1X509.id_ce_authorityKeyIdentifier, AuthorityKeyIdentifierExtension);\nExtensionFactory.register(asn1X509.id_ce_subjectAltName, SubjectAlternativeNameExtension);\nExtensionFactory.register(asn1X509.id_ce_cRLDistributionPoints, CRLDistributionPointsExtension);\nExtensionFactory.register(asn1X509.id_pe_authorityInfoAccess, AuthorityInfoAccessExtension);\nExtensionFactory.register(asn1X509.id_ce_issuerAltName, IssuerAlternativeNameExtension);\nAttributeFactory.register(asnPkcs9.id_pkcs9_at_challengePassword, ChallengePasswordAttribute);\nAttributeFactory.register(asnPkcs9.id_pkcs9_at_extensionRequest, ExtensionsAttribute);\ncontainer.registerSingleton(diAsnSignatureFormatter, AsnDefaultSignatureFormatter);\ncontainer.registerSingleton(diAsnSignatureFormatter, AsnEcSignatureFormatter);\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-256\", 32);\nAsnEcSignatureFormatter.namedCurveSize.set(\"K-256\", 32);\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-384\", 48);\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-521\", 66);\n\nexport { AlgorithmProvider, AsnData, AsnDefaultSignatureFormatter, AsnEcSignatureFormatter, Attribute, AttributeFactory, AuthorityInfoAccessExtension, AuthorityKeyIdentifierExtension, BasicConstraintsExtension, CRLDistributionPointsExtension, CertificatePolicyExtension, ChallengePasswordAttribute, CryptoProvider, DN, DNS, DefaultAlgorithmSerializer, EMAIL, EcAlgorithm, EdAlgorithm, ExtendedKeyUsage, ExtendedKeyUsageExtension, Extension, ExtensionFactory, ExtensionsAttribute, GUID, GeneralName, GeneralNames, IP, IssuerAlternativeNameExtension, KeyUsageFlags, KeyUsagesExtension, Name, NameIdentifier, OidSerializer, PemConverter, PemData, Pkcs10CertificateRequest, Pkcs10CertificateRequestGenerator, PublicKey, REGISTERED_ID, RsaAlgorithm, ShaAlgorithm, SubjectAlternativeNameExtension, SubjectKeyIdentifierExtension, TextConverter, TextObject, UPN, URL, X509Certificate, X509CertificateGenerator, X509Certificates, X509ChainBuilder, X509Crl, X509CrlEntry, X509CrlGenerator, X509CrlReason, cryptoProvider, diAlgorithm, diAlgorithmProvider, diAsnSignatureFormatter, idEd25519, idEd448, idX25519, idX448 };\n", "/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\n    if (typeof BigInt === \"undefined\") {\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\n    }\n}\nfunction concat(buffers) {\n    let outputLength = 0;\n    let prevLength = 0;\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        outputLength += buffer.byteLength;\n    }\n    const retView = new Uint8Array(outputLength);\n    for (let i = 0; i < buffers.length; i++) {\n        const buffer = buffers[i];\n        retView.set(new Uint8Array(buffer), prevLength);\n        prevLength += buffer.byteLength;\n    }\n    return retView.buffer;\n}\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\n    if (!(inputBuffer instanceof Uint8Array)) {\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\n        return false;\n    }\n    if (!inputBuffer.byteLength) {\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\n        return false;\n    }\n    if (inputOffset < 0) {\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\n        return false;\n    }\n    if (inputLength < 0) {\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\n        return false;\n    }\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n        return false;\n    }\n    return true;\n}\n\nclass ViewWriter {\n    constructor() {\n        this.items = [];\n    }\n    write(buf) {\n        this.items.push(buf);\n    }\n    final() {\n        return concat(this.items);\n    }\n}\n\nconst powers2 = [new Uint8Array([1])];\nconst digitsString = \"0123456789\";\nconst NAME = \"name\";\nconst VALUE_HEX_VIEW = \"valueHexView\";\nconst IS_HEX_ONLY = \"isHexOnly\";\nconst ID_BLOCK = \"idBlock\";\nconst TAG_CLASS = \"tagClass\";\nconst TAG_NUMBER = \"tagNumber\";\nconst IS_CONSTRUCTED = \"isConstructed\";\nconst FROM_BER = \"fromBER\";\nconst TO_BER = \"toBER\";\nconst LOCAL = \"local\";\nconst EMPTY_STRING = \"\";\nconst EMPTY_BUFFER = new ArrayBuffer(0);\nconst EMPTY_VIEW = new Uint8Array(0);\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\nconst OCTET_STRING_NAME = \"OCTET STRING\";\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\n    var _a;\n    return _a = class Some extends BaseClass {\n            get valueHex() {\n                return this.valueHexView.slice().buffer;\n            }\n            set valueHex(value) {\n                this.valueHexView = new Uint8Array(value);\n            }\n            constructor(...args) {\n                var _b;\n                super(...args);\n                const params = args[0] || {};\n                this.isHexOnly = (_b = params.isHexOnly) !== null && _b !== void 0 ? _b : false;\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\n            }\n            fromBER(inputBuffer, inputOffset, inputLength) {\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n                    return -1;\n                }\n                const endLength = inputOffset + inputLength;\n                this.valueHexView = view.subarray(inputOffset, endLength);\n                if (!this.valueHexView.length) {\n                    this.warnings.push(\"Zero buffer length\");\n                    return inputOffset;\n                }\n                this.blockLength = inputLength;\n                return endLength;\n            }\n            toBER(sizeOnly = false) {\n                if (!this.isHexOnly) {\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\n                    return EMPTY_BUFFER;\n                }\n                if (sizeOnly) {\n                    return new ArrayBuffer(this.valueHexView.byteLength);\n                }\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\n                    ? this.valueHexView.buffer\n                    : this.valueHexView.slice().buffer;\n            }\n            toJSON() {\n                return {\n                    ...super.toJSON(),\n                    isHexOnly: this.isHexOnly,\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\n                };\n            }\n        },\n        _a.NAME = \"hexBlock\",\n        _a;\n}\n\nclass LocalBaseBlock {\n    static blockName() {\n        return this.NAME;\n    }\n    get valueBeforeDecode() {\n        return this.valueBeforeDecodeView.slice().buffer;\n    }\n    set valueBeforeDecode(value) {\n        this.valueBeforeDecodeView = new Uint8Array(value);\n    }\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\n        this.blockLength = blockLength;\n        this.error = error;\n        this.warnings = warnings;\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\n    }\n    toJSON() {\n        return {\n            blockName: this.constructor.NAME,\n            blockLength: this.blockLength,\n            error: this.error,\n            warnings: this.warnings,\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\n        };\n    }\n}\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\n    fromBER(_inputBuffer, _inputOffset, _inputLength) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n    toBER(_sizeOnly, _writer) {\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\n    }\n}\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ idBlock = {} } = {}) {\n        var _a, _b, _c, _d;\n        super();\n        if (idBlock) {\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\n            this.valueHexView = idBlock.valueHex\n                ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex)\n                : EMPTY_VIEW;\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\n        }\n        else {\n            this.tagClass = -1;\n            this.tagNumber = -1;\n            this.isConstructed = false;\n        }\n    }\n    toBER(sizeOnly = false) {\n        let firstOctet = 0;\n        switch (this.tagClass) {\n            case 1:\n                firstOctet |= 0x00;\n                break;\n            case 2:\n                firstOctet |= 0x40;\n                break;\n            case 3:\n                firstOctet |= 0x80;\n                break;\n            case 4:\n                firstOctet |= 0xC0;\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return EMPTY_BUFFER;\n        }\n        if (this.isConstructed)\n            firstOctet |= 0x20;\n        if (this.tagNumber < 31 && !this.isHexOnly) {\n            const retView = new Uint8Array(1);\n            if (!sizeOnly) {\n                let number = this.tagNumber;\n                number &= 0x1F;\n                firstOctet |= number;\n                retView[0] = firstOctet;\n            }\n            return retView.buffer;\n        }\n        if (!this.isHexOnly) {\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\n            const encodedView = new Uint8Array(encodedBuf);\n            const size = encodedBuf.byteLength;\n            const retView = new Uint8Array(size + 1);\n            retView[0] = (firstOctet | 0x1F);\n            if (!sizeOnly) {\n                for (let i = 0; i < (size - 1); i++)\n                    retView[i + 1] = encodedView[i] | 0x80;\n                retView[size] = encodedView[size - 1];\n            }\n            return retView.buffer;\n        }\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\n        retView[0] = (firstOctet | 0x1F);\n        if (!sizeOnly) {\n            const curView = this.valueHexView;\n            for (let i = 0; i < (curView.length - 1); i++)\n                retView[i + 1] = curView[i] | 0x80;\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\n        }\n        return retView.buffer;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        const tagClassMask = intBuffer[0] & 0xC0;\n        switch (tagClassMask) {\n            case 0x00:\n                this.tagClass = (1);\n                break;\n            case 0x40:\n                this.tagClass = (2);\n                break;\n            case 0x80:\n                this.tagClass = (3);\n                break;\n            case 0xC0:\n                this.tagClass = (4);\n                break;\n            default:\n                this.error = \"Unknown tag class\";\n                return -1;\n        }\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\n        this.isHexOnly = false;\n        const tagNumberMask = intBuffer[0] & 0x1F;\n        if (tagNumberMask !== 0x1F) {\n            this.tagNumber = (tagNumberMask);\n            this.blockLength = 1;\n        }\n        else {\n            let count = 1;\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\n            let tagNumberBufferMaxLength = 255;\n            while (intBuffer[count] & 0x80) {\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n                count++;\n                if (count >= intBuffer.length) {\n                    this.error = \"End of input reached before message was fully decoded\";\n                    return -1;\n                }\n                if (count === tagNumberBufferMaxLength) {\n                    tagNumberBufferMaxLength += 255;\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\n                        tempBufferView[i] = intTagNumberBuffer[i];\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\n                }\n            }\n            this.blockLength = (count + 1);\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n            const tempBufferView = new Uint8Array(count);\n            for (let i = 0; i < count; i++)\n                tempBufferView[i] = intTagNumberBuffer[i];\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\n            intTagNumberBuffer.set(tempBufferView);\n            if (this.blockLength <= 9)\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\n            else {\n                this.isHexOnly = true;\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\n            }\n        }\n        if (((this.tagClass === 1))\n            && (this.isConstructed)) {\n            switch (this.tagNumber) {\n                case 1:\n                case 2:\n                case 5:\n                case 6:\n                case 9:\n                case 13:\n                case 14:\n                case 23:\n                case 24:\n                case 31:\n                case 32:\n                case 33:\n                case 34:\n                    this.error = \"Constructed encoding used for primitive type\";\n                    return -1;\n            }\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            tagClass: this.tagClass,\n            tagNumber: this.tagNumber,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\n    constructor({ lenBlock = {} } = {}) {\n        var _a, _b, _c;\n        super();\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\n        if (intBuffer.length === 0) {\n            this.error = \"Zero buffer length\";\n            return -1;\n        }\n        if (intBuffer[0] === 0xFF) {\n            this.error = \"Length block 0xFF is reserved by standard\";\n            return -1;\n        }\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\n        if (this.isIndefiniteForm) {\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\n        if (this.longFormUsed === false) {\n            this.length = (intBuffer[0]);\n            this.blockLength = 1;\n            return (inputOffset + this.blockLength);\n        }\n        const count = intBuffer[0] & 0x7F;\n        if (count > 8) {\n            this.error = \"Too big integer\";\n            return -1;\n        }\n        if ((count + 1) > intBuffer.length) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        const lenOffset = inputOffset + 1;\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\n        if (lengthBufferView[count - 1] === 0x00)\n            this.warnings.push(\"Needlessly long encoded length\");\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\n        if (this.longFormUsed && (this.length <= 127))\n            this.warnings.push(\"Unnecessary usage of long length form\");\n        this.blockLength = count + 1;\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly = false) {\n        let retBuf;\n        let retView;\n        if (this.length > 127)\n            this.longFormUsed = true;\n        if (this.isIndefiniteForm) {\n            retBuf = new ArrayBuffer(1);\n            if (sizeOnly === false) {\n                retView = new Uint8Array(retBuf);\n                retView[0] = 0x80;\n            }\n            return retBuf;\n        }\n        if (this.longFormUsed) {\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\n            if (encodedBuf.byteLength > 127) {\n                this.error = \"Too big length\";\n                return (EMPTY_BUFFER);\n            }\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\n            if (sizeOnly)\n                return retBuf;\n            const encodedView = new Uint8Array(encodedBuf);\n            retView = new Uint8Array(retBuf);\n            retView[0] = encodedBuf.byteLength | 0x80;\n            for (let i = 0; i < encodedBuf.byteLength; i++)\n                retView[i + 1] = encodedView[i];\n            return retBuf;\n        }\n        retBuf = new ArrayBuffer(1);\n        if (sizeOnly === false) {\n            retView = new Uint8Array(retBuf);\n            retView[0] = this.length;\n        }\n        return retBuf;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            longFormUsed: this.longFormUsed,\n            length: this.length,\n        };\n    }\n}\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\n        super(parameters);\n        this.name = name;\n        this.optional = optional;\n        if (primitiveSchema) {\n            this.primitiveSchema = primitiveSchema;\n        }\n        this.idBlock = new LocalIdentificationBlock(parameters);\n        this.lenBlock = new LocalLengthBlock(parameters);\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        if (!writer) {\n            prepareIndefiniteForm(this);\n        }\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\n        _writer.write(idBlockBuf);\n        if (this.lenBlock.isIndefiniteForm) {\n            _writer.write(new Uint8Array([0x80]).buffer);\n            this.valueBlock.toBER(sizeOnly, _writer);\n            _writer.write(new ArrayBuffer(2));\n        }\n        else {\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\n            this.lenBlock.length = valueBlockBuf.byteLength;\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\n            _writer.write(lenBlockBuf);\n            _writer.write(valueBlockBuf);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            idBlock: this.idBlock.toJSON(),\n            lenBlock: this.lenBlock.toJSON(),\n            valueBlock: this.valueBlock.toJSON(),\n            name: this.name,\n            optional: this.optional,\n        };\n        if (this.primitiveSchema)\n            object.primitiveSchema = this.primitiveSchema.toJSON();\n        return object;\n    }\n    toString(encoding = \"ascii\") {\n        if (encoding === \"ascii\") {\n            return this.onAsciiEncoding();\n        }\n        return pvtsutils.Convert.ToHex(this.toBER());\n    }\n    onAsciiEncoding() {\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView);\n        return `${name} : ${value}`;\n    }\n    isEqual(other) {\n        if (this === other) {\n            return true;\n        }\n        if (!(other instanceof this.constructor)) {\n            return false;\n        }\n        const thisRaw = this.toBER();\n        const otherRaw = other.toBER();\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\n    }\n}\nBaseBlock.NAME = \"BaseBlock\";\nfunction prepareIndefiniteForm(baseBlock) {\n    var _a;\n    if (baseBlock instanceof typeStore.Constructed) {\n        for (const value of baseBlock.valueBlock.value) {\n            if (prepareIndefiniteForm(value)) {\n                baseBlock.lenBlock.isIndefiniteForm = true;\n            }\n        }\n    }\n    return !!((_a = baseBlock.lenBlock) === null || _a === void 0 ? void 0 : _a.isIndefiniteForm);\n}\n\nclass BaseStringBlock extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\n        super(parameters, stringValueBlockType);\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm)\n            ? inputLength\n            : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        this.fromBuffer(this.valueBlock.valueHexView);\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\n    }\n}\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\n    constructor({ isHexOnly = true, ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = isHexOnly;\n    }\n}\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\nclass Primitive extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalPrimitiveValueBlock);\n        this.idBlock.isConstructed = false;\n    }\n}\n_a$w = Primitive;\n(() => {\n    typeStore.Primitive = _a$w;\n})();\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\n    if (inputObject instanceof newType) {\n        return inputObject;\n    }\n    const newObject = new newType();\n    newObject.idBlock = inputObject.idBlock;\n    newObject.lenBlock = inputObject.lenBlock;\n    newObject.warnings = inputObject.warnings;\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\n    return newObject;\n}\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\n    const incomingOffset = inputOffset;\n    let returnObject = new BaseBlock({}, ValueBlock);\n    const baseBlock = new LocalBaseBlock();\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\n        returnObject.error = baseBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\n    if (!intBuffer.length) {\n        returnObject.error = \"Zero buffer length\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.idBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.idBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.idBlock.blockLength;\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\n    if (returnObject.lenBlock.warnings.length) {\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\n    }\n    if (resultOffset === -1) {\n        returnObject.error = returnObject.lenBlock.error;\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    inputOffset = resultOffset;\n    inputLength -= returnObject.lenBlock.blockLength;\n    if (!returnObject.idBlock.isConstructed\n        && returnObject.lenBlock.isIndefiniteForm) {\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\n        return {\n            offset: -1,\n            result: returnObject,\n        };\n    }\n    let newASN1Type = BaseBlock;\n    switch (returnObject.idBlock.tagClass) {\n        case 1:\n            if ((returnObject.idBlock.tagNumber >= 37)\n                && (returnObject.idBlock.isHexOnly === false)) {\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\n                return {\n                    offset: -1,\n                    result: returnObject,\n                };\n            }\n            switch (returnObject.idBlock.tagNumber) {\n                case 0:\n                    if ((returnObject.idBlock.isConstructed)\n                        && (returnObject.lenBlock.length > 0)) {\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\n                        return {\n                            offset: -1,\n                            result: returnObject,\n                        };\n                    }\n                    newASN1Type = typeStore.EndOfContent;\n                    break;\n                case 1:\n                    newASN1Type = typeStore.Boolean;\n                    break;\n                case 2:\n                    newASN1Type = typeStore.Integer;\n                    break;\n                case 3:\n                    newASN1Type = typeStore.BitString;\n                    break;\n                case 4:\n                    newASN1Type = typeStore.OctetString;\n                    break;\n                case 5:\n                    newASN1Type = typeStore.Null;\n                    break;\n                case 6:\n                    newASN1Type = typeStore.ObjectIdentifier;\n                    break;\n                case 10:\n                    newASN1Type = typeStore.Enumerated;\n                    break;\n                case 12:\n                    newASN1Type = typeStore.Utf8String;\n                    break;\n                case 13:\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\n                    break;\n                case 14:\n                    newASN1Type = typeStore.TIME;\n                    break;\n                case 15:\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\n                    return {\n                        offset: -1,\n                        result: returnObject,\n                    };\n                case 16:\n                    newASN1Type = typeStore.Sequence;\n                    break;\n                case 17:\n                    newASN1Type = typeStore.Set;\n                    break;\n                case 18:\n                    newASN1Type = typeStore.NumericString;\n                    break;\n                case 19:\n                    newASN1Type = typeStore.PrintableString;\n                    break;\n                case 20:\n                    newASN1Type = typeStore.TeletexString;\n                    break;\n                case 21:\n                    newASN1Type = typeStore.VideotexString;\n                    break;\n                case 22:\n                    newASN1Type = typeStore.IA5String;\n                    break;\n                case 23:\n                    newASN1Type = typeStore.UTCTime;\n                    break;\n                case 24:\n                    newASN1Type = typeStore.GeneralizedTime;\n                    break;\n                case 25:\n                    newASN1Type = typeStore.GraphicString;\n                    break;\n                case 26:\n                    newASN1Type = typeStore.VisibleString;\n                    break;\n                case 27:\n                    newASN1Type = typeStore.GeneralString;\n                    break;\n                case 28:\n                    newASN1Type = typeStore.UniversalString;\n                    break;\n                case 29:\n                    newASN1Type = typeStore.CharacterString;\n                    break;\n                case 30:\n                    newASN1Type = typeStore.BmpString;\n                    break;\n                case 31:\n                    newASN1Type = typeStore.DATE;\n                    break;\n                case 32:\n                    newASN1Type = typeStore.TimeOfDay;\n                    break;\n                case 33:\n                    newASN1Type = typeStore.DateTime;\n                    break;\n                case 34:\n                    newASN1Type = typeStore.Duration;\n                    break;\n                default: {\n                    const newObject = returnObject.idBlock.isConstructed\n                        ? new typeStore.Constructed()\n                        : new typeStore.Primitive();\n                    newObject.idBlock = returnObject.idBlock;\n                    newObject.lenBlock = returnObject.lenBlock;\n                    newObject.warnings = returnObject.warnings;\n                    returnObject = newObject;\n                }\n            }\n            break;\n        case 2:\n        case 3:\n        case 4:\n        default: {\n            newASN1Type = returnObject.idBlock.isConstructed\n                ? typeStore.Constructed\n                : typeStore.Primitive;\n        }\n    }\n    returnObject = localChangeType(returnObject, newASN1Type);\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\n    return {\n        offset: resultOffset,\n        result: returnObject,\n    };\n}\nfunction fromBER(inputBuffer) {\n    if (!inputBuffer.byteLength) {\n        const result = new BaseBlock({}, ValueBlock);\n        result.error = \"Input buffer has zero length\";\n        return {\n            offset: -1,\n            result,\n        };\n    }\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\n}\n\nfunction checkLen(indefiniteLength, length) {\n    if (indefiniteLength) {\n        return 1;\n    }\n    return length;\n}\nclass LocalConstructedValueBlock extends ValueBlock {\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.isIndefiniteForm = isIndefiniteForm;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\n        if (this.valueBeforeDecodeView.length === 0) {\n            this.warnings.push(\"Zero buffer length\");\n            return inputOffset;\n        }\n        let currentOffset = inputOffset;\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\n            const returnObject = localFromBER(view, currentOffset, inputLength);\n            if (returnObject.offset === -1) {\n                this.error = returnObject.result.error;\n                this.warnings.concat(returnObject.result.warnings);\n                return -1;\n            }\n            currentOffset = returnObject.offset;\n            this.blockLength += returnObject.result.blockLength;\n            inputLength -= returnObject.result.blockLength;\n            this.value.push(returnObject.result);\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\n                break;\n            }\n        }\n        if (this.isIndefiniteForm) {\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\n                this.value.pop();\n            }\n            else {\n                this.warnings.push(\"No EndOfContent block encoded\");\n            }\n        }\n        return currentOffset;\n    }\n    toBER(sizeOnly, writer) {\n        const _writer = writer || new ViewWriter();\n        for (let i = 0; i < this.value.length; i++) {\n            this.value[i].toBER(sizeOnly, _writer);\n        }\n        if (!writer) {\n            return _writer.final();\n        }\n        return EMPTY_BUFFER;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            isIndefiniteForm: this.isIndefiniteForm,\n            value: [],\n        };\n        for (const value of this.value) {\n            object.value.push(value.toJSON());\n        }\n        return object;\n    }\n}\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\nclass Constructed extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalConstructedValueBlock);\n        this.idBlock.isConstructed = true;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\n        if (resultOffset === -1) {\n            this.error = this.valueBlock.error;\n            return resultOffset;\n        }\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        if (!this.valueBlock.error.length)\n            this.blockLength += this.valueBlock.blockLength;\n        return resultOffset;\n    }\n    onAsciiEncoding() {\n        const values = [];\n        for (const value of this.valueBlock.value) {\n            values.push(value.toString(\"ascii\").split(\"\\n\").map((o) => `  ${o}`).join(\"\\n\"));\n        }\n        const blockName = this.idBlock.tagClass === 3\n            ? `[${this.idBlock.tagNumber}]`\n            : this.constructor.NAME;\n        return values.length\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\n            : `${blockName} :`;\n    }\n}\n_a$v = Constructed;\n(() => {\n    typeStore.Constructed = _a$v;\n})();\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\n    fromBER(inputBuffer, inputOffset, _inputLength) {\n        return inputOffset;\n    }\n    toBER(_sizeOnly) {\n        return EMPTY_BUFFER;\n    }\n}\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\nclass EndOfContent extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalEndOfContentValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 0;\n    }\n}\n_a$u = EndOfContent;\n(() => {\n    typeStore.EndOfContent = _a$u;\n})();\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\nclass Null extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, ValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 5;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (this.lenBlock.length > 0)\n            this.warnings.push(\"Non-zero length of value block for Null type\");\n        if (!this.idBlock.error.length)\n            this.blockLength += this.idBlock.blockLength;\n        if (!this.lenBlock.error.length)\n            this.blockLength += this.lenBlock.blockLength;\n        this.blockLength += inputLength;\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n            return -1;\n        }\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        const retBuf = new ArrayBuffer(2);\n        if (!sizeOnly) {\n            const retView = new Uint8Array(retBuf);\n            retView[0] = 0x05;\n            retView[1] = 0x00;\n        }\n        if (writer) {\n            writer.write(retBuf);\n        }\n        return retBuf;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME}`;\n    }\n}\n_a$t = Null;\n(() => {\n    typeStore.Null = _a$t;\n})();\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\n    get value() {\n        for (const octet of this.valueHexView) {\n            if (octet > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    set value(value) {\n        this.valueHexView[0] = value ? 0xFF : 0x00;\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        if (parameters.valueHex) {\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\n        }\n        else {\n            this.valueHexView = new Uint8Array(1);\n        }\n        if (value) {\n            this.value = value;\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\n        if (inputLength > 1)\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\n        this.isHexOnly = true;\n        pvutils.utilDecodeTC.call(this);\n        this.blockLength = inputLength;\n        return (inputOffset + inputLength);\n    }\n    toBER() {\n        return this.valueHexView.slice();\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\nclass Boolean extends BaseBlock {\n    getValue() {\n        return this.valueBlock.value;\n    }\n    setValue(value) {\n        this.valueBlock.value = value;\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalBooleanValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 1;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.getValue}`;\n    }\n}\n_a$s = Boolean;\n(() => {\n    typeStore.Boolean = _a$s;\n})();\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.isConstructed = isConstructed;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = 0;\n        if (this.isConstructed) {\n            this.isHexOnly = false;\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (let i = 0; i < this.value.length; i++) {\n                const currentBlockName = this.value[i].constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== OCTET_STRING_NAME) {\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\n                    return -1;\n                }\n            }\n        }\n        else {\n            this.isHexOnly = true;\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n            this.blockLength = inputLength;\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed)\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.byteLength)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\nclass OctetString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalOctetStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 4;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        if (inputLength === 0) {\n            if (this.idBlock.error.length === 0)\n                this.blockLength += this.idBlock.blockLength;\n            if (this.lenBlock.error.length === 0)\n                this.blockLength += this.lenBlock.blockLength;\n            return inputOffset;\n        }\n        if (!this.valueBlock.isConstructed) {\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\n                        this.valueBlock.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        const name = this.constructor.NAME;\n        const value = pvtsutils.Convert.ToHex(this.valueBlock.valueHexView);\n        return `${name} : ${value}`;\n    }\n    getValue() {\n        if (!this.idBlock.isConstructed) {\n            return this.valueBlock.valueHexView.slice().buffer;\n        }\n        const array = [];\n        for (const content of this.valueBlock.value) {\n            if (content instanceof _a$r) {\n                array.push(content.valueBlock.valueHexView);\n            }\n        }\n        return pvtsutils.BufferSourceConverter.concat(array);\n    }\n}\n_a$r = OctetString;\n(() => {\n    typeStore.OctetString = _a$r;\n})();\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\n        super(parameters);\n        this.unusedBits = unusedBits;\n        this.isConstructed = isConstructed;\n        this.blockLength = this.valueHexView.byteLength;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        let resultOffset = -1;\n        if (this.isConstructed) {\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n            if (resultOffset === -1)\n                return resultOffset;\n            for (const value of this.value) {\n                const currentBlockName = value.constructor.NAME;\n                if (currentBlockName === END_OF_CONTENT_NAME) {\n                    if (this.isIndefiniteForm)\n                        break;\n                    else {\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\n                        return -1;\n                    }\n                }\n                if (currentBlockName !== BIT_STRING_NAME) {\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\n                    return -1;\n                }\n                const valueBlock = value.valueBlock;\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\n                    return -1;\n                }\n                this.unusedBits = valueBlock.unusedBits;\n            }\n            return resultOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.unusedBits = intBuffer[0];\n        if (this.unusedBits > 7) {\n            this.error = \"Unused bits for BitString must be in range 0-7\";\n            return -1;\n        }\n        if (!this.unusedBits) {\n            const buf = intBuffer.subarray(1);\n            try {\n                if (buf.byteLength) {\n                    const asn = localFromBER(buf, 0, buf.byteLength);\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\n                        this.value = [asn.result];\n                    }\n                }\n            }\n            catch {\n            }\n        }\n        this.valueHexView = intBuffer.subarray(1);\n        this.blockLength = intBuffer.length;\n        return (inputOffset + inputLength);\n    }\n    toBER(sizeOnly, writer) {\n        if (this.isConstructed) {\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\n        }\n        if (sizeOnly) {\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\n        }\n        if (!this.valueHexView.byteLength) {\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(this.valueHexView.length + 1);\n        retView[0] = this.unusedBits;\n        retView.set(this.valueHexView, 1);\n        return retView.buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            unusedBits: this.unusedBits,\n            isConstructed: this.isConstructed,\n        };\n    }\n}\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\nclass BitString extends BaseBlock {\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\n        var _b, _c;\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\n        super({\n            idBlock: {\n                isConstructed: parameters.isConstructed,\n                ...idBlock,\n            },\n            lenBlock: {\n                ...lenBlock,\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\n            },\n            ...parameters,\n        }, LocalBitStringValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 3;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\n    }\n    onAsciiEncoding() {\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n            return Constructed.prototype.onAsciiEncoding.call(this);\n        }\n        else {\n            const bits = [];\n            const valueHex = this.valueBlock.valueHexView;\n            for (const byte of valueHex) {\n                bits.push(byte.toString(2).padStart(8, \"0\"));\n            }\n            const bitsStr = bits.join(\"\");\n            const name = this.constructor.NAME;\n            const value = bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits);\n            return `${name} : ${value}`;\n        }\n    }\n}\n_a$q = BitString;\n(() => {\n    typeStore.BitString = _a$q;\n})();\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\nfunction viewAdd(first, second) {\n    const c = new Uint8Array([0]);\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    let firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value = 0;\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\n    let counter = 0;\n    for (let i = max; i >= 0; i--, counter++) {\n        switch (true) {\n            case (counter < secondViewCopy.length):\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\n                break;\n            default:\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\n        }\n        c[0] = value / 10;\n        switch (true) {\n            case (counter >= firstViewCopy.length):\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\n                break;\n            default:\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\n        }\n    }\n    if (c[0] > 0)\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\n    return firstViewCopy;\n}\nfunction power2(n) {\n    if (n >= powers2.length) {\n        for (let p = powers2.length; p <= n; p++) {\n            const c = new Uint8Array([0]);\n            let digits = (powers2[p - 1]).slice(0);\n            for (let i = (digits.length - 1); i >= 0; i--) {\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\n                c[0] = newValue[0] / 10;\n                digits[i] = newValue[0] % 10;\n            }\n            if (c[0] > 0)\n                digits = pvutils.utilConcatView(c, digits);\n            powers2.push(digits);\n        }\n    }\n    return powers2[n];\n}\nfunction viewSub(first, second) {\n    let b = 0;\n    const firstView = new Uint8Array(first);\n    const secondView = new Uint8Array(second);\n    const firstViewCopy = firstView.slice(0);\n    const firstViewCopyLength = firstViewCopy.length - 1;\n    const secondViewCopy = secondView.slice(0);\n    const secondViewCopyLength = secondViewCopy.length - 1;\n    let value;\n    let counter = 0;\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\n        switch (true) {\n            case (value < 0):\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n                break;\n            default:\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n        }\n    }\n    if (b > 0) {\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\n            if (value < 0) {\n                b = 1;\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\n            }\n            else {\n                b = 0;\n                firstViewCopy[firstViewCopyLength - counter] = value;\n                break;\n            }\n        }\n    }\n    return firstViewCopy.slice();\n}\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\n    setValueHex() {\n        if (this.valueHexView.length >= 4) {\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\n            this.isHexOnly = true;\n            this._valueDec = 0;\n        }\n        else {\n            this.isHexOnly = false;\n            if (this.valueHexView.length > 0) {\n                this._valueDec = pvutils.utilDecodeTC.call(this);\n            }\n        }\n    }\n    constructor({ value, ...parameters } = {}) {\n        super(parameters);\n        this._valueDec = 0;\n        if (parameters.valueHex) {\n            this.setValueHex();\n        }\n        if (value !== undefined) {\n            this.valueDec = value;\n        }\n    }\n    set valueDec(v) {\n        this._valueDec = v;\n        this.isHexOnly = false;\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\n    }\n    get valueDec() {\n        return this._valueDec;\n    }\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\n        if (offset === -1)\n            return offset;\n        const view = this.valueHexView;\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\n            this.valueHexView = view.subarray(1);\n        }\n        else {\n            if (expectedLength !== 0) {\n                if (view.length < expectedLength) {\n                    if ((expectedLength - view.length) > 1)\n                        expectedLength = view.length + 1;\n                    this.valueHexView = view.subarray(expectedLength - view.length);\n                }\n            }\n        }\n        return offset;\n    }\n    toDER(sizeOnly = false) {\n        const view = this.valueHexView;\n        switch (true) {\n            case ((view[0] & 0x80) !== 0):\n                {\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\n                    updatedView[0] = 0x00;\n                    updatedView.set(view, 1);\n                    this.valueHexView = updatedView;\n                }\n                break;\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\n                {\n                    this.valueHexView = this.valueHexView.subarray(1);\n                }\n                break;\n        }\n        return this.toBER(sizeOnly);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n        if (resultOffset === -1) {\n            return resultOffset;\n        }\n        this.setValueHex();\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        return sizeOnly\n            ? new ArrayBuffer(this.valueHexView.length)\n            : this.valueHexView.slice().buffer;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n    toString() {\n        const firstBit = (this.valueHexView.length * 8) - 1;\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\n        let bitNumber = 0;\n        let currentByte;\n        const asn1View = this.valueHexView;\n        let result = \"\";\n        let flag = false;\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\n            currentByte = asn1View[byteNumber];\n            for (let i = 0; i < 8; i++) {\n                if ((currentByte & 1) === 1) {\n                    switch (bitNumber) {\n                        case firstBit:\n                            digits = viewSub(power2(bitNumber), digits);\n                            result = \"-\";\n                            break;\n                        default:\n                            digits = viewAdd(digits, power2(bitNumber));\n                    }\n                }\n                bitNumber++;\n                currentByte >>= 1;\n            }\n        }\n        for (let i = 0; i < digits.length; i++) {\n            if (digits[i])\n                flag = true;\n            if (flag)\n                result += digitsString.charAt(digits[i]);\n        }\n        if (flag === false)\n            result += digitsString.charAt(0);\n        return result;\n    }\n}\n_a$p = LocalIntegerValueBlock;\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\n(() => {\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\n        set: function (v) {\n            this.valueHexView = new Uint8Array(v);\n            this.setValueHex();\n        },\n        get: function () {\n            return this.valueHexView.slice().buffer;\n        },\n    });\n})();\n\nvar _a$o;\nclass Integer extends BaseBlock {\n    constructor(parameters = {}) {\n        super(parameters, LocalIntegerValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 2;\n    }\n    toBigInt() {\n        assertBigInt();\n        return BigInt(this.valueBlock.toString());\n    }\n    static fromBigInt(value) {\n        assertBigInt();\n        const bigIntValue = BigInt(value);\n        const writer = new ViewWriter();\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\n        if (bigIntValue < 0) {\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\n            first[0] |= 0x80;\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\n            const secondInt = firstInt + bigIntValue;\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\n            second[0] |= 0x80;\n            writer.write(second);\n        }\n        else {\n            if (view[0] & 0x80) {\n                writer.write(new Uint8Array([0]));\n            }\n            writer.write(view);\n        }\n        const res = new _a$o({ valueHex: writer.final() });\n        return res;\n    }\n    convertToDER() {\n        const integer = new _a$o({ valueHex: this.valueBlock.valueHexView });\n        integer.valueBlock.toDER();\n        return integer;\n    }\n    convertFromDER() {\n        return new _a$o({\n            valueHex: this.valueBlock.valueHexView[0] === 0\n                ? this.valueBlock.valueHexView.subarray(1)\n                : this.valueBlock.valueHexView,\n        });\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\n    }\n}\n_a$o = Integer;\n(() => {\n    typeStore.Integer = _a$o;\n})();\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\nclass Enumerated extends Integer {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 10;\n    }\n}\n_a$n = Enumerated;\n(() => {\n    typeStore.Enumerated = _a$n;\n})();\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n        this.isFirstSid = isFirstSid;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (!inputLength) {\n            return inputOffset;\n        }\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\n            return -1;\n        }\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++) {\n            tempView[i] = this.valueHexView[i];\n        }\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    set valueBigInt(value) {\n        assertBigInt();\n        let bits = BigInt(value).toString(2);\n        while (bits.length % 7) {\n            bits = \"0\" + bits;\n        }\n        const bytes = new Uint8Array(bits.length / 7);\n        for (let i = 0; i < bytes.length; i++) {\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\n        }\n        this.fromBER(bytes.buffer, 0, bytes.length);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            if (this.isFirstSid) {\n                let sidValue = this.valueDec;\n                if (this.valueDec <= 39)\n                    result = \"0.\";\n                else {\n                    if (this.valueDec <= 79) {\n                        result = \"1.\";\n                        sidValue -= 40;\n                    }\n                    else {\n                        result = \"2.\";\n                        sidValue -= 80;\n                    }\n                }\n                result += sidValue.toString();\n            }\n            else\n                result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n            isFirstSid: this.isFirstSid,\n        };\n    }\n}\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            if (this.value.length === 0)\n                sidBlock.isFirstSid = true;\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        let flag = false;\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            if (flag) {\n                const sidBlock = this.value[0];\n                let plus = 0;\n                switch (sidBlock.valueDec) {\n                    case 0:\n                        break;\n                    case 1:\n                        plus = 40;\n                        break;\n                    case 2:\n                        plus = 80;\n                        break;\n                    default:\n                        this.value = [];\n                        return;\n                }\n                const parsedSID = parseInt(sid, 10);\n                if (isNaN(parsedSID))\n                    return;\n                sidBlock.valueDec = parsedSID + plus;\n                flag = false;\n            }\n            else {\n                const sidBlock = new LocalSidValueBlock();\n                if (sid > Number.MAX_SAFE_INTEGER) {\n                    assertBigInt();\n                    const sidValue = BigInt(sid);\n                    sidBlock.valueBigInt = sidValue;\n                }\n                else {\n                    sidBlock.valueDec = parseInt(sid, 10);\n                    if (isNaN(sidBlock.valueDec))\n                        return;\n                }\n                if (!this.value.length) {\n                    sidBlock.isFirstSid = true;\n                    flag = true;\n                }\n                this.value.push(sidBlock);\n            }\n        } while (pos2 !== -1);\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                if (this.value[i].isFirstSid)\n                    result = `2.{${sidStr} - 80}`;\n                else\n                    result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++) {\n            object.sidArray.push(this.value[i].toJSON());\n        }\n        return object;\n    }\n}\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\nclass ObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 6;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$m = ObjectIdentifier;\n(() => {\n    typeStore.ObjectIdentifier = _a$m;\n})();\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\n    constructor({ valueDec = 0, ...parameters } = {}) {\n        super(parameters);\n        this.valueDec = valueDec;\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        if (inputLength === 0)\n            return inputOffset;\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\n            return -1;\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\n        this.valueHexView = new Uint8Array(inputLength);\n        for (let i = 0; i < inputLength; i++) {\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\n            this.blockLength++;\n            if ((intBuffer[i] & 0x80) === 0x00)\n                break;\n        }\n        const tempView = new Uint8Array(this.blockLength);\n        for (let i = 0; i < this.blockLength; i++)\n            tempView[i] = this.valueHexView[i];\n        this.valueHexView = tempView;\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\n            this.error = \"End of input reached before message was fully decoded\";\n            return -1;\n        }\n        if (this.valueHexView[0] === 0x00)\n            this.warnings.push(\"Needlessly long format of SID encoding\");\n        if (this.blockLength <= 8)\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\n        else {\n            this.isHexOnly = true;\n            this.warnings.push(\"Too big SID for decoding, hex only\");\n        }\n        return (inputOffset + this.blockLength);\n    }\n    toBER(sizeOnly) {\n        if (this.isHexOnly) {\n            if (sizeOnly)\n                return (new ArrayBuffer(this.valueHexView.byteLength));\n            const curView = this.valueHexView;\n            const retView = new Uint8Array(this.blockLength);\n            for (let i = 0; i < (this.blockLength - 1); i++)\n                retView[i] = curView[i] | 0x80;\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\n            return retView.buffer;\n        }\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\n        if (encodedBuf.byteLength === 0) {\n            this.error = \"Error during encoding SID value\";\n            return EMPTY_BUFFER;\n        }\n        const retView = new Uint8Array(encodedBuf.byteLength);\n        if (!sizeOnly) {\n            const encodedView = new Uint8Array(encodedBuf);\n            const len = encodedBuf.byteLength - 1;\n            for (let i = 0; i < len; i++)\n                retView[i] = encodedView[i] | 0x80;\n            retView[len] = encodedView[len];\n        }\n        return retView.buffer;\n    }\n    toString() {\n        let result = \"\";\n        if (this.isHexOnly)\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\n        else {\n            result = this.valueDec.toString();\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            valueDec: this.valueDec,\n        };\n    }\n}\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\n        super(parameters);\n        this.value = [];\n        if (value) {\n            this.fromString(value);\n        }\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        let resultOffset = inputOffset;\n        while (inputLength > 0) {\n            const sidBlock = new LocalRelativeSidValueBlock();\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n            if (resultOffset === -1) {\n                this.blockLength = 0;\n                this.error = sidBlock.error;\n                return resultOffset;\n            }\n            this.blockLength += sidBlock.blockLength;\n            inputLength -= sidBlock.blockLength;\n            this.value.push(sidBlock);\n        }\n        return resultOffset;\n    }\n    toBER(sizeOnly, _writer) {\n        const retBuffers = [];\n        for (let i = 0; i < this.value.length; i++) {\n            const valueBuf = this.value[i].toBER(sizeOnly);\n            if (valueBuf.byteLength === 0) {\n                this.error = this.value[i].error;\n                return EMPTY_BUFFER;\n            }\n            retBuffers.push(valueBuf);\n        }\n        return concat(retBuffers);\n    }\n    fromString(string) {\n        this.value = [];\n        let pos1 = 0;\n        let pos2 = 0;\n        let sid = \"\";\n        do {\n            pos2 = string.indexOf(\".\", pos1);\n            if (pos2 === -1)\n                sid = string.substring(pos1);\n            else\n                sid = string.substring(pos1, pos2);\n            pos1 = pos2 + 1;\n            const sidBlock = new LocalRelativeSidValueBlock();\n            sidBlock.valueDec = parseInt(sid, 10);\n            if (isNaN(sidBlock.valueDec))\n                return true;\n            this.value.push(sidBlock);\n        } while (pos2 !== -1);\n        return true;\n    }\n    toString() {\n        let result = \"\";\n        let isHexOnly = false;\n        for (let i = 0; i < this.value.length; i++) {\n            isHexOnly = this.value[i].isHexOnly;\n            let sidStr = this.value[i].toString();\n            if (i !== 0)\n                result = `${result}.`;\n            if (isHexOnly) {\n                sidStr = `{${sidStr}}`;\n                result += sidStr;\n            }\n            else\n                result += sidStr;\n        }\n        return result;\n    }\n    toJSON() {\n        const object = {\n            ...super.toJSON(),\n            value: this.toString(),\n            sidArray: [],\n        };\n        for (let i = 0; i < this.value.length; i++)\n            object.sidArray.push(this.value[i].toJSON());\n        return object;\n    }\n}\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\nclass RelativeObjectIdentifier extends BaseBlock {\n    getValue() {\n        return this.valueBlock.toString();\n    }\n    setValue(value) {\n        this.valueBlock.fromString(value);\n    }\n    constructor(parameters = {}) {\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 13;\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.getValue(),\n        };\n    }\n}\n_a$l = RelativeObjectIdentifier;\n(() => {\n    typeStore.RelativeObjectIdentifier = _a$l;\n})();\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\nclass Sequence extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 16;\n    }\n}\n_a$k = Sequence;\n(() => {\n    typeStore.Sequence = _a$k;\n})();\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\nclass Set extends Constructed {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 17;\n    }\n}\n_a$j = Set;\n(() => {\n    typeStore.Set = _a$j;\n})();\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.isHexOnly = true;\n        this.value = EMPTY_STRING;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            value: this.value,\n        };\n    }\n}\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\n}\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters, LocalSimpleStringValueBlock);\n    }\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    }\n    fromString(inputString) {\n        const strLen = inputString.length;\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\n        for (let i = 0; i < strLen; i++)\n            view[i] = inputString.charCodeAt(i);\n        this.valueBlock.value = inputString;\n    }\n}\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n        try {\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\n        }\n        catch (ex) {\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\n        }\n    }\n    fromString(inputString) {\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\nclass Utf8String extends LocalUtf8StringValueBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 12;\n    }\n}\n_a$i = Utf8String;\n(() => {\n    typeStore.Utf8String = _a$i;\n})();\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\n    }\n    fromString(inputString) {\n        this.valueBlock.value = inputString;\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\n    }\n}\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\nclass BmpString extends LocalBmpStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 30;\n    }\n}\n_a$h = BmpString;\n(() => {\n    typeStore.BmpString = _a$h;\n})();\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\n    fromBuffer(inputBuffer) {\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\n        const valueView = new Uint8Array(copyBuffer);\n        for (let i = 0; i < valueView.length; i += 4) {\n            valueView[i] = valueView[i + 3];\n            valueView[i + 1] = valueView[i + 2];\n            valueView[i + 2] = 0x00;\n            valueView[i + 3] = 0x00;\n        }\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\n    }\n    fromString(inputString) {\n        const strLength = inputString.length;\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\n        for (let i = 0; i < strLength; i++) {\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\n            const codeView = new Uint8Array(codeBuf);\n            if (codeView.length > 4)\n                continue;\n            const dif = 4 - codeView.length;\n            for (let j = (codeView.length - 1); j >= 0; j--)\n                valueHexView[i * 4 + j + dif] = codeView[j];\n        }\n        this.valueBlock.value = inputString;\n    }\n}\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\nclass UniversalString extends LocalUniversalStringValueBlock {\n    constructor({ ...parameters } = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 28;\n    }\n}\n_a$g = UniversalString;\n(() => {\n    typeStore.UniversalString = _a$g;\n})();\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\nclass NumericString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 18;\n    }\n}\n_a$f = NumericString;\n(() => {\n    typeStore.NumericString = _a$f;\n})();\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\nclass PrintableString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 19;\n    }\n}\n_a$e = PrintableString;\n(() => {\n    typeStore.PrintableString = _a$e;\n})();\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\nclass TeletexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 20;\n    }\n}\n_a$d = TeletexString;\n(() => {\n    typeStore.TeletexString = _a$d;\n})();\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\nclass VideotexString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 21;\n    }\n}\n_a$c = VideotexString;\n(() => {\n    typeStore.VideotexString = _a$c;\n})();\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\nclass IA5String extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 22;\n    }\n}\n_a$b = IA5String;\n(() => {\n    typeStore.IA5String = _a$b;\n})();\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\nclass GraphicString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 25;\n    }\n}\n_a$a = GraphicString;\n(() => {\n    typeStore.GraphicString = _a$a;\n})();\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\nclass VisibleString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 26;\n    }\n}\n_a$9 = VisibleString;\n(() => {\n    typeStore.VisibleString = _a$9;\n})();\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\nclass GeneralString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 27;\n    }\n}\n_a$8 = GeneralString;\n(() => {\n    typeStore.GeneralString = _a$8;\n})();\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\nclass CharacterString extends LocalSimpleStringBlock {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 29;\n    }\n}\n_a$7 = CharacterString;\n(() => {\n    typeStore.CharacterString = _a$7;\n})();\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\nclass UTCTime extends VisibleString {\n    constructor({ value, valueDate, ...parameters } = {}) {\n        super(parameters);\n        this.year = 0;\n        this.month = 0;\n        this.day = 0;\n        this.hour = 0;\n        this.minute = 0;\n        this.second = 0;\n        if (value) {\n            this.fromString(value);\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\n            for (let i = 0; i < value.length; i++)\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\n        }\n        if (valueDate) {\n            this.fromDate(valueDate);\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\n        }\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 23;\n    }\n    fromBuffer(inputBuffer) {\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\n    }\n    toBuffer() {\n        const str = this.toString();\n        const buffer = new ArrayBuffer(str.length);\n        const view = new Uint8Array(buffer);\n        for (let i = 0; i < str.length; i++)\n            view[i] = str.charCodeAt(i);\n        return buffer;\n    }\n    fromDate(inputDate) {\n        this.year = inputDate.getUTCFullYear();\n        this.month = inputDate.getUTCMonth() + 1;\n        this.day = inputDate.getUTCDate();\n        this.hour = inputDate.getUTCHours();\n        this.minute = inputDate.getUTCMinutes();\n        this.second = inputDate.getUTCSeconds();\n    }\n    toDate() {\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\n    }\n    fromString(inputString) {\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\n        const parserArray = parser.exec(inputString);\n        if (parserArray === null) {\n            this.error = \"Wrong input string for conversion\";\n            return;\n        }\n        const year = parseInt(parserArray[1], 10);\n        if (year >= 50)\n            this.year = 1900 + year;\n        else\n            this.year = 2000 + year;\n        this.month = parseInt(parserArray[2], 10);\n        this.day = parseInt(parserArray[3], 10);\n        this.hour = parseInt(parserArray[4], 10);\n        this.minute = parseInt(parserArray[5], 10);\n        this.second = parseInt(parserArray[6], 10);\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = new Array(7);\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\n            outputArray[1] = pvutils.padNumber(this.month, 2);\n            outputArray[2] = pvutils.padNumber(this.day, 2);\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\n            outputArray[5] = pvutils.padNumber(this.second, 2);\n            outputArray[6] = \"Z\";\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    onAsciiEncoding() {\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            year: this.year,\n            month: this.month,\n            day: this.day,\n            hour: this.hour,\n            minute: this.minute,\n            second: this.second,\n        };\n    }\n}\n_a$6 = UTCTime;\n(() => {\n    typeStore.UTCTime = _a$6;\n})();\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\nclass GeneralizedTime extends UTCTime {\n    constructor(parameters = {}) {\n        var _b;\n        super(parameters);\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 24;\n    }\n    fromDate(inputDate) {\n        super.fromDate(inputDate);\n        this.millisecond = inputDate.getUTCMilliseconds();\n    }\n    toDate() {\n        const utcDate = Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond);\n        return (new Date(utcDate));\n    }\n    fromString(inputString) {\n        let isUTC = false;\n        let timeString = \"\";\n        let dateTimeString = \"\";\n        let fractionPart = 0;\n        let parser;\n        let hourDifference = 0;\n        let minuteDifference = 0;\n        if (inputString[inputString.length - 1] === \"Z\") {\n            timeString = inputString.substring(0, inputString.length - 1);\n            isUTC = true;\n        }\n        else {\n            const number = new Number(inputString[inputString.length - 1]);\n            if (isNaN(number.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            timeString = inputString;\n        }\n        if (isUTC) {\n            if (timeString.indexOf(\"+\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n            if (timeString.indexOf(\"-\") !== -1)\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        else {\n            let multiplier = 1;\n            let differencePosition = timeString.indexOf(\"+\");\n            let differenceString = \"\";\n            if (differencePosition === -1) {\n                differencePosition = timeString.indexOf(\"-\");\n                multiplier = -1;\n            }\n            if (differencePosition !== -1) {\n                differenceString = timeString.substring(differencePosition + 1);\n                timeString = timeString.substring(0, differencePosition);\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\n                    throw new Error(\"Wrong input string for conversion\");\n                let number = parseInt(differenceString.substring(0, 2), 10);\n                if (isNaN(number.valueOf()))\n                    throw new Error(\"Wrong input string for conversion\");\n                hourDifference = multiplier * number;\n                if (differenceString.length === 4) {\n                    number = parseInt(differenceString.substring(2, 4), 10);\n                    if (isNaN(number.valueOf()))\n                        throw new Error(\"Wrong input string for conversion\");\n                    minuteDifference = multiplier * number;\n                }\n            }\n        }\n        let fractionPointPosition = timeString.indexOf(\".\");\n        if (fractionPointPosition === -1)\n            fractionPointPosition = timeString.indexOf(\",\");\n        if (fractionPointPosition !== -1) {\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\n            if (isNaN(fractionPartCheck.valueOf()))\n                throw new Error(\"Wrong input string for conversion\");\n            fractionPart = fractionPartCheck.valueOf();\n            dateTimeString = timeString.substring(0, fractionPointPosition);\n        }\n        else\n            dateTimeString = timeString;\n        switch (true) {\n            case (dateTimeString.length === 8):\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1)\n                    throw new Error(\"Wrong input string for conversion\");\n                break;\n            case (dateTimeString.length === 10):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.minute = Math.floor(fractionResult);\n                    fractionResult = 60 * (fractionResult - this.minute);\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 12):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    let fractionResult = 60 * fractionPart;\n                    this.second = Math.floor(fractionResult);\n                    fractionResult = 1000 * (fractionResult - this.second);\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            case (dateTimeString.length === 14):\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n                if (fractionPointPosition !== -1) {\n                    const fractionResult = 1000 * fractionPart;\n                    this.millisecond = Math.floor(fractionResult);\n                }\n                break;\n            default:\n                throw new Error(\"Wrong input string for conversion\");\n        }\n        const parserArray = parser.exec(dateTimeString);\n        if (parserArray === null)\n            throw new Error(\"Wrong input string for conversion\");\n        for (let j = 1; j < parserArray.length; j++) {\n            switch (j) {\n                case 1:\n                    this.year = parseInt(parserArray[j], 10);\n                    break;\n                case 2:\n                    this.month = parseInt(parserArray[j], 10);\n                    break;\n                case 3:\n                    this.day = parseInt(parserArray[j], 10);\n                    break;\n                case 4:\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\n                    break;\n                case 5:\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\n                    break;\n                case 6:\n                    this.second = parseInt(parserArray[j], 10);\n                    break;\n                default:\n                    throw new Error(\"Wrong input string for conversion\");\n            }\n        }\n        if (isUTC === false) {\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n            this.year = tempDate.getUTCFullYear();\n            this.month = tempDate.getUTCMonth();\n            this.day = tempDate.getUTCDay();\n            this.hour = tempDate.getUTCHours();\n            this.minute = tempDate.getUTCMinutes();\n            this.second = tempDate.getUTCSeconds();\n            this.millisecond = tempDate.getUTCMilliseconds();\n        }\n    }\n    toString(encoding = \"iso\") {\n        if (encoding === \"iso\") {\n            const outputArray = [];\n            outputArray.push(pvutils.padNumber(this.year, 4));\n            outputArray.push(pvutils.padNumber(this.month, 2));\n            outputArray.push(pvutils.padNumber(this.day, 2));\n            outputArray.push(pvutils.padNumber(this.hour, 2));\n            outputArray.push(pvutils.padNumber(this.minute, 2));\n            outputArray.push(pvutils.padNumber(this.second, 2));\n            if (this.millisecond !== 0) {\n                outputArray.push(\".\");\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\n            }\n            outputArray.push(\"Z\");\n            return outputArray.join(\"\");\n        }\n        return super.toString(encoding);\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            millisecond: this.millisecond,\n        };\n    }\n}\n_a$5 = GeneralizedTime;\n(() => {\n    typeStore.GeneralizedTime = _a$5;\n})();\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\nclass DATE extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 31;\n    }\n}\n_a$4 = DATE;\n(() => {\n    typeStore.DATE = _a$4;\n})();\nDATE.NAME = \"DATE\";\n\nvar _a$3;\nclass TimeOfDay extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 32;\n    }\n}\n_a$3 = TimeOfDay;\n(() => {\n    typeStore.TimeOfDay = _a$3;\n})();\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\nclass DateTime extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 33;\n    }\n}\n_a$2 = DateTime;\n(() => {\n    typeStore.DateTime = _a$2;\n})();\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\nclass Duration extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 34;\n    }\n}\n_a$1 = Duration;\n(() => {\n    typeStore.Duration = _a$1;\n})();\nDuration.NAME = \"Duration\";\n\nvar _a;\nclass TIME extends Utf8String {\n    constructor(parameters = {}) {\n        super(parameters);\n        this.idBlock.tagClass = 1;\n        this.idBlock.tagNumber = 14;\n    }\n}\n_a = TIME;\n(() => {\n    typeStore.TIME = _a;\n})();\nTIME.NAME = \"TIME\";\n\nclass Any {\n    constructor({ name = EMPTY_STRING, optional = false } = {}) {\n        this.name = name;\n        this.optional = optional;\n    }\n}\n\nclass Choice extends Any {\n    constructor({ value = [], ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n    }\n}\n\nclass Repeated extends Any {\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\n        super(parameters);\n        this.value = value;\n        this.local = local;\n    }\n}\n\nclass RawData {\n    get data() {\n        return this.dataView.slice().buffer;\n    }\n    set data(value) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\n    }\n    constructor({ data = EMPTY_VIEW } = {}) {\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\n    }\n    fromBER(inputBuffer, inputOffset, inputLength) {\n        const endLength = inputOffset + inputLength;\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\n        return endLength;\n    }\n    toBER(_sizeOnly) {\n        return this.dataView.slice().buffer;\n    }\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\n    if (inputSchema instanceof Choice) {\n        for (const element of inputSchema.value) {\n            const result = compareSchema(root, inputData, element);\n            if (result.verified) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n        }\n        {\n            const _result = {\n                verified: false,\n                result: { error: \"Wrong values for Choice type\" },\n            };\n            if (inputSchema.hasOwnProperty(NAME))\n                _result.name = inputSchema.name;\n            return _result;\n        }\n    }\n    if (inputSchema instanceof Any) {\n        if (inputSchema.hasOwnProperty(NAME))\n            root[inputSchema.name] = inputData;\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if ((root instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong root object\" },\n        };\n    }\n    if ((inputData instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 data\" },\n        };\n    }\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((ID_BLOCK in inputSchema) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((FROM_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if ((TO_BER in inputSchema.idBlock) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    const encodedId = inputSchema.idBlock.toBER(false);\n    if (encodedId.byteLength === 0) {\n        return {\n            verified: false,\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" },\n        };\n    }\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\n    if (decodedOffset === -1) {\n        return {\n            verified: false,\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema\" },\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\n        return {\n            verified: false,\n            result: root,\n        };\n    }\n    if (inputSchema.idBlock.isHexOnly) {\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\n            return {\n                verified: false,\n                result: { error: \"Wrong ASN.1 schema\" },\n            };\n        }\n        const schemaView = inputSchema.idBlock.valueHexView;\n        const asn1View = inputData.idBlock.valueHexView;\n        if (schemaView.length !== asn1View.length) {\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < schemaView.length; i++) {\n            if (schemaView[i] !== asn1View[1]) {\n                return {\n                    verified: false,\n                    result: root,\n                };\n            }\n        }\n    }\n    if (inputSchema.name) {\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n        if (inputSchema.name)\n            root[inputSchema.name] = inputData;\n    }\n    if (inputSchema instanceof typeStore.Constructed) {\n        let admission = 0;\n        let result = {\n            verified: false,\n            result: { error: \"Unknown error\" },\n        };\n        let maxLength = inputSchema.valueBlock.value.length;\n        if (maxLength > 0) {\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                maxLength = inputData.valueBlock.value.length;\n            }\n        }\n        if (maxLength === 0) {\n            return {\n                verified: true,\n                result: root,\n            };\n        }\n        if ((inputData.valueBlock.value.length === 0)\n            && (inputSchema.valueBlock.value.length !== 0)) {\n            let _optional = true;\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\n            if (_optional) {\n                return {\n                    verified: true,\n                    result: root,\n                };\n            }\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name)\n                    delete root[inputSchema.name];\n            }\n            root.error = \"Inconsistent object length\";\n            return {\n                verified: false,\n                result: root,\n            };\n        }\n        for (let i = 0; i < maxLength; i++) {\n            if ((i - admission) >= inputData.valueBlock.value.length) {\n                if (inputSchema.valueBlock.value[i].optional === false) {\n                    const _result = {\n                        verified: false,\n                        result: root,\n                    };\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\n                    if (inputSchema.name) {\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                        if (inputSchema.name) {\n                            delete root[inputSchema.name];\n                            _result.name = inputSchema.name;\n                        }\n                    }\n                    return _result;\n                }\n            }\n            else {\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[0].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\n                        let arrayRoot = {};\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\n                            arrayRoot = inputData;\n                        else\n                            arrayRoot = root;\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\n                    }\n                }\n                else {\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\n                    if (result.verified === false) {\n                        if (inputSchema.valueBlock.value[i].optional)\n                            admission++;\n                        else {\n                            if (inputSchema.name) {\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                                if (inputSchema.name)\n                                    delete root[inputSchema.name];\n                            }\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        if (result.verified === false) {\n            const _result = {\n                verified: false,\n                result: root,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return {\n            verified: true,\n            result: root,\n        };\n    }\n    if (inputSchema.primitiveSchema\n        && (VALUE_HEX_VIEW in inputData.valueBlock)) {\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\n        if (asn1.offset === -1) {\n            const _result = {\n                verified: false,\n                result: asn1.result,\n            };\n            if (inputSchema.name) {\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\n                if (inputSchema.name) {\n                    delete root[inputSchema.name];\n                    _result.name = inputSchema.name;\n                }\n            }\n            return _result;\n        }\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\n    }\n    return {\n        verified: true,\n        result: root,\n    };\n}\nfunction verifySchema(inputBuffer, inputSchema) {\n    if ((inputSchema instanceof Object) === false) {\n        return {\n            verified: false,\n            result: { error: \"Wrong ASN.1 schema type\" },\n        };\n    }\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\n    if (asn1.offset === -1) {\n        return {\n            verified: false,\n            result: asn1.result,\n        };\n    }\n    return compareSchema(asn1.result, asn1.result, inputSchema);\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n", "/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n", "export var AsnTypeTypes;\n(function (AsnTypeTypes) {\n    AsnTypeTypes[AsnTypeTypes[\"Sequence\"] = 0] = \"Sequence\";\n    AsnTypeTypes[AsnTypeTypes[\"Set\"] = 1] = \"Set\";\n    AsnTypeTypes[AsnTypeTypes[\"Choice\"] = 2] = \"Choice\";\n})(AsnTypeTypes || (AsnTypeTypes = {}));\nexport var AsnPropTypes;\n(function (AsnPropTypes) {\n    AsnPropTypes[AsnPropTypes[\"Any\"] = 1] = \"Any\";\n    AsnPropTypes[AsnPropTypes[\"Boolean\"] = 2] = \"Boolean\";\n    AsnPropTypes[AsnPropTypes[\"OctetString\"] = 3] = \"OctetString\";\n    AsnPropTypes[AsnPropTypes[\"BitString\"] = 4] = \"BitString\";\n    AsnPropTypes[AsnPropTypes[\"Integer\"] = 5] = \"Integer\";\n    AsnPropTypes[AsnPropTypes[\"Enumerated\"] = 6] = \"Enumerated\";\n    AsnPropTypes[AsnPropTypes[\"ObjectIdentifier\"] = 7] = \"ObjectIdentifier\";\n    AsnPropTypes[AsnPropTypes[\"Utf8String\"] = 8] = \"Utf8String\";\n    AsnPropTypes[AsnPropTypes[\"BmpString\"] = 9] = \"BmpString\";\n    AsnPropTypes[AsnPropTypes[\"UniversalString\"] = 10] = \"UniversalString\";\n    AsnPropTypes[AsnPropTypes[\"NumericString\"] = 11] = \"NumericString\";\n    AsnPropTypes[AsnPropTypes[\"PrintableString\"] = 12] = \"PrintableString\";\n    AsnPropTypes[AsnPropTypes[\"TeletexString\"] = 13] = \"TeletexString\";\n    AsnPropTypes[AsnPropTypes[\"VideotexString\"] = 14] = \"VideotexString\";\n    AsnPropTypes[AsnPropTypes[\"IA5String\"] = 15] = \"IA5String\";\n    AsnPropTypes[AsnPropTypes[\"GraphicString\"] = 16] = \"GraphicString\";\n    AsnPropTypes[AsnPropTypes[\"VisibleString\"] = 17] = \"VisibleString\";\n    AsnPropTypes[AsnPropTypes[\"GeneralString\"] = 18] = \"GeneralString\";\n    AsnPropTypes[AsnPropTypes[\"CharacterString\"] = 19] = \"CharacterString\";\n    AsnPropTypes[AsnPropTypes[\"UTCTime\"] = 20] = \"UTCTime\";\n    AsnPropTypes[AsnPropTypes[\"GeneralizedTime\"] = 21] = \"GeneralizedTime\";\n    AsnPropTypes[AsnPropTypes[\"DATE\"] = 22] = \"DATE\";\n    AsnPropTypes[AsnPropTypes[\"TimeOfDay\"] = 23] = \"TimeOfDay\";\n    AsnPropTypes[AsnPropTypes[\"DateTime\"] = 24] = \"DateTime\";\n    AsnPropTypes[AsnPropTypes[\"Duration\"] = 25] = \"Duration\";\n    AsnPropTypes[AsnPropTypes[\"TIME\"] = 26] = \"TIME\";\n    AsnPropTypes[AsnPropTypes[\"Null\"] = 27] = \"Null\";\n})(AsnPropTypes || (AsnPropTypes = {}));\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class BitString {\n    constructor(params, unusedBits = 0) {\n        this.unusedBits = 0;\n        this.value = new ArrayBuffer(0);\n        if (params) {\n            if (typeof params === \"number\") {\n                this.fromNumber(params);\n            }\n            else if (BufferSourceConverter.isBufferSource(params)) {\n                this.unusedBits = unusedBits;\n                this.value = BufferSourceConverter.toArrayBuffer(params);\n            }\n            else {\n                throw TypeError(\"Unsupported type of 'params' argument for BitString\");\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.BitString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 BitString\");\n        }\n        this.unusedBits = asn.valueBlock.unusedBits;\n        this.value = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.BitString({ unusedBits: this.unusedBits, valueHex: this.value });\n    }\n    toSchema(name) {\n        return new asn1js.BitString({ name });\n    }\n    toNumber() {\n        let res = \"\";\n        const uintArray = new Uint8Array(this.value);\n        for (const octet of uintArray) {\n            res += octet.toString(2).padStart(8, \"0\");\n        }\n        res = res.split(\"\").reverse().join(\"\");\n        if (this.unusedBits) {\n            res = res.slice(this.unusedBits).padStart(this.unusedBits, \"0\");\n        }\n        return parseInt(res, 2);\n    }\n    fromNumber(value) {\n        let bits = value.toString(2);\n        const octetSize = (bits.length + 7) >> 3;\n        this.unusedBits = (octetSize << 3) - bits.length;\n        const octets = new Uint8Array(octetSize);\n        bits = bits\n            .padStart(octetSize << 3, \"0\")\n            .split(\"\")\n            .reverse()\n            .join(\"\");\n        let index = 0;\n        while (index < octetSize) {\n            octets[index] = parseInt(bits.slice(index << 3, (index << 3) + 8), 2);\n            index++;\n        }\n        this.value = octets.buffer;\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class OctetString {\n    get byteLength() {\n        return this.buffer.byteLength;\n    }\n    get byteOffset() {\n        return 0;\n    }\n    constructor(param) {\n        if (typeof param === \"number\") {\n            this.buffer = new ArrayBuffer(param);\n        }\n        else {\n            if (BufferSourceConverter.isBufferSource(param)) {\n                this.buffer = BufferSourceConverter.toArrayBuffer(param);\n            }\n            else if (Array.isArray(param)) {\n                this.buffer = new Uint8Array(param);\n            }\n            else {\n                this.buffer = new ArrayBuffer(0);\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof asn1js.OctetString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 OctetString\");\n        }\n        this.buffer = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new asn1js.OctetString({ valueHex: this.buffer });\n    }\n    toSchema(name) {\n        return new asn1js.OctetString({ name });\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nimport { OctetString } from \"./types/index\";\nexport const AsnAnyConverter = {\n    fromASN: (value) => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n    toASN: (value) => {\n        if (value === null) {\n            return new asn1js.Null();\n        }\n        const schema = asn1js.fromBER(value);\n        if (schema.result.error) {\n            throw new Error(schema.result.error);\n        }\n        return schema.result;\n    },\n};\nexport const AsnIntegerConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView.byteLength >= 4\n        ? value.valueBlock.toString()\n        : value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Integer({ value: +value }),\n};\nexport const AsnEnumeratedConverter = {\n    fromASN: (value) => value.valueBlock.valueDec,\n    toASN: (value) => new asn1js.Enumerated({ value }),\n};\nexport const AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.Integer({ valueHex: value }),\n};\nexport const AsnIntegerBigIntConverter = {\n    fromASN: (value) => value.toBigInt(),\n    toASN: (value) => asn1js.Integer.fromBigInt(value),\n};\nexport const AsnBitStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.BitString({ valueHex: value }),\n};\nexport const AsnObjectIdentifierConverter = {\n    fromASN: (value) => value.valueBlock.toString(),\n    toASN: (value) => new asn1js.ObjectIdentifier({ value }),\n};\nexport const AsnBooleanConverter = {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new asn1js.Boolean({ value }),\n};\nexport const AsnOctetStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHexView,\n    toASN: (value) => new asn1js.OctetString({ valueHex: value }),\n};\nexport const AsnConstructedOctetStringConverter = {\n    fromASN: (value) => new OctetString(value.getValue()),\n    toASN: (value) => value.toASN(),\n};\nfunction createStringConverter(Asn1Type) {\n    return {\n        fromASN: (value) => value.valueBlock.value,\n        toASN: (value) => new Asn1Type({ value }),\n    };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.UTCTime({ valueDate: value }),\n};\nexport const AsnGeneralizedTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1js.GeneralizedTime({ valueDate: value }),\n};\nexport const AsnNullConverter = {\n    fromASN: () => null,\n    toASN: () => {\n        return new asn1js.Null();\n    },\n};\nexport function defaultConverter(type) {\n    switch (type) {\n        case AsnPropTypes.Any:\n            return AsnAnyConverter;\n        case AsnPropTypes.BitString:\n            return AsnBitStringConverter;\n        case AsnPropTypes.BmpString:\n            return AsnBmpStringConverter;\n        case AsnPropTypes.Boolean:\n            return AsnBooleanConverter;\n        case AsnPropTypes.CharacterString:\n            return AsnCharacterStringConverter;\n        case AsnPropTypes.Enumerated:\n            return AsnEnumeratedConverter;\n        case AsnPropTypes.GeneralString:\n            return AsnGeneralStringConverter;\n        case AsnPropTypes.GeneralizedTime:\n            return AsnGeneralizedTimeConverter;\n        case AsnPropTypes.GraphicString:\n            return AsnGraphicStringConverter;\n        case AsnPropTypes.IA5String:\n            return AsnIA5StringConverter;\n        case AsnPropTypes.Integer:\n            return AsnIntegerConverter;\n        case AsnPropTypes.Null:\n            return AsnNullConverter;\n        case AsnPropTypes.NumericString:\n            return AsnNumericStringConverter;\n        case AsnPropTypes.ObjectIdentifier:\n            return AsnObjectIdentifierConverter;\n        case AsnPropTypes.OctetString:\n            return AsnOctetStringConverter;\n        case AsnPropTypes.PrintableString:\n            return AsnPrintableStringConverter;\n        case AsnPropTypes.TeletexString:\n            return AsnTeletexStringConverter;\n        case AsnPropTypes.UTCTime:\n            return AsnUTCTimeConverter;\n        case AsnPropTypes.UniversalString:\n            return AsnUniversalStringConverter;\n        case AsnPropTypes.Utf8String:\n            return AsnUtf8StringConverter;\n        case AsnPropTypes.VideotexString:\n            return AsnVideotexStringConverter;\n        case AsnPropTypes.VisibleString:\n            return AsnVisibleStringConverter;\n        default:\n            return null;\n    }\n}\n", "export function isConvertible(target) {\n    if (typeof target === \"function\" && target.prototype) {\n        if (target.prototype.toASN && target.prototype.fromASN) {\n            return true;\n        }\n        else {\n            return isConvertible(target.prototype);\n        }\n    }\n    else {\n        return !!(target && typeof target === \"object\" && \"toASN\" in target && \"fromASN\" in target);\n    }\n}\nexport function isTypeOfArray(target) {\n    var _a;\n    if (target) {\n        const proto = Object.getPrototypeOf(target);\n        if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {\n            return true;\n        }\n        return isTypeOfArray(proto);\n    }\n    return false;\n}\nexport function isArrayEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible } from \"./helper\";\nexport class AsnSchemaStorage {\n    constructor() {\n        this.items = new WeakMap();\n    }\n    has(target) {\n        return this.items.has(target);\n    }\n    get(target, checkSchema = false) {\n        const schema = this.items.get(target);\n        if (!schema) {\n            throw new Error(`Cannot get schema for '${target.prototype.constructor.name}' target`);\n        }\n        if (checkSchema && !schema.schema) {\n            throw new Error(`Schema '${target.prototype.constructor.name}' doesn't contain ASN.1 schema. Call 'AsnSchemaStorage.cache'.`);\n        }\n        return schema;\n    }\n    cache(target) {\n        const schema = this.get(target);\n        if (!schema.schema) {\n            schema.schema = this.create(target, true);\n        }\n    }\n    createDefault(target) {\n        const schema = { type: AsnTypeTypes.Sequence, items: {} };\n        const parentSchema = this.findParentSchema(target);\n        if (parentSchema) {\n            Object.assign(schema, parentSchema);\n            schema.items = Object.assign({}, schema.items, parentSchema.items);\n        }\n        return schema;\n    }\n    create(target, useNames) {\n        const schema = this.items.get(target) || this.createDefault(target);\n        const asn1Value = [];\n        for (const key in schema.items) {\n            const item = schema.items[key];\n            const name = useNames ? key : \"\";\n            let asn1Item;\n            if (typeof item.type === \"number\") {\n                const Asn1TypeName = AsnPropTypes[item.type];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get ASN1 class by name '${Asn1TypeName}'`);\n                }\n                asn1Item = new Asn1Type({ name });\n            }\n            else if (isConvertible(item.type)) {\n                const instance = new item.type();\n                asn1Item = instance.toSchema(name);\n            }\n            else if (item.optional) {\n                const itemSchema = this.get(item.type);\n                if (itemSchema.type === AsnTypeTypes.Choice) {\n                    asn1Item = new asn1js.Any({ name });\n                }\n                else {\n                    asn1Item = this.create(item.type, false);\n                    asn1Item.name = name;\n                }\n            }\n            else {\n                asn1Item = new asn1js.Any({ name });\n            }\n            const optional = !!item.optional || item.defaultValue !== undefined;\n            if (item.repeated) {\n                asn1Item.name = \"\";\n                const Container = item.repeated === \"set\" ? asn1js.Set : asn1js.Sequence;\n                asn1Item = new Container({\n                    name: \"\",\n                    value: [new asn1js.Repeated({ name, value: asn1Item })],\n                });\n            }\n            if (item.context !== null && item.context !== undefined) {\n                if (item.implicit) {\n                    if (typeof item.type === \"number\" || isConvertible(item.type)) {\n                        const Container = item.repeated ? asn1js.Constructed : asn1js.Primitive;\n                        asn1Value.push(new Container({ name, optional, idBlock: { tagClass: 3, tagNumber: item.context } }));\n                    }\n                    else {\n                        this.cache(item.type);\n                        const isRepeated = !!item.repeated;\n                        let value = !isRepeated ? this.get(item.type, true).schema : asn1Item;\n                        value =\n                            \"valueBlock\" in value\n                                ? value.valueBlock.value\n                                :\n                                    value.value;\n                        asn1Value.push(new asn1js.Constructed({\n                            name: !isRepeated ? name : \"\",\n                            optional,\n                            idBlock: { tagClass: 3, tagNumber: item.context },\n                            value: value,\n                        }));\n                    }\n                }\n                else {\n                    asn1Value.push(new asn1js.Constructed({\n                        optional,\n                        idBlock: { tagClass: 3, tagNumber: item.context },\n                        value: [asn1Item],\n                    }));\n                }\n            }\n            else {\n                asn1Item.optional = optional;\n                asn1Value.push(asn1Item);\n            }\n        }\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                return new asn1js.Sequence({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Set:\n                return new asn1js.Set({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Choice:\n                return new asn1js.Choice({ value: asn1Value, name: \"\" });\n            default:\n                throw new Error(`Unsupported ASN1 type in use`);\n        }\n    }\n    set(target, schema) {\n        this.items.set(target, schema);\n        return this;\n    }\n    findParentSchema(target) {\n        const parent = Object.getPrototypeOf(target);\n        if (parent) {\n            const schema = this.items.get(parent);\n            return schema || this.findParentSchema(parent);\n        }\n        return null;\n    }\n}\n", "import { AsnSchemaStorage } from \"./schema\";\nexport const schemaStorage = new AsnSchemaStorage();\n", "import * as converters from \"./converters\";\nimport { AsnTypeTypes } from \"./enums\";\nimport { schemaStorage } from \"./storage\";\nexport const AsnType = (options) => (target) => {\n    let schema;\n    if (!schemaStorage.has(target)) {\n        schema = schemaStorage.createDefault(target);\n        schemaStorage.set(target, schema);\n    }\n    else {\n        schema = schemaStorage.get(target);\n    }\n    Object.assign(schema, options);\n};\nexport const AsnChoiceType = () => AsnType({ type: AsnTypeTypes.Choice });\nexport const AsnSetType = (options) => AsnType({ type: AsnTypeTypes.Set, ...options });\nexport const AsnSequenceType = (options) => AsnType({ type: AsnTypeTypes.Sequence, ...options });\nexport const AsnProp = (options) => (target, propertyKey) => {\n    let schema;\n    if (!schemaStorage.has(target.constructor)) {\n        schema = schemaStorage.createDefault(target.constructor);\n        schemaStorage.set(target.constructor, schema);\n    }\n    else {\n        schema = schemaStorage.get(target.constructor);\n    }\n    const copyOptions = Object.assign({}, options);\n    if (typeof copyOptions.type === \"number\" && !copyOptions.converter) {\n        const defaultConverter = converters.defaultConverter(options.type);\n        if (!defaultConverter) {\n            throw new Error(`Cannot get default converter for property '${propertyKey}' of ${target.constructor.name}`);\n        }\n        copyOptions.converter = defaultConverter;\n    }\n    copyOptions.raw = options.raw;\n    schema.items[propertyKey] = copyOptions;\n};\n", "export class AsnSchemaValidationError extends Error {\n    constructor() {\n        super(...arguments);\n        this.schemas = [];\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport * as converters from \"./converters\";\nimport { AsnSchemaValidationError } from \"./errors\";\nimport { isConvertible, isTypeOfArray } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnParser {\n    static parse(data, target) {\n        const asn1Parsed = asn1js.fromBER(data);\n        if (asn1Parsed.result.error) {\n            throw new Error(asn1Parsed.result.error);\n        }\n        const res = this.fromASN(asn1Parsed.result, target);\n        return res;\n    }\n    static fromASN(asn1Schema, target) {\n        try {\n            if (isConvertible(target)) {\n                const value = new target();\n                return value.fromASN(asn1Schema);\n            }\n            const schema = schemaStorage.get(target);\n            schemaStorage.cache(target);\n            let targetSchema = schema.schema;\n            const choiceResult = this.handleChoiceTypes(asn1Schema, schema, target, targetSchema);\n            if (choiceResult === null || choiceResult === void 0 ? void 0 : choiceResult.result) {\n                return choiceResult.result;\n            }\n            if (choiceResult === null || choiceResult === void 0 ? void 0 : choiceResult.targetSchema) {\n                targetSchema = choiceResult.targetSchema;\n            }\n            const sequenceResult = this.handleSequenceTypes(asn1Schema, schema, target, targetSchema);\n            if (sequenceResult && \"isManualMapping\" in sequenceResult) {\n                return sequenceResult.result;\n            }\n            const asn1ComparedSchema = sequenceResult;\n            const res = new target();\n            if (isTypeOfArray(target)) {\n                return this.handleArrayTypes(asn1Schema, schema, target);\n            }\n            this.processSchemaItems(schema, asn1ComparedSchema, res);\n            return res;\n        }\n        catch (error) {\n            if (error instanceof AsnSchemaValidationError) {\n                error.schemas.push(target.name);\n            }\n            throw error;\n        }\n    }\n    static handleChoiceTypes(asn1Schema, schema, target, targetSchema) {\n        if (asn1Schema.constructor === asn1js.Constructed &&\n            schema.type === AsnTypeTypes.Choice &&\n            asn1Schema.idBlock.tagClass === 3) {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                if (schemaItem.context === asn1Schema.idBlock.tagNumber && schemaItem.implicit) {\n                    if (typeof schemaItem.type === \"function\" &&\n                        schemaStorage.has(schemaItem.type)) {\n                        const fieldSchema = schemaStorage.get(schemaItem.type);\n                        if (fieldSchema && fieldSchema.type === AsnTypeTypes.Sequence) {\n                            const newSeq = new asn1js.Sequence();\n                            if (\"value\" in asn1Schema.valueBlock &&\n                                Array.isArray(asn1Schema.valueBlock.value) &&\n                                \"value\" in newSeq.valueBlock) {\n                                newSeq.valueBlock.value = asn1Schema.valueBlock.value;\n                                const fieldValue = this.fromASN(newSeq, schemaItem.type);\n                                const res = new target();\n                                res[key] = fieldValue;\n                                return { result: res };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (asn1Schema.constructor === asn1js.Constructed &&\n            schema.type !== AsnTypeTypes.Choice) {\n            const newTargetSchema = new asn1js.Constructed({\n                idBlock: {\n                    tagClass: 3,\n                    tagNumber: asn1Schema.idBlock.tagNumber,\n                },\n                value: schema.schema.valueBlock.value,\n            });\n            for (const key in schema.items) {\n                delete asn1Schema[key];\n            }\n            return { targetSchema: newTargetSchema };\n        }\n        return null;\n    }\n    static handleSequenceTypes(asn1Schema, schema, target, targetSchema) {\n        if (schema.type === AsnTypeTypes.Sequence) {\n            const optionalChoiceFields = Object.keys(schema.items).filter((key) => {\n                const item = schema.items[key];\n                return (item.optional &&\n                    typeof item.type === \"function\" &&\n                    schemaStorage.has(item.type) &&\n                    schemaStorage.get(item.type).type === AsnTypeTypes.Choice);\n            });\n            if (optionalChoiceFields.length > 0 &&\n                \"value\" in asn1Schema.valueBlock &&\n                Array.isArray(asn1Schema.valueBlock.value) &&\n                target.name === \"CertReqMsg\") {\n                return this.handleManualMapping(asn1Schema, schema, target);\n            }\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema.${asn1ComparedSchema.result.error ? ` ${asn1ComparedSchema.result.error}` : \"\"}`);\n            }\n            return asn1ComparedSchema;\n        }\n        else {\n            const asn1ComparedSchema = asn1js.compareSchema({}, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema.${asn1ComparedSchema.result.error ? ` ${asn1ComparedSchema.result.error}` : \"\"}`);\n            }\n            return asn1ComparedSchema;\n        }\n    }\n    static handleManualMapping(asn1Schema, schema, target) {\n        const res = new target();\n        const asn1Elements = asn1Schema.valueBlock.value;\n        const schemaKeys = Object.keys(schema.items);\n        let asn1Index = 0;\n        for (let i = 0; i < schemaKeys.length; i++) {\n            const key = schemaKeys[i];\n            const schemaItem = schema.items[key];\n            if (asn1Index >= asn1Elements.length)\n                break;\n            if (schemaItem.repeated) {\n                res[key] = this.processRepeatedField(asn1Elements, asn1Index, schemaItem);\n                break;\n            }\n            else if (typeof schemaItem.type === \"number\") {\n                res[key] = this.processPrimitiveField(asn1Elements[asn1Index], schemaItem);\n                asn1Index++;\n            }\n            else if (this.isOptionalChoiceField(schemaItem)) {\n                const result = this.processOptionalChoiceField(asn1Elements[asn1Index], schemaItem);\n                if (result.processed) {\n                    res[key] = result.value;\n                    asn1Index++;\n                }\n            }\n            else {\n                res[key] = this.fromASN(asn1Elements[asn1Index], schemaItem.type);\n                asn1Index++;\n            }\n        }\n        return { result: res, verified: true, isManualMapping: true };\n    }\n    static processRepeatedField(asn1Elements, asn1Index, schemaItem) {\n        let elementsToProcess = asn1Elements.slice(asn1Index);\n        if (elementsToProcess.length === 1 && elementsToProcess[0].constructor.name === \"Sequence\") {\n            const seq = elementsToProcess[0];\n            if (seq.valueBlock && seq.valueBlock.value && Array.isArray(seq.valueBlock.value)) {\n                elementsToProcess = seq.valueBlock.value;\n            }\n        }\n        if (typeof schemaItem.type === \"number\") {\n            const converter = converters.defaultConverter(schemaItem.type);\n            if (!converter)\n                throw new Error(`No converter for ASN.1 type ${schemaItem.type}`);\n            return elementsToProcess\n                .filter((el) => el && el.valueBlock)\n                .map((el) => {\n                try {\n                    return converter.fromASN(el);\n                }\n                catch {\n                    return undefined;\n                }\n            })\n                .filter((v) => v !== undefined);\n        }\n        else {\n            return elementsToProcess\n                .filter((el) => el && el.valueBlock)\n                .map((el) => {\n                try {\n                    return this.fromASN(el, schemaItem.type);\n                }\n                catch {\n                    return undefined;\n                }\n            })\n                .filter((v) => v !== undefined);\n        }\n    }\n    static processPrimitiveField(asn1Element, schemaItem) {\n        const converter = converters.defaultConverter(schemaItem.type);\n        if (!converter)\n            throw new Error(`No converter for ASN.1 type ${schemaItem.type}`);\n        return converter.fromASN(asn1Element);\n    }\n    static isOptionalChoiceField(schemaItem) {\n        return (schemaItem.optional &&\n            typeof schemaItem.type === \"function\" &&\n            schemaStorage.has(schemaItem.type) &&\n            schemaStorage.get(schemaItem.type).type === AsnTypeTypes.Choice);\n    }\n    static processOptionalChoiceField(asn1Element, schemaItem) {\n        try {\n            const value = this.fromASN(asn1Element, schemaItem.type);\n            return { processed: true, value };\n        }\n        catch (err) {\n            if (err instanceof AsnSchemaValidationError &&\n                /Wrong values for Choice type/.test(err.message)) {\n                return { processed: false };\n            }\n            throw err;\n        }\n    }\n    static handleArrayTypes(asn1Schema, schema, target) {\n        if (!(\"value\" in asn1Schema.valueBlock && Array.isArray(asn1Schema.valueBlock.value))) {\n            throw new Error(`Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.`);\n        }\n        const itemType = schema.itemType;\n        if (typeof itemType === \"number\") {\n            const converter = converters.defaultConverter(itemType);\n            if (!converter) {\n                throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n            }\n            return target.from(asn1Schema.valueBlock.value, (element) => converter.fromASN(element));\n        }\n        else {\n            return target.from(asn1Schema.valueBlock.value, (element) => this.fromASN(element, itemType));\n        }\n    }\n    static processSchemaItems(schema, asn1ComparedSchema, res) {\n        for (const key in schema.items) {\n            const asn1SchemaValue = asn1ComparedSchema.result[key];\n            if (!asn1SchemaValue) {\n                continue;\n            }\n            const schemaItem = schema.items[key];\n            const schemaItemType = schemaItem.type;\n            let parsedValue;\n            if (typeof schemaItemType === \"number\" || isConvertible(schemaItemType)) {\n                parsedValue = this.processPrimitiveSchemaItem(asn1SchemaValue, schemaItem, schemaItemType);\n            }\n            else {\n                parsedValue = this.processComplexSchemaItem(asn1SchemaValue, schemaItem, schemaItemType);\n            }\n            if (parsedValue &&\n                typeof parsedValue === \"object\" &&\n                \"value\" in parsedValue &&\n                \"raw\" in parsedValue) {\n                res[key] = parsedValue.value;\n                res[`${key}Raw`] = parsedValue.raw;\n            }\n            else {\n                res[key] = parsedValue;\n            }\n        }\n    }\n    static processPrimitiveSchemaItem(asn1SchemaValue, schemaItem, schemaItemType) {\n        var _a;\n        const converter = (_a = schemaItem.converter) !== null && _a !== void 0 ? _a : (isConvertible(schemaItemType)\n            ? new schemaItemType()\n            : null);\n        if (!converter) {\n            throw new Error(\"Converter is empty\");\n        }\n        if (schemaItem.repeated) {\n            return this.processRepeatedPrimitiveItem(asn1SchemaValue, schemaItem, converter);\n        }\n        else {\n            return this.processSinglePrimitiveItem(asn1SchemaValue, schemaItem, schemaItemType, converter);\n        }\n    }\n    static processRepeatedPrimitiveItem(asn1SchemaValue, schemaItem, converter) {\n        if (schemaItem.implicit) {\n            const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n            const newItem = new Container();\n            newItem.valueBlock = asn1SchemaValue.valueBlock;\n            const newItemAsn = asn1js.fromBER(newItem.toBER(false));\n            if (newItemAsn.offset === -1) {\n                throw new Error(`Cannot parse the child item. ${newItemAsn.result.error}`);\n            }\n            if (!(\"value\" in newItemAsn.result.valueBlock &&\n                Array.isArray(newItemAsn.result.valueBlock.value))) {\n                throw new Error(\"Cannot get items from the ASN.1 parsed value. ASN.1 object is not constructed.\");\n            }\n            const value = newItemAsn.result.valueBlock.value;\n            return Array.from(value, (element) => converter.fromASN(element));\n        }\n        else {\n            return Array.from(asn1SchemaValue, (element) => converter.fromASN(element));\n        }\n    }\n    static processSinglePrimitiveItem(asn1SchemaValue, schemaItem, schemaItemType, converter) {\n        let value = asn1SchemaValue;\n        if (schemaItem.implicit) {\n            let newItem;\n            if (isConvertible(schemaItemType)) {\n                newItem = new schemaItemType().toSchema(\"\");\n            }\n            else {\n                const Asn1TypeName = AsnPropTypes[schemaItemType];\n                const Asn1Type = asn1js[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get '${Asn1TypeName}' class from asn1js module`);\n                }\n                newItem = new Asn1Type();\n            }\n            newItem.valueBlock = value.valueBlock;\n            value = asn1js.fromBER(newItem.toBER(false)).result;\n        }\n        return converter.fromASN(value);\n    }\n    static processComplexSchemaItem(asn1SchemaValue, schemaItem, schemaItemType) {\n        if (schemaItem.repeated) {\n            if (!Array.isArray(asn1SchemaValue)) {\n                throw new Error(\"Cannot get list of items from the ASN.1 parsed value. ASN.1 value should be iterable.\");\n            }\n            return Array.from(asn1SchemaValue, (element) => this.fromASN(element, schemaItemType));\n        }\n        else {\n            const valueToProcess = this.handleImplicitTagging(asn1SchemaValue, schemaItem, schemaItemType);\n            if (this.isOptionalChoiceField(schemaItem)) {\n                try {\n                    return this.fromASN(valueToProcess, schemaItemType);\n                }\n                catch (err) {\n                    if (err instanceof AsnSchemaValidationError &&\n                        /Wrong values for Choice type/.test(err.message)) {\n                        return undefined;\n                    }\n                    throw err;\n                }\n            }\n            else {\n                const parsedValue = this.fromASN(valueToProcess, schemaItemType);\n                if (schemaItem.raw) {\n                    return {\n                        value: parsedValue,\n                        raw: asn1SchemaValue.valueBeforeDecodeView,\n                    };\n                }\n                return parsedValue;\n            }\n        }\n    }\n    static handleImplicitTagging(asn1SchemaValue, schemaItem, schemaItemType) {\n        if (schemaItem.implicit && typeof schemaItem.context === \"number\") {\n            const schema = schemaStorage.get(schemaItemType);\n            if (schema.type === AsnTypeTypes.Sequence) {\n                const newSeq = new asn1js.Sequence();\n                if (\"value\" in asn1SchemaValue.valueBlock &&\n                    Array.isArray(asn1SchemaValue.valueBlock.value) &&\n                    \"value\" in newSeq.valueBlock) {\n                    newSeq.valueBlock.value = asn1SchemaValue.valueBlock.value;\n                    return newSeq;\n                }\n            }\n            else if (schema.type === AsnTypeTypes.Set) {\n                const newSet = new asn1js.Set();\n                if (\"value\" in asn1SchemaValue.valueBlock &&\n                    Array.isArray(asn1SchemaValue.valueBlock.value) &&\n                    \"value\" in newSet.valueBlock) {\n                    newSet.valueBlock.value = asn1SchemaValue.valueBlock.value;\n                    return newSet;\n                }\n            }\n        }\n        return asn1SchemaValue;\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport * as converters from \"./converters\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible, isArrayEqual } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnSerializer {\n    static serialize(obj) {\n        if (obj instanceof asn1js.BaseBlock) {\n            return obj.toBER(false);\n        }\n        return this.toASN(obj).toBER(false);\n    }\n    static toASN(obj) {\n        if (obj && typeof obj === \"object\" && isConvertible(obj)) {\n            return obj.toASN();\n        }\n        if (!(obj && typeof obj === \"object\")) {\n            throw new TypeError(\"Parameter 1 should be type of Object.\");\n        }\n        const target = obj.constructor;\n        const schema = schemaStorage.get(target);\n        schemaStorage.cache(target);\n        let asn1Value = [];\n        if (schema.itemType) {\n            if (!Array.isArray(obj)) {\n                throw new TypeError(\"Parameter 1 should be type of Array.\");\n            }\n            if (typeof schema.itemType === \"number\") {\n                const converter = converters.defaultConverter(schema.itemType);\n                if (!converter) {\n                    throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                }\n                asn1Value = obj.map((o) => converter.toASN(o));\n            }\n            else {\n                asn1Value = obj.map((o) => this.toAsnItem({ type: schema.itemType }, \"[]\", target, o));\n            }\n        }\n        else {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                const objProp = obj[key];\n                if (objProp === undefined ||\n                    schemaItem.defaultValue === objProp ||\n                    (typeof schemaItem.defaultValue === \"object\" &&\n                        typeof objProp === \"object\" &&\n                        isArrayEqual(this.serialize(schemaItem.defaultValue), this.serialize(objProp)))) {\n                    continue;\n                }\n                const asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);\n                if (typeof schemaItem.context === \"number\") {\n                    if (schemaItem.implicit) {\n                        if (!schemaItem.repeated &&\n                            (typeof schemaItem.type === \"number\" || isConvertible(schemaItem.type))) {\n                            const value = {};\n                            value.valueHex =\n                                asn1Item instanceof asn1js.Null\n                                    ? asn1Item.valueBeforeDecodeView\n                                    : asn1Item.valueBlock.toBER();\n                            asn1Value.push(new asn1js.Primitive({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                ...value,\n                            }));\n                        }\n                        else {\n                            asn1Value.push(new asn1js.Constructed({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                value: asn1Item.valueBlock.value,\n                            }));\n                        }\n                    }\n                    else {\n                        asn1Value.push(new asn1js.Constructed({\n                            optional: schemaItem.optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: schemaItem.context,\n                            },\n                            value: [asn1Item],\n                        }));\n                    }\n                }\n                else if (schemaItem.repeated) {\n                    asn1Value = asn1Value.concat(asn1Item);\n                }\n                else {\n                    asn1Value.push(asn1Item);\n                }\n            }\n        }\n        let asnSchema;\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                asnSchema = new asn1js.Sequence({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Set:\n                asnSchema = new asn1js.Set({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Choice:\n                if (!asn1Value[0]) {\n                    throw new Error(`Schema '${target.name}' has wrong data. Choice cannot be empty.`);\n                }\n                asnSchema = asn1Value[0];\n                break;\n        }\n        return asnSchema;\n    }\n    static toAsnItem(schemaItem, key, target, objProp) {\n        let asn1Item;\n        if (typeof schemaItem.type === \"number\") {\n            const converter = schemaItem.converter;\n            if (!converter) {\n                throw new Error(`Property '${key}' doesn't have converter for type ${AsnPropTypes[schemaItem.type]} in schema '${target.name}'`);\n            }\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => converter.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = converter.toASN(objProp);\n            }\n        }\n        else {\n            if (schemaItem.repeated) {\n                if (!Array.isArray(objProp)) {\n                    throw new TypeError(\"Parameter 'objProp' should be type of Array.\");\n                }\n                const items = Array.from(objProp, (element) => this.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\" ? asn1js.Sequence : asn1js.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = this.toASN(objProp);\n            }\n        }\n        return asn1Item;\n    }\n}\n", "export class AsnArray extends Array {\n    constructor(items = []) {\n        if (typeof items === \"number\") {\n            super(items);\n        }\n        else {\n            super();\n            for (const item of items) {\n                this.push(item);\n            }\n        }\n    }\n}\n", "import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nimport { AsnParser } from \"./parser\";\nimport { AsnSerializer } from \"./serializer\";\nexport class AsnConvert {\n    static serialize(obj) {\n        return AsnSerializer.serialize(obj);\n    }\n    static parse(data, target) {\n        return AsnParser.parse(data, target);\n    }\n    static toString(data) {\n        const buf = BufferSourceConverter.isBufferSource(data)\n            ? BufferSourceConverter.toArrayBuffer(data)\n            : AsnConvert.serialize(data);\n        const asn = asn1js.fromBER(buf);\n        if (asn.offset === -1) {\n            throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);\n        }\n        return asn.result.toString();\n    }\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { Convert } from \"pvtsutils\";\nexport class IpConverter {\n    static isIPv4(ip) {\n        return /^(\\d{1,3}\\.){3}\\d{1,3}$/.test(ip);\n    }\n    static parseIPv4(ip) {\n        const parts = ip.split(\".\");\n        if (parts.length !== 4) {\n            throw new Error(\"Invalid IPv4 address\");\n        }\n        return parts.map((part) => {\n            const num = parseInt(part, 10);\n            if (isNaN(num) || num < 0 || num > 255) {\n                throw new Error(\"Invalid IPv4 address part\");\n            }\n            return num;\n        });\n    }\n    static parseIPv6(ip) {\n        const expandedIP = this.expandIPv6(ip);\n        const parts = expandedIP.split(\":\");\n        if (parts.length !== 8) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return parts.reduce((bytes, part) => {\n            const num = parseInt(part, 16);\n            if (isNaN(num) || num < 0 || num > 0xffff) {\n                throw new Error(\"Invalid IPv6 address part\");\n            }\n            bytes.push((num >> 8) & 0xff);\n            bytes.push(num & 0xff);\n            return bytes;\n        }, []);\n    }\n    static expandIPv6(ip) {\n        if (!ip.includes(\"::\")) {\n            return ip;\n        }\n        const parts = ip.split(\"::\");\n        if (parts.length > 2) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        const left = parts[0] ? parts[0].split(\":\") : [];\n        const right = parts[1] ? parts[1].split(\":\") : [];\n        const missing = 8 - (left.length + right.length);\n        if (missing < 0) {\n            throw new Error(\"Invalid IPv6 address\");\n        }\n        return [...left, ...Array(missing).fill(\"0\"), ...right].join(\":\");\n    }\n    static formatIPv6(bytes) {\n        const parts = [];\n        for (let i = 0; i < 16; i += 2) {\n            parts.push(((bytes[i] << 8) | bytes[i + 1]).toString(16));\n        }\n        return this.compressIPv6(parts.join(\":\"));\n    }\n    static compressIPv6(ip) {\n        const parts = ip.split(\":\");\n        let longestZeroStart = -1;\n        let longestZeroLength = 0;\n        let currentZeroStart = -1;\n        let currentZeroLength = 0;\n        for (let i = 0; i < parts.length; i++) {\n            if (parts[i] === \"0\") {\n                if (currentZeroStart === -1) {\n                    currentZeroStart = i;\n                }\n                currentZeroLength++;\n            }\n            else {\n                if (currentZeroLength > longestZeroLength) {\n                    longestZeroStart = currentZeroStart;\n                    longestZeroLength = currentZeroLength;\n                }\n                currentZeroStart = -1;\n                currentZeroLength = 0;\n            }\n        }\n        if (currentZeroLength > longestZeroLength) {\n            longestZeroStart = currentZeroStart;\n            longestZeroLength = currentZeroLength;\n        }\n        if (longestZeroLength > 1) {\n            const before = parts.slice(0, longestZeroStart).join(\":\");\n            const after = parts.slice(longestZeroStart + longestZeroLength).join(\":\");\n            return `${before}::${after}`;\n        }\n        return ip;\n    }\n    static parseCIDR(text) {\n        const [addr, prefixStr] = text.split(\"/\");\n        const prefix = parseInt(prefixStr, 10);\n        if (this.isIPv4(addr)) {\n            if (prefix < 0 || prefix > 32) {\n                throw new Error(\"Invalid IPv4 prefix length\");\n            }\n            return [this.parseIPv4(addr), prefix];\n        }\n        else {\n            if (prefix < 0 || prefix > 128) {\n                throw new Error(\"Invalid IPv6 prefix length\");\n            }\n            return [this.parseIPv6(addr), prefix];\n        }\n    }\n    static decodeIP(value) {\n        if (value.length === 64 && parseInt(value, 16) === 0) {\n            return \"::/0\";\n        }\n        if (value.length !== 16) {\n            return value;\n        }\n        const mask = parseInt(value.slice(8), 16)\n            .toString(2)\n            .split(\"\")\n            .reduce((a, k) => a + +k, 0);\n        let ip = value.slice(0, 8).replace(/(.{2})/g, (match) => `${parseInt(match, 16)}.`);\n        ip = ip.slice(0, -1);\n        return `${ip}/${mask}`;\n    }\n    static toString(buf) {\n        const uint8 = new Uint8Array(buf);\n        if (uint8.length === 4) {\n            return Array.from(uint8).join(\".\");\n        }\n        if (uint8.length === 16) {\n            return this.formatIPv6(uint8);\n        }\n        if (uint8.length === 8 || uint8.length === 32) {\n            const half = uint8.length / 2;\n            const addrBytes = uint8.slice(0, half);\n            const maskBytes = uint8.slice(half);\n            const isAllZeros = uint8.every((byte) => byte === 0);\n            if (isAllZeros) {\n                return uint8.length === 8 ? \"0.0.0.0/0\" : \"::/0\";\n            }\n            const prefixLen = maskBytes.reduce((a, b) => a + (b.toString(2).match(/1/g) || []).length, 0);\n            if (uint8.length === 8) {\n                const addrStr = Array.from(addrBytes).join(\".\");\n                return `${addrStr}/${prefixLen}`;\n            }\n            else {\n                const addrStr = this.formatIPv6(addrBytes);\n                return `${addrStr}/${prefixLen}`;\n            }\n        }\n        return this.decodeIP(Convert.ToHex(buf));\n    }\n    static fromString(text) {\n        if (text.includes(\"/\")) {\n            const [addr, prefix] = this.parseCIDR(text);\n            const maskBytes = new Uint8Array(addr.length);\n            let bitsLeft = prefix;\n            for (let i = 0; i < maskBytes.length; i++) {\n                if (bitsLeft >= 8) {\n                    maskBytes[i] = 0xff;\n                    bitsLeft -= 8;\n                }\n                else if (bitsLeft > 0) {\n                    maskBytes[i] = 0xff << (8 - bitsLeft);\n                    bitsLeft = 0;\n                }\n            }\n            const out = new Uint8Array(addr.length * 2);\n            out.set(addr, 0);\n            out.set(maskBytes, addr.length);\n            return out.buffer;\n        }\n        const bytes = this.isIPv4(text) ? this.parseIPv4(text) : this.parseIPv6(text);\n        return new Uint8Array(bytes).buffer;\n    }\n}\n", "var RelativeDistinguishedName_1, RDNSequence_1, Name_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Convert } from \"pvtsutils\";\nlet DirectoryString = class DirectoryString {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return (this.bmpString ||\n            this.printableString ||\n            this.teletexString ||\n            this.universalString ||\n            this.utf8String ||\n            \"\");\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.TeletexString })\n], DirectoryString.prototype, \"teletexString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], DirectoryString.prototype, \"printableString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.UniversalString })\n], DirectoryString.prototype, \"universalString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DirectoryString.prototype, \"utf8String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DirectoryString.prototype, \"bmpString\", void 0);\nDirectoryString = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DirectoryString);\nexport { DirectoryString };\nlet AttributeValue = class AttributeValue extends DirectoryString {\n    constructor(params = {}) {\n        super(params);\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || (this.anyValue ? Convert.ToHex(this.anyValue) : super.toString());\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], AttributeValue.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], AttributeValue.prototype, \"anyValue\", void 0);\nAttributeValue = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttributeValue);\nexport { AttributeValue };\nexport class AttributeTypeAndValue {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new AttributeValue();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AttributeTypeAndValue.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AttributeValue })\n], AttributeTypeAndValue.prototype, \"value\", void 0);\nlet RelativeDistinguishedName = RelativeDistinguishedName_1 = class RelativeDistinguishedName extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RelativeDistinguishedName_1.prototype);\n    }\n};\nRelativeDistinguishedName = RelativeDistinguishedName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: AttributeTypeAndValue })\n], RelativeDistinguishedName);\nexport { RelativeDistinguishedName };\nlet RDNSequence = RDNSequence_1 = class RDNSequence extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RDNSequence_1.prototype);\n    }\n};\nRDNSequence = RDNSequence_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: RelativeDistinguishedName })\n], RDNSequence);\nexport { RDNSequence };\nlet Name = Name_1 = class Name extends RDNSequence {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Name_1.prototype);\n    }\n};\nName = Name_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Name);\nexport { Name };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnOctetStringConverter, } from \"@peculiar/asn1-schema\";\nimport { IpConverter } from \"./ip_converter\";\nimport { DirectoryString, Name } from \"./name\";\nexport const AsnIpConverter = {\n    fromASN: (value) => IpConverter.toString(AsnOctetStringConverter.fromASN(value)),\n    toASN: (value) => AsnOctetStringConverter.toASN(IpConverter.fromString(value)),\n};\nexport class OtherName {\n    constructor(params = {}) {\n        this.typeId = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherName.prototype, \"typeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], OtherName.prototype, \"value\", void 0);\nexport class EDIPartyName {\n    constructor(params = {}) {\n        this.partyName = new DirectoryString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DirectoryString, optional: true, context: 0, implicit: true })\n], EDIPartyName.prototype, \"nameAssigner\", void 0);\n__decorate([\n    AsnProp({ type: DirectoryString, context: 1, implicit: true })\n], EDIPartyName.prototype, \"partyName\", void 0);\nlet GeneralName = class GeneralName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherName, context: 0, implicit: true })\n], GeneralName.prototype, \"otherName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 1, implicit: true })\n], GeneralName.prototype, \"rfc822Name\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 2, implicit: true })\n], GeneralName.prototype, \"dNSName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 3, implicit: true })\n], GeneralName.prototype, \"x400Address\", void 0);\n__decorate([\n    AsnProp({ type: Name, context: 4, implicit: false })\n], GeneralName.prototype, \"directoryName\", void 0);\n__decorate([\n    AsnProp({ type: EDIPartyName, context: 5 })\n], GeneralName.prototype, \"ediPartyName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 6, implicit: true })\n], GeneralName.prototype, \"uniformResourceIdentifier\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.OctetString,\n        context: 7,\n        implicit: true,\n        converter: AsnIpConverter,\n    })\n], GeneralName.prototype, \"iPAddress\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, context: 8, implicit: true })\n], GeneralName.prototype, \"registeredID\", void 0);\nGeneralName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], GeneralName);\nexport { GeneralName };\n", "export const id_pkix = \"1.3.6.1.5.5.7\";\nexport const id_pe = `${id_pkix}.1`;\nexport const id_qt = `${id_pkix}.2`;\nexport const id_kp = `${id_pkix}.3`;\nexport const id_ad = `${id_pkix}.48`;\nexport const id_qt_csp = `${id_qt}.1`;\nexport const id_qt_unotice = `${id_qt}.2`;\nexport const id_ad_ocsp = `${id_ad}.1`;\nexport const id_ad_caIssuers = `${id_ad}.2`;\nexport const id_ad_timeStamping = `${id_ad}.3`;\nexport const id_ad_caRepository = `${id_ad}.5`;\nexport const id_ce = \"2.5.29\";\n", "var AuthorityInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_pe } from \"../object_identifiers\";\nexport const id_pe_authorityInfoAccess = `${id_pe}.1`;\nexport class AccessDescription {\n    constructor(params = {}) {\n        this.accessMethod = \"\";\n        this.accessLocation = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AccessDescription.prototype, \"accessMethod\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], AccessDescription.prototype, \"accessLocation\", void 0);\nlet AuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = class AuthorityInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthorityInfoAccessSyntax_1.prototype);\n    }\n};\nAuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], AuthorityInfoAccessSyntax);\nexport { AuthorityInfoAccessSyntax };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, OctetString, } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_authorityKeyIdentifier = `${id_ce}.35`;\nexport class KeyIdentifier extends OctetString {\n}\nexport class AuthorityKeyIdentifier {\n    constructor(params = {}) {\n        if (params) {\n            Object.assign(this, params);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: KeyIdentifier, context: 0, optional: true, implicit: true })\n], AuthorityKeyIdentifier.prototype, \"keyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, optional: true, implicit: true, repeated: \"sequence\" })\n], AuthorityKeyIdentifier.prototype, \"authorityCertIssuer\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 2,\n        optional: true,\n        implicit: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], AuthorityKeyIdentifier.prototype, \"authorityCertSerialNumber\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_basicConstraints = `${id_ce}.19`;\nexport class BasicConstraints {\n    constructor(params = {}) {\n        this.cA = false;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: false })\n], BasicConstraints.prototype, \"cA\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], BasicConstraints.prototype, \"pathLenConstraint\", void 0);\n", "var GeneralNames_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"./general_name\";\nimport { AsnArray } from \"@peculiar/asn1-schema\";\nlet GeneralNames = GeneralNames_1 = class GeneralNames extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralNames_1.prototype);\n    }\n};\nGeneralNames = GeneralNames_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralName })\n], GeneralNames);\nexport { GeneralNames };\n", "var CertificateIssuer_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificateIssuer = `${id_ce}.29`;\nlet CertificateIssuer = CertificateIssuer_1 = class CertificateIssuer extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateIssuer_1.prototype);\n    }\n};\nCertificateIssuer = CertificateIssuer_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CertificateIssuer);\nexport { CertificateIssuer };\n", "var CertificatePolicies_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificatePolicies = `${id_ce}.32`;\nexport const id_ce_certificatePolicies_anyPolicy = `${id_ce_certificatePolicies}.0`;\nlet DisplayText = class DisplayText {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || this.visibleString || this.bmpString || this.utf8String || \"\";\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], DisplayText.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.VisibleString })\n], DisplayText.prototype, \"visibleString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DisplayText.prototype, \"bmpString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DisplayText.prototype, \"utf8String\", void 0);\nDisplayText = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DisplayText);\nexport { DisplayText };\nexport class NoticeReference {\n    constructor(params = {}) {\n        this.organization = new DisplayText();\n        this.noticeNumbers = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DisplayText })\n], NoticeReference.prototype, \"organization\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, repeated: \"sequence\" })\n], NoticeReference.prototype, \"noticeNumbers\", void 0);\nexport class UserNotice {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: NoticeReference, optional: true })\n], UserNotice.prototype, \"noticeRef\", void 0);\n__decorate([\n    AsnProp({ type: DisplayText, optional: true })\n], UserNotice.prototype, \"explicitText\", void 0);\nlet Qualifier = class Qualifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], Qualifier.prototype, \"cPSuri\", void 0);\n__decorate([\n    AsnProp({ type: UserNotice })\n], Qualifier.prototype, \"userNotice\", void 0);\nQualifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Qualifier);\nexport { Qualifier };\nexport class PolicyQualifierInfo {\n    constructor(params = {}) {\n        this.policyQualifierId = \"\";\n        this.qualifier = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyQualifierInfo.prototype, \"policyQualifierId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], PolicyQualifierInfo.prototype, \"qualifier\", void 0);\nexport class PolicyInformation {\n    constructor(params = {}) {\n        this.policyIdentifier = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyInformation.prototype, \"policyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: PolicyQualifierInfo, repeated: \"sequence\", optional: true })\n], PolicyInformation.prototype, \"policyQualifiers\", void 0);\nlet CertificatePolicies = CertificatePolicies_1 = class CertificatePolicies extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificatePolicies_1.prototype);\n    }\n};\nCertificatePolicies = CertificatePolicies_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyInformation })\n], CertificatePolicies);\nexport { CertificatePolicies };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLNumber = `${id_ce}.20`;\nlet CRLNumber = class CRLNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CRLNumber.prototype, \"value\", void 0);\nCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLNumber);\nexport { CRLNumber };\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLNumber } from \"./crl_number\";\nexport const id_ce_deltaCRLIndicator = `${id_ce}.27`;\nlet BaseCRLNumber = class BaseCRLNumber extends CRLNumber {\n};\nBaseCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], BaseCRLNumber);\nexport { BaseCRLNumber };\n", "var CRLDistributionPoints_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray, BitString } from \"@peculiar/asn1-schema\";\nimport { RelativeDistinguishedName } from \"../name\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLDistributionPoints = `${id_ce}.31`;\nexport var ReasonFlags;\n(function (ReasonFlags) {\n    ReasonFlags[ReasonFlags[\"unused\"] = 1] = \"unused\";\n    ReasonFlags[ReasonFlags[\"keyCompromise\"] = 2] = \"keyCompromise\";\n    ReasonFlags[ReasonFlags[\"cACompromise\"] = 4] = \"cACompromise\";\n    ReasonFlags[ReasonFlags[\"affiliationChanged\"] = 8] = \"affiliationChanged\";\n    ReasonFlags[ReasonFlags[\"superseded\"] = 16] = \"superseded\";\n    ReasonFlags[ReasonFlags[\"cessationOfOperation\"] = 32] = \"cessationOfOperation\";\n    ReasonFlags[ReasonFlags[\"certificateHold\"] = 64] = \"certificateHold\";\n    ReasonFlags[ReasonFlags[\"privilegeWithdrawn\"] = 128] = \"privilegeWithdrawn\";\n    ReasonFlags[ReasonFlags[\"aACompromise\"] = 256] = \"aACompromise\";\n})(ReasonFlags || (ReasonFlags = {}));\nexport class Reason extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & ReasonFlags.aACompromise) {\n            res.push(\"aACompromise\");\n        }\n        if (flags & ReasonFlags.affiliationChanged) {\n            res.push(\"affiliationChanged\");\n        }\n        if (flags & ReasonFlags.cACompromise) {\n            res.push(\"cACompromise\");\n        }\n        if (flags & ReasonFlags.certificateHold) {\n            res.push(\"certificateHold\");\n        }\n        if (flags & ReasonFlags.cessationOfOperation) {\n            res.push(\"cessationOfOperation\");\n        }\n        if (flags & ReasonFlags.keyCompromise) {\n            res.push(\"keyCompromise\");\n        }\n        if (flags & ReasonFlags.privilegeWithdrawn) {\n            res.push(\"privilegeWithdrawn\");\n        }\n        if (flags & ReasonFlags.superseded) {\n            res.push(\"superseded\");\n        }\n        if (flags & ReasonFlags.unused) {\n            res.push(\"unused\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nlet DistributionPointName = class DistributionPointName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, repeated: \"sequence\", implicit: true })\n], DistributionPointName.prototype, \"fullName\", void 0);\n__decorate([\n    AsnProp({ type: RelativeDistinguishedName, context: 1, implicit: true })\n], DistributionPointName.prototype, \"nameRelativeToCRLIssuer\", void 0);\nDistributionPointName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DistributionPointName);\nexport { DistributionPointName };\nexport class DistributionPoint {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], DistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 1, optional: true, implicit: true })\n], DistributionPoint.prototype, \"reasons\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 2, optional: true, repeated: \"sequence\", implicit: true })\n], DistributionPoint.prototype, \"cRLIssuer\", void 0);\nlet CRLDistributionPoints = CRLDistributionPoints_1 = class CRLDistributionPoints extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CRLDistributionPoints_1.prototype);\n    }\n};\nCRLDistributionPoints = CRLDistributionPoints_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], CRLDistributionPoints);\nexport { CRLDistributionPoints };\n", "var FreshestCRL_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLDistributionPoints, DistributionPoint } from \"./crl_distribution_points\";\nexport const id_ce_freshestCRL = `${id_ce}.46`;\nlet FreshestCRL = FreshestCRL_1 = class FreshestCRL extends CRLDistributionPoints {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, FreshestCRL_1.prototype);\n    }\n};\nFreshestCRL = FreshestCRL_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], FreshestCRL);\nexport { FreshestCRL };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { DistributionPointName, Reason } from \"./crl_distribution_points\";\nimport { id_ce } from \"../object_identifiers\";\nimport { AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport const id_ce_issuingDistributionPoint = `${id_ce}.28`;\nexport class IssuingDistributionPoint {\n    constructor(params = {}) {\n        this.onlyContainsUserCerts = IssuingDistributionPoint.ONLY;\n        this.onlyContainsCACerts = IssuingDistributionPoint.ONLY;\n        this.indirectCRL = IssuingDistributionPoint.ONLY;\n        this.onlyContainsAttributeCerts = IssuingDistributionPoint.ONLY;\n        Object.assign(this, params);\n    }\n}\nIssuingDistributionPoint.ONLY = false;\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], IssuingDistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 1,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsUserCerts\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 2,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsCACerts\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 3, optional: true, implicit: true })\n], IssuingDistributionPoint.prototype, \"onlySomeReasons\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 4,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"indirectCRL\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        context: 5,\n        defaultValue: IssuingDistributionPoint.ONLY,\n        implicit: true,\n    })\n], IssuingDistributionPoint.prototype, \"onlyContainsAttributeCerts\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLReasons = `${id_ce}.21`;\nexport var CRLReasons;\n(function (CRLReasons) {\n    CRLReasons[CRLReasons[\"unspecified\"] = 0] = \"unspecified\";\n    CRLReasons[CRLReasons[\"keyCompromise\"] = 1] = \"keyCompromise\";\n    CRLReasons[CRLReasons[\"cACompromise\"] = 2] = \"cACompromise\";\n    CRLReasons[CRLReasons[\"affiliationChanged\"] = 3] = \"affiliationChanged\";\n    CRLReasons[CRLReasons[\"superseded\"] = 4] = \"superseded\";\n    CRLReasons[CRLReasons[\"cessationOfOperation\"] = 5] = \"cessationOfOperation\";\n    CRLReasons[CRLReasons[\"certificateHold\"] = 6] = \"certificateHold\";\n    CRLReasons[CRLReasons[\"removeFromCRL\"] = 8] = \"removeFromCRL\";\n    CRLReasons[CRLReasons[\"privilegeWithdrawn\"] = 9] = \"privilegeWithdrawn\";\n    CRLReasons[CRLReasons[\"aACompromise\"] = 10] = \"aACompromise\";\n})(CRLReasons || (CRLReasons = {}));\nlet CRLReason = class CRLReason {\n    constructor(reason = CRLReasons.unspecified) {\n        this.reason = CRLReasons.unspecified;\n        this.reason = reason;\n    }\n    toJSON() {\n        return CRLReasons[this.reason];\n    }\n    toString() {\n        return this.toJSON();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], CRLReason.prototype, \"reason\", void 0);\nCRLReason = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLReason);\nexport { CRLReason };\n", "var ExtendedKeyUsage_1;\nimport { __decorate } from \"tslib\";\nimport { AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce, id_kp } from \"../object_identifiers\";\nexport const id_ce_extKeyUsage = `${id_ce}.37`;\nlet ExtendedKeyUsage = ExtendedKeyUsage_1 = class ExtendedKeyUsage extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedKeyUsage_1.prototype);\n    }\n};\nExtendedKeyUsage = ExtendedKeyUsage_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], ExtendedKeyUsage);\nexport { ExtendedKeyUsage };\nexport const anyExtendedKeyUsage = `${id_ce_extKeyUsage}.0`;\nexport const id_kp_serverAuth = `${id_kp}.1`;\nexport const id_kp_clientAuth = `${id_kp}.2`;\nexport const id_kp_codeSigning = `${id_kp}.3`;\nexport const id_kp_emailProtection = `${id_kp}.4`;\nexport const id_kp_timeStamping = `${id_kp}.8`;\nexport const id_kp_OCSPSigning = `${id_kp}.9`;\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_inhibitAnyPolicy = `${id_ce}.54`;\nlet InhibitAnyPolicy = class InhibitAnyPolicy {\n    constructor(value = new ArrayBuffer(0)) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], InhibitAnyPolicy.prototype, \"value\", void 0);\nInhibitAnyPolicy = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InhibitAnyPolicy);\nexport { InhibitAnyPolicy };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_invalidityDate = `${id_ce}.24`;\nlet InvalidityDate = class InvalidityDate {\n    constructor(value) {\n        this.value = new Date();\n        if (value) {\n            this.value = value;\n        }\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], InvalidityDate.prototype, \"value\", void 0);\nInvalidityDate = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InvalidityDate);\nexport { InvalidityDate };\n", "var IssueAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_issuerAltName = `${id_ce}.18`;\nlet IssueAlternativeName = IssueAlternativeName_1 = class IssueAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, IssueAlternativeName_1.prototype);\n    }\n};\nIssueAlternativeName = IssueAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], IssueAlternativeName);\nexport { IssueAlternativeName };\n", "import { BitString } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_keyUsage = `${id_ce}.15`;\nexport var KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nexport class KeyUsage extends BitString {\n    toJSON() {\n        const flag = this.toNumber();\n        const res = [];\n        if (flag & KeyUsageFlags.cRLSign) {\n            res.push(\"crlSign\");\n        }\n        if (flag & KeyUsageFlags.dataEncipherment) {\n            res.push(\"dataEncipherment\");\n        }\n        if (flag & KeyUsageFlags.decipherOnly) {\n            res.push(\"decipherOnly\");\n        }\n        if (flag & KeyUsageFlags.digitalSignature) {\n            res.push(\"digitalSignature\");\n        }\n        if (flag & KeyUsageFlags.encipherOnly) {\n            res.push(\"encipherOnly\");\n        }\n        if (flag & KeyUsageFlags.keyAgreement) {\n            res.push(\"keyAgreement\");\n        }\n        if (flag & KeyUsageFlags.keyCertSign) {\n            res.push(\"keyCertSign\");\n        }\n        if (flag & KeyUsageFlags.keyEncipherment) {\n            res.push(\"keyEncipherment\");\n        }\n        if (flag & KeyUsageFlags.nonRepudiation) {\n            res.push(\"nonRepudiation\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\n", "var GeneralSubtrees_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_nameConstraints = `${id_ce}.30`;\nexport class GeneralSubtree {\n    constructor(params = {}) {\n        this.base = new GeneralName();\n        this.minimum = 0;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], GeneralSubtree.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 0, defaultValue: 0, implicit: true })\n], GeneralSubtree.prototype, \"minimum\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 1, optional: true, implicit: true })\n], GeneralSubtree.prototype, \"maximum\", void 0);\nlet GeneralSubtrees = GeneralSubtrees_1 = class GeneralSubtrees extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralSubtrees_1.prototype);\n    }\n};\nGeneralSubtrees = GeneralSubtrees_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralSubtree })\n], GeneralSubtrees);\nexport { GeneralSubtrees };\nexport class NameConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 0, optional: true, implicit: true })\n], NameConstraints.prototype, \"permittedSubtrees\", void 0);\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 1, optional: true, implicit: true })\n], NameConstraints.prototype, \"excludedSubtrees\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyConstraints = `${id_ce}.36`;\nexport class PolicyConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"requireExplicitPolicy\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 1,\n        implicit: true,\n        optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"inhibitPolicyMapping\", void 0);\n", "var PolicyMappings_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyMappings = `${id_ce}.33`;\nexport class PolicyMapping {\n    constructor(params = {}) {\n        this.issuerDomainPolicy = \"\";\n        this.subjectDomainPolicy = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"issuerDomainPolicy\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMapping.prototype, \"subjectDomainPolicy\", void 0);\nlet PolicyMappings = PolicyMappings_1 = class PolicyMappings extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, PolicyMappings_1.prototype);\n    }\n};\nPolicyMappings = PolicyMappings_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyMapping })\n], PolicyMappings);\nexport { PolicyMappings };\n", "var SubjectAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectAltName = `${id_ce}.17`;\nlet SubjectAlternativeName = SubjectAlternativeName_1 = class SubjectAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectAlternativeName_1.prototype);\n    }\n};\nSubjectAlternativeName = SubjectAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SubjectAlternativeName);\nexport { SubjectAlternativeName };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"values\", void 0);\n", "var SubjectDirectoryAttributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"../attribute\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectDirectoryAttributes = `${id_ce}.9`;\nlet SubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = class SubjectDirectoryAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectDirectoryAttributes_1.prototype);\n    }\n};\nSubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], SubjectDirectoryAttributes);\nexport { SubjectDirectoryAttributes };\n", "import { id_ce } from \"../object_identifiers\";\nimport { KeyIdentifier } from \"./authority_key_identifier\";\nexport const id_ce_subjectKeyIdentifier = `${id_ce}.14`;\nexport class SubjectKeyIdentifier extends KeyIdentifier {\n}\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_privateKeyUsagePeriod = `${id_ce}.16`;\nexport class PrivateKeyUsagePeriod {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 0, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 1, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notAfter\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, BitString } from \"@peculiar/asn1-schema\";\nexport const id_entrust_entrustVersInfo = \"1.2.840.113533.7.65.0\";\nexport var EntrustInfoFlags;\n(function (EntrustInfoFlags) {\n    EntrustInfoFlags[EntrustInfoFlags[\"keyUpdateAllowed\"] = 1] = \"keyUpdateAllowed\";\n    EntrustInfoFlags[EntrustInfoFlags[\"newExtensions\"] = 2] = \"newExtensions\";\n    EntrustInfoFlags[EntrustInfoFlags[\"pKIXCertificate\"] = 4] = \"pKIXCertificate\";\n})(EntrustInfoFlags || (EntrustInfoFlags = {}));\nexport class EntrustInfo extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & EntrustInfoFlags.pKIXCertificate) {\n            res.push(\"pKIXCertificate\");\n        }\n        if (flags & EntrustInfoFlags.newExtensions) {\n            res.push(\"newExtensions\");\n        }\n        if (flags & EntrustInfoFlags.keyUpdateAllowed) {\n            res.push(\"keyUpdateAllowed\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nexport class EntrustVersionInfo {\n    constructor(params = {}) {\n        this.entrustVers = \"\";\n        this.entrustInfoFlags = new EntrustInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralString })\n], EntrustVersionInfo.prototype, \"entrustVers\", void 0);\n__decorate([\n    AsnProp({ type: EntrustInfo })\n], EntrustVersionInfo.prototype, \"entrustInfoFlags\", void 0);\n", "var SubjectInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_pe } from \"../object_identifiers\";\nimport { AccessDescription } from \"./authority_information_access\";\nexport const id_pe_subjectInfoAccess = `${id_pe}.11`;\nlet SubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = class SubjectInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectInfoAccessSyntax_1.prototype);\n    }\n};\nSubjectInfoAccessSyntax = SubjectInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], SubjectInfoAccessSyntax);\nexport { SubjectInfoAccessSyntax };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport * as pvtsutils from \"pvtsutils\";\nexport class AlgorithmIdentifier {\n    constructor(params = {}) {\n        this.algorithm = \"\";\n        Object.assign(this, params);\n    }\n    isEqual(data) {\n        return (data instanceof AlgorithmIdentifier &&\n            data.algorithm == this.algorithm &&\n            ((data.parameters &&\n                this.parameters &&\n                pvtsutils.isEqual(data.parameters, this.parameters)) ||\n                data.parameters === this.parameters));\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.ObjectIdentifier,\n    })\n], AlgorithmIdentifier.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Any,\n        optional: true,\n    })\n], AlgorithmIdentifier.prototype, \"parameters\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nexport class SubjectPublicKeyInfo {\n    constructor(params = {}) {\n        this.algorithm = new AlgorithmIdentifier();\n        this.subjectPublicKey = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], SubjectPublicKeyInfo.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], SubjectPublicKeyInfo.prototype, \"subjectPublicKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet Time = class Time {\n    constructor(time) {\n        if (time) {\n            if (typeof time === \"string\" || typeof time === \"number\" || time instanceof Date) {\n                const date = new Date(time);\n                if (date.getUTCFullYear() > 2049) {\n                    this.generalTime = date;\n                }\n                else {\n                    this.utcTime = date;\n                }\n            }\n            else {\n                Object.assign(this, time);\n            }\n        }\n    }\n    getTime() {\n        const time = this.utcTime || this.generalTime;\n        if (!time) {\n            throw new Error(\"Cannot get time from CHOICE object\");\n        }\n        return time;\n    }\n};\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.UTCTime,\n    })\n], Time.prototype, \"utcTime\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.GeneralizedTime,\n    })\n], Time.prototype, \"generalTime\", void 0);\nTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Time);\nexport { Time };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { Time } from \"./time\";\nexport class Validity {\n    constructor(params) {\n        this.notBefore = new Time(new Date());\n        this.notAfter = new Time(new Date());\n        if (params) {\n            this.notBefore = new Time(params.notBefore);\n            this.notAfter = new Time(params.notAfter);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notAfter\", void 0);\n", "var Extensions_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nexport class Extension {\n    constructor(params = {}) {\n        this.extnID = \"\";\n        this.critical = Extension.CRITICAL;\n        this.extnValue = new OctetString();\n        Object.assign(this, params);\n    }\n}\nExtension.CRITICAL = false;\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Extension.prototype, \"extnID\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        defaultValue: Extension.CRITICAL,\n    })\n], Extension.prototype, \"critical\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], Extension.prototype, \"extnValue\", void 0);\nlet Extensions = Extensions_1 = class Extensions extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Extensions_1.prototype);\n    }\n};\nExtensions = Extensions_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Extension })\n], Extensions);\nexport { Extensions };\n", "export var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n    Version[Version[\"v2\"] = 1] = \"v2\";\n    Version[Version[\"v3\"] = 2] = \"v3\";\n})(Version || (Version = {}));\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { SubjectPublicKeyInfo } from \"./subject_public_key_info\";\nimport { Validity } from \"./validity\";\nimport { Extensions } from \"./extension\";\nimport { Version } from \"./types\";\nexport class TBSCertificate {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.serialNumber = new ArrayBuffer(0);\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.validity = new Validity();\n        this.subject = new Name();\n        this.subjectPublicKeyInfo = new SubjectPublicKeyInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        defaultValue: Version.v1,\n    })\n], TBSCertificate.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], TBSCertificate.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertificate.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Validity })\n], TBSCertificate.prototype, \"validity\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], TBSCertificate.prototype, \"subjectPublicKeyInfo\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.BitString,\n        context: 1,\n        implicit: true,\n        optional: true,\n    })\n], TBSCertificate.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 2, implicit: true, optional: true })\n], TBSCertificate.prototype, \"subjectUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, context: 3, optional: true })\n], TBSCertificate.prototype, \"extensions\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertificate } from \"./tbs_certificate\";\nexport class Certificate {\n    constructor(params = {}) {\n        this.tbsCertificate = new TBSCertificate();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertificate, raw: true })\n], Certificate.prototype, \"tbsCertificate\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], Certificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], Certificate.prototype, \"signatureValue\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { Time } from \"./time\";\nimport { Extension } from \"./extension\";\nexport class RevokedCertificate {\n    constructor(params = {}) {\n        this.userCertificate = new ArrayBuffer(0);\n        this.revocationDate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RevokedCertificate.prototype, \"userCertificate\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], RevokedCertificate.prototype, \"revocationDate\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, repeated: \"sequence\" })\n], RevokedCertificate.prototype, \"crlEntryExtensions\", void 0);\nexport class TBSCertList {\n    constructor(params = {}) {\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.thisUpdate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], TBSCertList.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertList.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertList.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], TBSCertList.prototype, \"thisUpdate\", void 0);\n__decorate([\n    AsnProp({ type: Time, optional: true })\n], TBSCertList.prototype, \"nextUpdate\", void 0);\n__decorate([\n    AsnProp({ type: RevokedCertificate, repeated: \"sequence\", optional: true })\n], TBSCertList.prototype, \"revokedCertificates\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, context: 0, repeated: \"sequence\" })\n], TBSCertList.prototype, \"crlExtensions\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertList } from \"./tbs_cert_list\";\nexport class CertificateList {\n    constructor(params = {}) {\n        this.tbsCertList = new TBSCertList();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertList, raw: true })\n], CertificateList.prototype, \"tbsCertList\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificateList.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificateList.prototype, \"signature\", void 0);\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { Name } from \"@peculiar/asn1-x509\";\nexport class IssuerAndSerialNumber {\n    constructor(params = {}) {\n        this.issuer = new Name();\n        this.serialNumber = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: Name })\n], IssuerAndSerialNumber.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], IssuerAndSerialNumber.prototype, \"serialNumber\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { IssuerAndSerialNumber } from \"./issuer_and_serial_number\";\nimport { SubjectKeyIdentifier } from \"@peculiar/asn1-x509\";\nlet SignerIdentifier = class SignerIdentifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier, context: 0, implicit: true })\n], SignerIdentifier.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber })\n], SignerIdentifier.prototype, \"issuerAndSerialNumber\", void 0);\nSignerIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SignerIdentifier);\nexport { SignerIdentifier };\n", "import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnTypeTypes, AsnType } from \"@peculiar/asn1-schema\";\nexport var CMSVersion;\n(function (CMSVersion) {\n    CMSVersion[CMSVersion[\"v0\"] = 0] = \"v0\";\n    CMSVersion[CMSVersion[\"v1\"] = 1] = \"v1\";\n    CMSVersion[CMSVersion[\"v2\"] = 2] = \"v2\";\n    CMSVersion[CMSVersion[\"v3\"] = 3] = \"v3\";\n    CMSVersion[CMSVersion[\"v4\"] = 4] = \"v4\";\n    CMSVersion[CMSVersion[\"v5\"] = 5] = \"v5\";\n})(CMSVersion || (CMSVersion = {}));\nlet DigestAlgorithmIdentifier = class DigestAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nDigestAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], DigestAlgorithmIdentifier);\nexport { DigestAlgorithmIdentifier };\nlet SignatureAlgorithmIdentifier = class SignatureAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nSignatureAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SignatureAlgorithmIdentifier);\nexport { SignatureAlgorithmIdentifier };\nlet KeyEncryptionAlgorithmIdentifier = class KeyEncryptionAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nKeyEncryptionAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], KeyEncryptionAlgorithmIdentifier);\nexport { KeyEncryptionAlgorithmIdentifier };\nlet ContentEncryptionAlgorithmIdentifier = class ContentEncryptionAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nContentEncryptionAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], ContentEncryptionAlgorithmIdentifier);\nexport { ContentEncryptionAlgorithmIdentifier };\nlet MessageAuthenticationCodeAlgorithm = class MessageAuthenticationCodeAlgorithm extends AlgorithmIdentifier {\n};\nMessageAuthenticationCodeAlgorithm = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], MessageAuthenticationCodeAlgorithm);\nexport { MessageAuthenticationCodeAlgorithm };\nlet KeyDerivationAlgorithmIdentifier = class KeyDerivationAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nKeyDerivationAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], KeyDerivationAlgorithmIdentifier);\nexport { KeyDerivationAlgorithmIdentifier };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.attrType = \"\";\n        this.attrValues = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"attrType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"attrValues\", void 0);\n", "var SignerInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { SignerIdentifier } from \"./signer_identifier\";\nimport { CMSVersion, SignatureAlgorithmIdentifier, DigestAlgorithmIdentifier } from \"./types\";\nimport { Attribute } from \"./attribute\";\nexport class SignerInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.sid = new SignerIdentifier();\n        this.digestAlgorithm = new DigestAlgorithmIdentifier();\n        this.signatureAlgorithm = new SignatureAlgorithmIdentifier();\n        this.signature = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SignerInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: SignerIdentifier })\n], SignerInfo.prototype, \"sid\", void 0);\n__decorate([\n    AsnProp({ type: DigestAlgorithmIdentifier })\n], SignerInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: Attribute,\n        repeated: \"set\",\n        context: 0,\n        implicit: true,\n        optional: true,\n        raw: true,\n    })\n], SignerInfo.prototype, \"signedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: SignatureAlgorithmIdentifier })\n], SignerInfo.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], SignerInfo.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"set\", context: 1, implicit: true, optional: true })\n], SignerInfo.prototype, \"unsignedAttrs\", void 0);\nlet SignerInfos = SignerInfos_1 = class SignerInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SignerInfos_1.prototype);\n    }\n};\nSignerInfos = SignerInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: SignerInfo })\n], SignerInfos);\nexport { SignerInfos };\n", "import { __decorate } from \"tslib\";\nimport { AsnTypeTypes, AsnType } from \"@peculiar/asn1-schema\";\nimport { Time } from \"@peculiar/asn1-x509\";\nimport { SignerInfo } from \"./signer_info\";\nlet SigningTime = class SigningTime extends Time {\n};\nSigningTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SigningTime);\nexport { SigningTime };\nlet CounterSignature = class CounterSignature extends SignerInfo {\n};\nCounterSignature = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CounterSignature);\nexport { CounterSignature };\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName, Attribute } from \"@peculiar/asn1-x509\";\nexport class ACClearAttrs {\n    constructor(params = {}) {\n        this.acIssuer = new GeneralName();\n        this.acSerial = 0;\n        this.attrs = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], ACClearAttrs.prototype, \"acIssuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ACClearAttrs.prototype, \"acSerial\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"sequence\" })\n], ACClearAttrs.prototype, \"attrs\", void 0);\n", "var AttrSpec_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnPropTypes, AsnArray } from \"@peculiar/asn1-schema\";\nlet AttrSpec = AttrSpec_1 = class AttrSpec extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AttrSpec_1.prototype);\n    }\n};\nAttrSpec = AttrSpec_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], AttrSpec);\nexport { AttrSpec };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AttrSpec } from \"./attr_spec\";\nexport class AAControls {\n    constructor(params = {}) {\n        this.permitUnSpecified = true;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], AAControls.prototype, \"pathLenConstraint\", void 0);\n__decorate([\n    AsnProp({ type: AttrSpec, implicit: true, context: 0, optional: true })\n], AAControls.prototype, \"permittedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: AttrSpec, implicit: true, context: 1, optional: true })\n], AAControls.prototype, \"excludedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: true })\n], AAControls.prototype, \"permitUnSpecified\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nexport class IssuerSerial {\n    constructor(params = {}) {\n        this.issuer = new GeneralNames();\n        this.serial = new ArrayBuffer(0);\n        this.issuerUID = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames })\n], IssuerSerial.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], IssuerSerial.prototype, \"serial\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], IssuerSerial.prototype, \"issuerUID\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport var DigestedObjectType;\n(function (DigestedObjectType) {\n    DigestedObjectType[DigestedObjectType[\"publicKey\"] = 0] = \"publicKey\";\n    DigestedObjectType[DigestedObjectType[\"publicKeyCert\"] = 1] = \"publicKeyCert\";\n    DigestedObjectType[DigestedObjectType[\"otherObjectTypes\"] = 2] = \"otherObjectTypes\";\n})(DigestedObjectType || (DigestedObjectType = {}));\nexport class ObjectDigestInfo {\n    constructor(params = {}) {\n        this.digestedObjectType = DigestedObjectType.publicKey;\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.objectDigest = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], ObjectDigestInfo.prototype, \"digestedObjectType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, optional: true })\n], ObjectDigestInfo.prototype, \"otherObjectTypeID\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], ObjectDigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], ObjectDigestInfo.prototype, \"objectDigest\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class V2Form {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, optional: true })\n], V2Form.prototype, \"issuerName\", void 0);\n__decorate([\n    AsnProp({ type: IssuerSerial, context: 0, implicit: true, optional: true })\n], V2Form.prototype, \"baseCertificateID\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, context: 1, implicit: true, optional: true })\n], V2Form.prototype, \"objectDigestInfo\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nimport { V2Form } from \"./v2_form\";\nlet AttCertIssuer = class AttCertIssuer {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, repeated: \"sequence\" })\n], AttCertIssuer.prototype, \"v1Form\", void 0);\n__decorate([\n    AsnProp({ type: V2Form, context: 0, implicit: true })\n], AttCertIssuer.prototype, \"v2Form\", void 0);\nAttCertIssuer = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttCertIssuer);\nexport { AttCertIssuer };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class AttCertValidityPeriod {\n    constructor(params = {}) {\n        this.notBeforeTime = new Date();\n        this.notAfterTime = new Date();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], AttCertValidityPeriod.prototype, \"notBeforeTime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], AttCertValidityPeriod.prototype, \"notAfterTime\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class Holder {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: IssuerSerial, implicit: true, context: 0, optional: true })\n], Holder.prototype, \"baseCertificateID\", void 0);\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 1, optional: true })\n], Holder.prototype, \"entityName\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, implicit: true, context: 2, optional: true })\n], Holder.prototype, \"objectDigestInfo\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier, Attribute, Extensions, } from \"@peculiar/asn1-x509\";\nimport { Holder } from \"./holder\";\nimport { AttCertIssuer } from \"./attr_cert_issuer\";\nimport { AttCertValidityPeriod } from \"./attr_cert_validity_period\";\nexport var AttCertVersion;\n(function (AttCertVersion) {\n    AttCertVersion[AttCertVersion[\"v2\"] = 1] = \"v2\";\n})(AttCertVersion || (AttCertVersion = {}));\nexport class AttributeCertificateInfo {\n    constructor(params = {}) {\n        this.version = AttCertVersion.v2;\n        this.holder = new Holder();\n        this.issuer = new AttCertIssuer();\n        this.signature = new AlgorithmIdentifier();\n        this.serialNumber = new ArrayBuffer(0);\n        this.attrCertValidityPeriod = new AttCertValidityPeriod();\n        this.attributes = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], AttributeCertificateInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: Holder })\n], AttributeCertificateInfo.prototype, \"holder\", void 0);\n__decorate([\n    AsnProp({ type: AttCertIssuer })\n], AttributeCertificateInfo.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], AttributeCertificateInfo.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], AttributeCertificateInfo.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AttCertValidityPeriod })\n], AttributeCertificateInfo.prototype, \"attrCertValidityPeriod\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"sequence\" })\n], AttributeCertificateInfo.prototype, \"attributes\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], AttributeCertificateInfo.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, optional: true })\n], AttributeCertificateInfo.prototype, \"extensions\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AttributeCertificateInfo } from \"./attribute_certificate_info\";\nexport class AttributeCertificate {\n    constructor(params = {}) {\n        this.acinfo = new AttributeCertificateInfo();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AttributeCertificateInfo })\n], AttributeCertificate.prototype, \"acinfo\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], AttributeCertificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], AttributeCertificate.prototype, \"signatureValue\", void 0);\n", "import { BitString } from \"@peculiar/asn1-schema\";\nexport var ClassListFlags;\n(function (ClassListFlags) {\n    ClassListFlags[ClassListFlags[\"unmarked\"] = 1] = \"unmarked\";\n    ClassListFlags[ClassListFlags[\"unclassified\"] = 2] = \"unclassified\";\n    ClassListFlags[ClassListFlags[\"restricted\"] = 4] = \"restricted\";\n    ClassListFlags[ClassListFlags[\"confidential\"] = 8] = \"confidential\";\n    ClassListFlags[ClassListFlags[\"secret\"] = 16] = \"secret\";\n    ClassListFlags[ClassListFlags[\"topSecret\"] = 32] = \"topSecret\";\n})(ClassListFlags || (ClassListFlags = {}));\nexport class ClassList extends BitString {\n}\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class SecurityCategory {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, implicit: true, context: 0 })\n], SecurityCategory.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, implicit: true, context: 1 })\n], SecurityCategory.prototype, \"value\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { ClassList, ClassListFlags } from \"./class_list\";\nimport { SecurityCategory } from \"./security_category\";\nexport class Clearance {\n    constructor(params = {}) {\n        this.policyId = \"\";\n        this.classList = new ClassList(ClassListFlags.unclassified);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Clearance.prototype, \"policyId\", void 0);\n__decorate([\n    AsnProp({ type: ClassList, defaultValue: new ClassList(ClassListFlags.unclassified) })\n], Clearance.prototype, \"classList\", void 0);\n__decorate([\n    AsnProp({ type: SecurityCategory, repeated: \"set\" })\n], Clearance.prototype, \"securityCategories\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nexport class IetfAttrSyntaxValueChoices {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: OctetString })\n], IetfAttrSyntaxValueChoices.prototype, \"cotets\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], IetfAttrSyntaxValueChoices.prototype, \"oid\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], IetfAttrSyntaxValueChoices.prototype, \"string\", void 0);\nexport class IetfAttrSyntax {\n    constructor(params = {}) {\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 0, optional: true })\n], IetfAttrSyntax.prototype, \"policyAuthority\", void 0);\n__decorate([\n    AsnProp({ type: IetfAttrSyntaxValueChoices, repeated: \"sequence\" })\n], IetfAttrSyntax.prototype, \"values\", void 0);\n", "import { id_pe, id_ce, id_pkix } from \"@peculiar/asn1-x509\";\nexport const id_pe_ac_auditIdentity = `${id_pe}.4`;\nexport const id_pe_aaControls = `${id_pe}.6`;\nexport const id_pe_ac_proxying = `${id_pe}.10`;\nexport const id_ce_targetInformation = `${id_ce}.55`;\nexport const id_aca = `${id_pkix}.10`;\nexport const id_aca_authenticationInfo = `${id_aca}.1`;\nexport const id_aca_accessIdentity = `${id_aca}.2`;\nexport const id_aca_chargingIdentity = `${id_aca}.3`;\nexport const id_aca_group = `${id_aca}.4`;\nexport const id_aca_encAttrs = `${id_aca}.6`;\nexport const id_at = \"2.5.4\";\nexport const id_at_role = `${id_at}.72`;\nexport const id_at_clearance = \"2.5.1.5.55\";\n", "var Targets_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class TargetCert {\n    constructor(params = {}) {\n        this.targetCertificate = new IssuerSerial();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: IssuerSerial })\n], TargetCert.prototype, \"targetCertificate\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, optional: true })\n], TargetCert.prototype, \"targetName\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, optional: true })\n], TargetCert.prototype, \"certDigestInfo\", void 0);\nlet Target = class Target {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, implicit: true })\n], Target.prototype, \"targetName\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, implicit: true })\n], Target.prototype, \"targetGroup\", void 0);\n__decorate([\n    AsnProp({ type: TargetCert, context: 2, implicit: true })\n], Target.prototype, \"targetCert\", void 0);\nTarget = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Target);\nexport { Target };\nlet Targets = Targets_1 = class Targets extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Targets_1.prototype);\n    }\n};\nTargets = Targets_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Target })\n], Targets);\nexport { Targets };\n", "var ProxyInfo_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Targets } from \"./target\";\nlet ProxyInfo = ProxyInfo_1 = class ProxyInfo extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ProxyInfo_1.prototype);\n    }\n};\nProxyInfo = ProxyInfo_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Targets })\n], ProxyInfo);\nexport { ProxyInfo };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralNames, GeneralName } from \"@peculiar/asn1-x509\";\nexport class RoleSyntax {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 0, optional: true })\n], RoleSyntax.prototype, \"roleAuthority\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, implicit: true, context: 1 })\n], RoleSyntax.prototype, \"roleName\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nexport class SvceAuthInfo {\n    constructor(params = {}) {\n        this.service = new GeneralName();\n        this.ident = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], SvceAuthInfo.prototype, \"service\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], SvceAuthInfo.prototype, \"ident\", void 0);\n__decorate([\n    AsnProp({ type: OctetString, optional: true })\n], SvceAuthInfo.prototype, \"authInfo\", void 0);\n", "var CertificateSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Certificate } from \"@peculiar/asn1-x509\";\nimport { AttributeCertificate } from \"@peculiar/asn1-x509-attr\";\nexport class OtherCertificateFormat {\n    constructor(params = {}) {\n        this.otherCertFormat = \"\";\n        this.otherCert = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherCertificateFormat.prototype, \"otherCertFormat\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherCertificateFormat.prototype, \"otherCert\", void 0);\nlet CertificateChoices = class CertificateChoices {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: Certificate })\n], CertificateChoices.prototype, \"certificate\", void 0);\n__decorate([\n    AsnProp({ type: AttributeCertificate, context: 2, implicit: true })\n], CertificateChoices.prototype, \"v2AttrCert\", void 0);\n__decorate([\n    AsnProp({ type: OtherCertificateFormat, context: 3, implicit: true })\n], CertificateChoices.prototype, \"other\", void 0);\nCertificateChoices = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CertificateChoices);\nexport { CertificateChoices };\nlet CertificateSet = CertificateSet_1 = class CertificateSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateSet_1.prototype);\n    }\n};\nCertificateSet = CertificateSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: CertificateChoices })\n], CertificateSet);\nexport { CertificateSet };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class ContentInfo {\n    constructor(params = {}) {\n        this.contentType = \"\";\n        this.content = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ContentInfo.prototype, \"contentType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], ContentInfo.prototype, \"content\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nlet EncapsulatedContent = class EncapsulatedContent {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OctetString })\n], EncapsulatedContent.prototype, \"single\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], EncapsulatedContent.prototype, \"any\", void 0);\nEncapsulatedContent = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EncapsulatedContent);\nexport { EncapsulatedContent };\nexport class EncapsulatedContentInfo {\n    constructor(params = {}) {\n        this.eContentType = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], EncapsulatedContentInfo.prototype, \"eContentType\", void 0);\n__decorate([\n    AsnProp({ type: EncapsulatedContent, context: 0, optional: true })\n], EncapsulatedContentInfo.prototype, \"eContent\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnConstructedOctetStringConverter, AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { ContentEncryptionAlgorithmIdentifier } from \"./types\";\nlet EncryptedContent = class EncryptedContent {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OctetString, context: 0, implicit: true, optional: true })\n], EncryptedContent.prototype, \"value\", void 0);\n__decorate([\n    AsnProp({\n        type: OctetString,\n        converter: AsnConstructedOctetStringConverter,\n        context: 0,\n        implicit: true,\n        optional: true,\n        repeated: \"sequence\",\n    })\n], EncryptedContent.prototype, \"constructedValue\", void 0);\nEncryptedContent = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EncryptedContent);\nexport { EncryptedContent };\nexport class EncryptedContentInfo {\n    constructor(params = {}) {\n        this.contentType = \"\";\n        this.contentEncryptionAlgorithm = new ContentEncryptionAlgorithmIdentifier();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], EncryptedContentInfo.prototype, \"contentType\", void 0);\n__decorate([\n    AsnProp({ type: ContentEncryptionAlgorithmIdentifier })\n], EncryptedContentInfo.prototype, \"contentEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: EncryptedContent, optional: true })\n], EncryptedContentInfo.prototype, \"encryptedContent\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class OtherKeyAttribute {\n    constructor(params = {}) {\n        this.keyAttrId = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherKeyAttribute.prototype, \"keyAttrId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, optional: true })\n], OtherKeyAttribute.prototype, \"keyAttr\", void 0);\n", "var RecipientEncryptedKeys_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { CMSVersion, KeyEncryptionAlgorithmIdentifier } from \"./types\";\nimport { IssuerAndSerialNumber } from \"./issuer_and_serial_number\";\nimport { AlgorithmIdentifier, SubjectKeyIdentifier } from \"@peculiar/asn1-x509\";\nimport { OtherKeyAttribute } from \"./other_key_attribute\";\nexport class RecipientKeyIdentifier {\n    constructor(params = {}) {\n        this.subjectKeyIdentifier = new SubjectKeyIdentifier();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier })\n], RecipientKeyIdentifier.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, optional: true })\n], RecipientKeyIdentifier.prototype, \"date\", void 0);\n__decorate([\n    AsnProp({ type: OtherKeyAttribute, optional: true })\n], RecipientKeyIdentifier.prototype, \"other\", void 0);\nlet KeyAgreeRecipientIdentifier = class KeyAgreeRecipientIdentifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: RecipientKeyIdentifier, context: 0, implicit: true, optional: true })\n], KeyAgreeRecipientIdentifier.prototype, \"rKeyId\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber, optional: true })\n], KeyAgreeRecipientIdentifier.prototype, \"issuerAndSerialNumber\", void 0);\nKeyAgreeRecipientIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], KeyAgreeRecipientIdentifier);\nexport { KeyAgreeRecipientIdentifier };\nexport class RecipientEncryptedKey {\n    constructor(params = {}) {\n        this.rid = new KeyAgreeRecipientIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: KeyAgreeRecipientIdentifier })\n], RecipientEncryptedKey.prototype, \"rid\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], RecipientEncryptedKey.prototype, \"encryptedKey\", void 0);\nlet RecipientEncryptedKeys = RecipientEncryptedKeys_1 = class RecipientEncryptedKeys extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RecipientEncryptedKeys_1.prototype);\n    }\n};\nRecipientEncryptedKeys = RecipientEncryptedKeys_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: RecipientEncryptedKey })\n], RecipientEncryptedKeys);\nexport { RecipientEncryptedKeys };\nexport class OriginatorPublicKey {\n    constructor(params = {}) {\n        this.algorithm = new AlgorithmIdentifier();\n        this.publicKey = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], OriginatorPublicKey.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], OriginatorPublicKey.prototype, \"publicKey\", void 0);\nlet OriginatorIdentifierOrKey = class OriginatorIdentifierOrKey {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier, context: 0, implicit: true, optional: true })\n], OriginatorIdentifierOrKey.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: OriginatorPublicKey, context: 1, implicit: true, optional: true })\n], OriginatorIdentifierOrKey.prototype, \"originatorKey\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber, optional: true })\n], OriginatorIdentifierOrKey.prototype, \"issuerAndSerialNumber\", void 0);\nOriginatorIdentifierOrKey = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], OriginatorIdentifierOrKey);\nexport { OriginatorIdentifierOrKey };\nexport class KeyAgreeRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v3;\n        this.originator = new OriginatorIdentifierOrKey();\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.recipientEncryptedKeys = new RecipientEncryptedKeys();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyAgreeRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OriginatorIdentifierOrKey, context: 0 })\n], KeyAgreeRecipientInfo.prototype, \"originator\", void 0);\n__decorate([\n    AsnProp({ type: OctetString, context: 1, optional: true })\n], KeyAgreeRecipientInfo.prototype, \"ukm\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], KeyAgreeRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: RecipientEncryptedKeys })\n], KeyAgreeRecipientInfo.prototype, \"recipientEncryptedKeys\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { CMSVersion, KeyEncryptionAlgorithmIdentifier } from \"./types\";\nimport { IssuerAndSerialNumber } from \"./issuer_and_serial_number\";\nimport { SubjectKeyIdentifier } from \"@peculiar/asn1-x509\";\nlet RecipientIdentifier = class RecipientIdentifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier, context: 0, implicit: true })\n], RecipientIdentifier.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber })\n], RecipientIdentifier.prototype, \"issuerAndSerialNumber\", void 0);\nRecipientIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], RecipientIdentifier);\nexport { RecipientIdentifier };\nexport class KeyTransRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.rid = new RecipientIdentifier();\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KeyTransRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: RecipientIdentifier })\n], KeyTransRecipientInfo.prototype, \"rid\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], KeyTransRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KeyTransRecipientInfo.prototype, \"encryptedKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { OtherKeyAttribute } from \"./other_key_attribute\";\nimport { CMSVersion, KeyEncryptionAlgorithmIdentifier } from \"./types\";\nexport class KEKIdentifier {\n    constructor(params = {}) {\n        this.keyIdentifier = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: OctetString })\n], KEKIdentifier.prototype, \"keyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, optional: true })\n], KEKIdentifier.prototype, \"date\", void 0);\n__decorate([\n    AsnProp({ type: OtherKeyAttribute, optional: true })\n], KEKIdentifier.prototype, \"other\", void 0);\nexport class KEKRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v4;\n        this.kekid = new KEKIdentifier();\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], KEKRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: KEKIdentifier })\n], KEKRecipientInfo.prototype, \"kekid\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], KEKRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], KEKRecipientInfo.prototype, \"encryptedKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { CMSVersion, KeyDerivationAlgorithmIdentifier, KeyEncryptionAlgorithmIdentifier, } from \"./types\";\nexport class PasswordRecipientInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.keyEncryptionAlgorithm = new KeyEncryptionAlgorithmIdentifier();\n        this.encryptedKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PasswordRecipientInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: KeyDerivationAlgorithmIdentifier, context: 0, optional: true })\n], PasswordRecipientInfo.prototype, \"keyDerivationAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: KeyEncryptionAlgorithmIdentifier })\n], PasswordRecipientInfo.prototype, \"keyEncryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], PasswordRecipientInfo.prototype, \"encryptedKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { KeyAgreeRecipientInfo } from \"./key_agree_recipient_info\";\nimport { KeyTransRecipientInfo } from \"./key_trans_recipient_info\";\nimport { KEKRecipientInfo } from \"./kek_recipient_info\";\nimport { PasswordRecipientInfo } from \"./password_recipient_info\";\nexport class OtherRecipientInfo {\n    constructor(params = {}) {\n        this.oriType = \"\";\n        this.oriValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherRecipientInfo.prototype, \"oriType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherRecipientInfo.prototype, \"oriValue\", void 0);\nlet RecipientInfo = class RecipientInfo {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: KeyTransRecipientInfo, optional: true })\n], RecipientInfo.prototype, \"ktri\", void 0);\n__decorate([\n    AsnProp({ type: KeyAgreeRecipientInfo, context: 1, implicit: true, optional: true })\n], RecipientInfo.prototype, \"kari\", void 0);\n__decorate([\n    AsnProp({ type: KEKRecipientInfo, context: 2, implicit: true, optional: true })\n], RecipientInfo.prototype, \"kekri\", void 0);\n__decorate([\n    AsnProp({ type: PasswordRecipientInfo, context: 3, implicit: true, optional: true })\n], RecipientInfo.prototype, \"pwri\", void 0);\n__decorate([\n    AsnProp({ type: OtherRecipientInfo, context: 4, implicit: true, optional: true })\n], RecipientInfo.prototype, \"ori\", void 0);\nRecipientInfo = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], RecipientInfo);\nexport { RecipientInfo };\n", "var RecipientInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { RecipientInfo } from \"./recipient_info\";\nlet RecipientInfos = RecipientInfos_1 = class RecipientInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RecipientInfos_1.prototype);\n    }\n};\nRecipientInfos = RecipientInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: RecipientInfo })\n], RecipientInfos);\nexport { RecipientInfos };\n", "var RevocationInfoChoices_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_pkix } from \"@peculiar/asn1-x509\";\nexport const id_ri = `${id_pkix}.16`;\nexport const id_ri_ocsp_response = `${id_ri}.2`;\nexport const id_ri_scvp = `${id_ri}.4`;\nexport class OtherRevocationInfoFormat {\n    constructor(params = {}) {\n        this.otherRevInfoFormat = \"\";\n        this.otherRevInfo = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherRevocationInfoFormat.prototype, \"otherRevInfoFormat\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherRevocationInfoFormat.prototype, \"otherRevInfo\", void 0);\nlet RevocationInfoChoice = class RevocationInfoChoice {\n    constructor(params = {}) {\n        this.other = new OtherRevocationInfoFormat();\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherRevocationInfoFormat, context: 1, implicit: true })\n], RevocationInfoChoice.prototype, \"other\", void 0);\nRevocationInfoChoice = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], RevocationInfoChoice);\nexport { RevocationInfoChoice };\nlet RevocationInfoChoices = RevocationInfoChoices_1 = class RevocationInfoChoices extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RevocationInfoChoices_1.prototype);\n    }\n};\nRevocationInfoChoices = RevocationInfoChoices_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: RevocationInfoChoice })\n], RevocationInfoChoices);\nexport { RevocationInfoChoices };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { CertificateSet } from \"./certificate_choices\";\nimport { RevocationInfoChoices } from \"./revocation_info_choice\";\nexport class OriginatorInfo {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: CertificateSet, context: 0, implicit: true, optional: true })\n], OriginatorInfo.prototype, \"certs\", void 0);\n__decorate([\n    AsnProp({ type: RevocationInfoChoices, context: 1, implicit: true, optional: true })\n], OriginatorInfo.prototype, \"crls\", void 0);\n", "var UnprotectedAttributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { CMSVersion } from \"./types\";\nimport { Attribute } from \"./attribute\";\nimport { RecipientInfos } from \"./recipient_infos\";\nimport { OriginatorInfo } from \"./originator_info\";\nimport { EncryptedContentInfo } from \"./encrypted_content_info\";\nlet UnprotectedAttributes = UnprotectedAttributes_1 = class UnprotectedAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, UnprotectedAttributes_1.prototype);\n    }\n};\nUnprotectedAttributes = UnprotectedAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: Attribute })\n], UnprotectedAttributes);\nexport { UnprotectedAttributes };\nexport class EnvelopedData {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.recipientInfos = new RecipientInfos();\n        this.encryptedContentInfo = new EncryptedContentInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], EnvelopedData.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OriginatorInfo, context: 0, implicit: true, optional: true })\n], EnvelopedData.prototype, \"originatorInfo\", void 0);\n__decorate([\n    AsnProp({ type: RecipientInfos })\n], EnvelopedData.prototype, \"recipientInfos\", void 0);\n__decorate([\n    AsnProp({ type: EncryptedContentInfo })\n], EnvelopedData.prototype, \"encryptedContentInfo\", void 0);\n__decorate([\n    AsnProp({ type: UnprotectedAttributes, context: 1, implicit: true, optional: true })\n], EnvelopedData.prototype, \"unprotectedAttrs\", void 0);\n", "export const id_ct_contentInfo = \"1.2.840.113549.1.9.16.1.6\";\nexport const id_data = \"1.2.840.113549.1.7.1\";\nexport const id_signedData = \"1.2.840.113549.1.7.2\";\nexport const id_envelopedData = \"1.2.840.113549.1.7.3\";\nexport const id_digestedData = \"1.2.840.113549.1.7.5\";\nexport const id_encryptedData = \"1.2.840.113549.1.7.6\";\nexport const id_authData = \"1.2.840.113549.1.9.16.1.2\";\n", "var DigestAlgorithmIdentifiers_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { CertificateSet } from \"./certificate_choices\";\nimport { CMSVersion, DigestAlgorithmIdentifier } from \"./types\";\nimport { EncapsulatedContentInfo } from \"./encapsulated_content_info\";\nimport { RevocationInfoChoices } from \"./revocation_info_choice\";\nimport { SignerInfos } from \"./signer_info\";\nlet DigestAlgorithmIdentifiers = DigestAlgorithmIdentifiers_1 = class DigestAlgorithmIdentifiers extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, DigestAlgorithmIdentifiers_1.prototype);\n    }\n};\nDigestAlgorithmIdentifiers = DigestAlgorithmIdentifiers_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: DigestAlgorithmIdentifier })\n], DigestAlgorithmIdentifiers);\nexport { DigestAlgorithmIdentifiers };\nexport class SignedData {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.digestAlgorithms = new DigestAlgorithmIdentifiers();\n        this.encapContentInfo = new EncapsulatedContentInfo();\n        this.signerInfos = new SignerInfos();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SignedData.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: DigestAlgorithmIdentifiers })\n], SignedData.prototype, \"digestAlgorithms\", void 0);\n__decorate([\n    AsnProp({ type: EncapsulatedContentInfo })\n], SignedData.prototype, \"encapContentInfo\", void 0);\n__decorate([\n    AsnProp({ type: CertificateSet, context: 0, implicit: true, optional: true })\n], SignedData.prototype, \"certificates\", void 0);\n__decorate([\n    AsnProp({ type: RevocationInfoChoices, context: 1, implicit: true, optional: true })\n], SignedData.prototype, \"crls\", void 0);\n__decorate([\n    AsnProp({ type: SignerInfos })\n], SignedData.prototype, \"signerInfos\", void 0);\n", "export const id_ecPublicKey = \"1.2.840.10045.2.1\";\nexport const id_ecDH = \"1.3.132.1.12\";\nexport const id_ecMQV = \"1.3.132.1.13\";\nexport const id_ecdsaWithSHA1 = \"1.2.840.10045.4.1\";\nexport const id_ecdsaWithSHA224 = \"1.2.840.10045.4.3.1\";\nexport const id_ecdsaWithSHA256 = \"1.2.840.10045.4.3.2\";\nexport const id_ecdsaWithSHA384 = \"1.2.840.10045.4.3.3\";\nexport const id_ecdsaWithSHA512 = \"1.2.840.10045.4.3.4\";\nexport const id_secp192r1 = \"1.2.840.10045.3.1.1\";\nexport const id_sect163k1 = \"1.3.132.0.1\";\nexport const id_sect163r2 = \"1.3.132.0.15\";\nexport const id_secp224r1 = \"1.3.132.0.33\";\nexport const id_sect233k1 = \"1.3.132.0.26\";\nexport const id_sect233r1 = \"1.3.132.0.27\";\nexport const id_secp256r1 = \"1.2.840.10045.3.1.7\";\nexport const id_sect283k1 = \"1.3.132.0.16\";\nexport const id_sect283r1 = \"1.3.132.0.17\";\nexport const id_secp384r1 = \"1.3.132.0.34\";\nexport const id_sect409k1 = \"1.3.132.0.36\";\nexport const id_sect409r1 = \"1.3.132.0.37\";\nexport const id_secp521r1 = \"1.3.132.0.35\";\nexport const id_sect571k1 = \"1.3.132.0.38\";\nexport const id_sect571r1 = \"1.3.132.0.39\";\n", "import { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm });\n}\nexport const ecdsaWithSHA1 = create(oid.id_ecdsaWithSHA1);\nexport const ecdsaWithSHA224 = create(oid.id_ecdsaWithSHA224);\nexport const ecdsaWithSHA256 = create(oid.id_ecdsaWithSHA256);\nexport const ecdsaWithSHA384 = create(oid.id_ecdsaWithSHA384);\nexport const ecdsaWithSHA512 = create(oid.id_ecdsaWithSHA512);\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes, OctetString, AsnIntegerArrayBufferConverter, } from \"@peculiar/asn1-schema\";\nlet FieldID = class FieldID {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], FieldID.prototype, \"fieldType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], FieldID.prototype, \"parameters\", void 0);\nFieldID = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], FieldID);\nexport { FieldID };\nexport class ECPoint extends OctetString {\n}\nexport class FieldElement extends OctetString {\n}\nlet Curve = class Curve {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"a\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString })\n], Curve.prototype, \"b\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], Curve.prototype, \"seed\", void 0);\nCurve = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Curve);\nexport { Curve };\nexport var ECPVer;\n(function (ECPVer) {\n    ECPVer[ECPVer[\"ecpVer1\"] = 1] = \"ecpVer1\";\n})(ECPVer || (ECPVer = {}));\nlet SpecifiedECDomain = class SpecifiedECDomain {\n    constructor(params = {}) {\n        this.version = ECPVer.ecpVer1;\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SpecifiedECDomain.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: FieldID })\n], SpecifiedECDomain.prototype, \"fieldID\", void 0);\n__decorate([\n    AsnProp({ type: Curve })\n], SpecifiedECDomain.prototype, \"curve\", void 0);\n__decorate([\n    AsnProp({ type: ECPoint })\n], SpecifiedECDomain.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], SpecifiedECDomain.prototype, \"order\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], SpecifiedECDomain.prototype, \"cofactor\", void 0);\nSpecifiedECDomain = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SpecifiedECDomain);\nexport { SpecifiedECDomain };\n", "import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { SpecifiedECDomain } from \"./rfc3279\";\nlet ECParameters = class ECParameters {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ECParameters.prototype, \"namedCurve\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Null })\n], ECParameters.prototype, \"implicitCurve\", void 0);\n__decorate([\n    AsnProp({ type: SpecifiedECDomain })\n], ECParameters.prototype, \"specifiedCurve\", void 0);\nECParameters = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ECParameters);\nexport { ECParameters };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { ECParameters } from \"./ec_parameters\";\nexport class ECPrivateKey {\n    constructor(params = {}) {\n        this.version = 1;\n        this.privateKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ECPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], ECPrivateKey.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: ECParameters, context: 0, optional: true })\n], ECPrivateKey.prototype, \"parameters\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 1, optional: true })\n], ECPrivateKey.prototype, \"publicKey\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class ECDSASigValue {\n    constructor(params = {}) {\n        this.r = new ArrayBuffer(0);\n        this.s = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"r\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"s\", void 0);\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "export const id_pkcs_1 = \"1.2.840.113549.1.1\";\nexport const id_rsaEncryption = `${id_pkcs_1}.1`;\nexport const id_RSAES_OAEP = `${id_pkcs_1}.7`;\nexport const id_pSpecified = `${id_pkcs_1}.9`;\nexport const id_RSASSA_PSS = `${id_pkcs_1}.10`;\nexport const id_md2WithRSAEncryption = `${id_pkcs_1}.2`;\nexport const id_md5WithRSAEncryption = `${id_pkcs_1}.4`;\nexport const id_sha1WithRSAEncryption = `${id_pkcs_1}.5`;\nexport const id_sha224WithRSAEncryption = `${id_pkcs_1}.14`;\nexport const id_ssha224WithRSAEncryption = id_sha224WithRSAEncryption;\nexport const id_sha256WithRSAEncryption = `${id_pkcs_1}.11`;\nexport const id_sha384WithRSAEncryption = `${id_pkcs_1}.12`;\nexport const id_sha512WithRSAEncryption = `${id_pkcs_1}.13`;\nexport const id_sha512_224WithRSAEncryption = `${id_pkcs_1}.15`;\nexport const id_sha512_256WithRSAEncryption = `${id_pkcs_1}.16`;\nexport const id_sha1 = \"1.3.14.3.2.26\";\nexport const id_sha224 = \"2.16.840.1.101.3.4.2.4\";\nexport const id_sha256 = \"2.16.840.1.101.3.4.2.1\";\nexport const id_sha384 = \"2.16.840.1.101.3.4.2.2\";\nexport const id_sha512 = \"2.16.840.1.101.3.4.2.3\";\nexport const id_sha512_224 = \"2.16.840.1.101.3.4.2.5\";\nexport const id_sha512_256 = \"2.16.840.1.101.3.4.2.6\";\nexport const id_md2 = \"1.2.840.113549.2.2\";\nexport const id_md5 = \"1.2.840.113549.2.5\";\nexport const id_mgf1 = `${id_pkcs_1}.8`;\n", "import { AsnConvert, AsnOctetStringConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm, parameters: null });\n}\nexport const md2 = create(oid.id_md2);\nexport const md4 = create(oid.id_md5);\nexport const sha1 = create(oid.id_sha1);\nexport const sha224 = create(oid.id_sha224);\nexport const sha256 = create(oid.id_sha256);\nexport const sha384 = create(oid.id_sha384);\nexport const sha512 = create(oid.id_sha512);\nexport const sha512_224 = create(oid.id_sha512_224);\nexport const sha512_256 = create(oid.id_sha512_256);\nexport const mgf1SHA1 = new AlgorithmIdentifier({\n    algorithm: oid.id_mgf1,\n    parameters: AsnConvert.serialize(sha1),\n});\nexport const pSpecifiedEmpty = new AlgorithmIdentifier({\n    algorithm: oid.id_pSpecified,\n    parameters: AsnConvert.serialize(AsnOctetStringConverter.toASN(new Uint8Array([\n        0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18,\n        0x90, 0xaf, 0xd8, 0x07, 0x09,\n    ]).buffer)),\n});\nexport const rsaEncryption = create(oid.id_rsaEncryption);\nexport const md2WithRSAEncryption = create(oid.id_md2WithRSAEncryption);\nexport const md5WithRSAEncryption = create(oid.id_md5WithRSAEncryption);\nexport const sha1WithRSAEncryption = create(oid.id_sha1WithRSAEncryption);\nexport const sha224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\nexport const sha384WithRSAEncryption = create(oid.id_sha384WithRSAEncryption);\nexport const sha512WithRSAEncryption = create(oid.id_sha512WithRSAEncryption);\nexport const sha512_224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha512_256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSAES_OAEP } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1, pSpecifiedEmpty } from \"../algorithms\";\nexport class RsaEsOaepParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.pSourceAlgorithm = new AlgorithmIdentifier(pSpecifiedEmpty);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaEsOaepParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaEsOaepParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 2, defaultValue: pSpecifiedEmpty })\n], RsaEsOaepParams.prototype, \"pSourceAlgorithm\", void 0);\nexport const RSAES_OAEP = new AlgorithmIdentifier({\n    algorithm: id_RSAES_OAEP,\n    parameters: AsnConvert.serialize(new RsaEsOaepParams()),\n});\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSASSA_PSS } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1 } from \"../algorithms\";\nexport class RsaSaPssParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.saltLength = 20;\n        this.trailerField = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaSaPssParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaSaPssParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 2, defaultValue: 20 })\n], RsaSaPssParams.prototype, \"saltLength\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 3, defaultValue: 1 })\n], RsaSaPssParams.prototype, \"trailerField\", void 0);\nexport const RSASSA_PSS = new AlgorithmIdentifier({\n    algorithm: id_RSASSA_PSS,\n    parameters: AsnConvert.serialize(new RsaSaPssParams()),\n});\n", "import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nexport class DigestInfo {\n    constructor(params = {}) {\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.digest = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], DigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], DigestInfo.prototype, \"digest\", void 0);\n", "var OtherPrimeInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, AsnArray, AsnType, AsnTypeTypes, } from \"@peculiar/asn1-schema\";\nexport class OtherPrimeInfo {\n    constructor(params = {}) {\n        this.prime = new ArrayBuffer(0);\n        this.exponent = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"prime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"exponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"coefficient\", void 0);\nlet OtherPrimeInfos = OtherPrimeInfos_1 = class OtherPrimeInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, OtherPrimeInfos_1.prototype);\n    }\n};\nOtherPrimeInfos = OtherPrimeInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: OtherPrimeInfo })\n], OtherPrimeInfos);\nexport { OtherPrimeInfos };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { OtherPrimeInfos } from \"./other_prime_info\";\nexport class RSAPrivateKey {\n    constructor(params = {}) {\n        this.version = 0;\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        this.privateExponent = new ArrayBuffer(0);\n        this.prime1 = new ArrayBuffer(0);\n        this.prime2 = new ArrayBuffer(0);\n        this.exponent1 = new ArrayBuffer(0);\n        this.exponent2 = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], RSAPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"publicExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"privateExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"coefficient\", void 0);\n__decorate([\n    AsnProp({ type: OtherPrimeInfos, optional: true })\n], RSAPrivateKey.prototype, \"otherPrimeInfos\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class RSAPublicKey {\n    constructor(params = {}) {\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"publicExponent\", void 0);\n", "var Lifecycle;\n(function (Lifecycle) {\n    Lifecycle[Lifecycle[\"Transient\"] = 0] = \"Transient\";\n    Lifecycle[Lifecycle[\"Singleton\"] = 1] = \"Singleton\";\n    Lifecycle[Lifecycle[\"ResolutionScoped\"] = 2] = \"ResolutionScoped\";\n    Lifecycle[Lifecycle[\"ContainerScoped\"] = 3] = \"ContainerScoped\";\n})(Lifecycle || (Lifecycle = {}));\nexport default Lifecycle;\n", "import tslib from '../tslib.js';\r\nconst {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n} = tslib;\r\nexport {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n};\r\n", "export var INJECTION_TOKEN_METADATA_KEY = \"injectionTokens\";\nexport function getParamInfo(target) {\n    var params = Reflect.getMetadata(\"design:paramtypes\", target) || [];\n    var injectionTokens = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n    Object.keys(injectionTokens).forEach(function (key) {\n        params[+key] = injectionTokens[key];\n    });\n    return params;\n}\nexport function defineInjectionTokenMetadata(data, transform) {\n    return function (target, _propertyKey, parameterIndex) {\n        var descriptors = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n        descriptors[parameterIndex] = transform\n            ? {\n                token: data,\n                transform: transform.transformToken,\n                transformArgs: transform.args || []\n            }\n            : data;\n        Reflect.defineMetadata(INJECTION_TOKEN_METADATA_KEY, descriptors, target);\n    };\n}\n", "export function isClassProvider(provider) {\n    return !!provider.useClass;\n}\n", "export function isFactoryProvider(provider) {\n    return !!provider.useFactory;\n}\n", "import { __read, __spread } from \"tslib\";\nvar DelayedConstructor = (function () {\n    function DelayedConstructor(wrap) {\n        this.wrap = wrap;\n        this.reflectMethods = [\n            \"get\",\n            \"getPrototypeOf\",\n            \"setPrototypeOf\",\n            \"getOwnPropertyDescriptor\",\n            \"defineProperty\",\n            \"has\",\n            \"set\",\n            \"deleteProperty\",\n            \"apply\",\n            \"construct\",\n            \"ownKeys\"\n        ];\n    }\n    DelayedConstructor.prototype.createProxy = function (createObject) {\n        var _this = this;\n        var target = {};\n        var init = false;\n        var value;\n        var delayedObject = function () {\n            if (!init) {\n                value = createObject(_this.wrap());\n                init = true;\n            }\n            return value;\n        };\n        return new Proxy(target, this.createHandler(delayedObject));\n    };\n    DelayedConstructor.prototype.createHandler = function (delayedObject) {\n        var handler = {};\n        var install = function (name) {\n            handler[name] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                args[0] = delayedObject();\n                var method = Reflect[name];\n                return method.apply(void 0, __spread(args));\n            };\n        };\n        this.reflectMethods.forEach(install);\n        return handler;\n    };\n    return DelayedConstructor;\n}());\nexport { DelayedConstructor };\nexport function delay(wrappedConstructor) {\n    if (typeof wrappedConstructor === \"undefined\") {\n        throw new Error(\"Attempt to `delay` undefined. Constructor must be wrapped in a callback\");\n    }\n    return new DelayedConstructor(wrappedConstructor);\n}\n", "import { DelayedConstructor } from \"../lazy-helpers\";\nexport function isNormalToken(token) {\n    return typeof token === \"string\" || typeof token === \"symbol\";\n}\nexport function isTokenDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"multiple\" in descriptor);\n}\nexport function isTransformDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"transform\" in descriptor);\n}\nexport function isConstructorToken(token) {\n    return typeof token === \"function\" || token instanceof DelayedConstructor;\n}\n", "export function isTokenProvider(provider) {\n    return !!provider.useToken;\n}\n", "export function isValueProvider(provider) {\n    return provider.useValue != undefined;\n}\n", "import { isClassProvider } from \"./class-provider\";\nimport { isValueProvider } from \"./value-provider\";\nimport { isTokenProvider } from \"./token-provider\";\nimport { isFactoryProvider } from \"./factory-provider\";\nexport function isProvider(provider) {\n    return (isClassProvider(provider) ||\n        isValueProvider(provider) ||\n        isTokenProvider(provider) ||\n        isFactoryProvider(provider));\n}\n", "var RegistryBase = (function () {\n    function RegistryBase() {\n        this._registryMap = new Map();\n    }\n    RegistryBase.prototype.entries = function () {\n        return this._registryMap.entries();\n    };\n    RegistryBase.prototype.getAll = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key);\n    };\n    RegistryBase.prototype.get = function (key) {\n        this.ensure(key);\n        var value = this._registryMap.get(key);\n        return value[value.length - 1] || null;\n    };\n    RegistryBase.prototype.set = function (key, value) {\n        this.ensure(key);\n        this._registryMap.get(key).push(value);\n    };\n    RegistryBase.prototype.setAll = function (key, value) {\n        this._registryMap.set(key, value);\n    };\n    RegistryBase.prototype.has = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key).length > 0;\n    };\n    RegistryBase.prototype.clear = function () {\n        this._registryMap.clear();\n    };\n    RegistryBase.prototype.ensure = function (key) {\n        if (!this._registryMap.has(key)) {\n            this._registryMap.set(key, []);\n        }\n    };\n    return RegistryBase;\n}());\nexport default RegistryBase;\n", "import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar Registry = (function (_super) {\n    __extends(Registry, _super);\n    function Registry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Registry;\n}(RegistryBase));\nexport default Registry;\n", "var ResolutionContext = (function () {\n    function ResolutionContext() {\n        this.scopedResolutions = new Map();\n    }\n    return ResolutionContext;\n}());\nexport default ResolutionContext;\n", "import { __read, __spread } from \"tslib\";\nfunction formatDependency(params, idx) {\n    if (params === null) {\n        return \"at position #\" + idx;\n    }\n    var argName = params.split(\",\")[idx].trim();\n    return \"\\\"\" + argName + \"\\\" at position #\" + idx;\n}\nfunction composeErrorMessage(msg, e, indent) {\n    if (indent === void 0) { indent = \"    \"; }\n    return __spread([msg], e.message.split(\"\\n\").map(function (l) { return indent + l; })).join(\"\\n\");\n}\nexport function formatErrorCtor(ctor, paramIdx, error) {\n    var _a = __read(ctor.toString().match(/constructor\\(([\\w, ]+)\\)/) || [], 2), _b = _a[1], params = _b === void 0 ? null : _b;\n    var dep = formatDependency(params, paramIdx);\n    return composeErrorMessage(\"Cannot inject the dependency \" + dep + \" of \\\"\" + ctor.name + \"\\\" constructor. Reason:\", error);\n}\n", "export function isDisposable(value) {\n    if (typeof value.dispose !== \"function\")\n        return false;\n    var disposeFun = value.dispose;\n    if (disposeFun.length > 0) {\n        return false;\n    }\n    return true;\n}\n", "import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar PreResolutionInterceptors = (function (_super) {\n    __extends(PreResolutionInterceptors, _super);\n    function PreResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PreResolutionInterceptors;\n}(RegistryBase));\nexport { PreResolutionInterceptors };\nvar PostResolutionInterceptors = (function (_super) {\n    __extends(PostResolutionInterceptors, _super);\n    function PostResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PostResolutionInterceptors;\n}(RegistryBase));\nexport { PostResolutionInterceptors };\nvar Interceptors = (function () {\n    function Interceptors() {\n        this.preResolution = new PreResolutionInterceptors();\n        this.postResolution = new PostResolutionInterceptors();\n    }\n    return Interceptors;\n}());\nexport default Interceptors;\n", "import { __awaiter, __generator, __read, __spread, __values } from \"tslib\";\nimport { isClassProvider, isFactoryProvider, isNormalToken, isTokenProvider, isValueProvider } from \"./providers\";\nimport { isProvider } from \"./providers/provider\";\nimport { isConstructorToken, isTokenDescriptor, isTransformDescriptor } from \"./providers/injection-token\";\nimport Registry from \"./registry\";\nimport Lifecycle from \"./types/lifecycle\";\nimport ResolutionContext from \"./resolution-context\";\nimport { formatErrorCtor } from \"./error-helpers\";\nimport { DelayedConstructor } from \"./lazy-helpers\";\nimport { isDisposable } from \"./types/disposable\";\nimport Interceptors from \"./interceptors\";\nexport var typeInfo = new Map();\nvar InternalDependencyContainer = (function () {\n    function InternalDependencyContainer(parent) {\n        this.parent = parent;\n        this._registry = new Registry();\n        this.interceptors = new Interceptors();\n        this.disposed = false;\n        this.disposables = new Set();\n    }\n    InternalDependencyContainer.prototype.register = function (token, providerOrConstructor, options) {\n        if (options === void 0) { options = { lifecycle: Lifecycle.Transient }; }\n        this.ensureNotDisposed();\n        var provider;\n        if (!isProvider(providerOrConstructor)) {\n            provider = { useClass: providerOrConstructor };\n        }\n        else {\n            provider = providerOrConstructor;\n        }\n        if (isTokenProvider(provider)) {\n            var path = [token];\n            var tokenProvider = provider;\n            while (tokenProvider != null) {\n                var currentToken = tokenProvider.useToken;\n                if (path.includes(currentToken)) {\n                    throw new Error(\"Token registration cycle detected! \" + __spread(path, [currentToken]).join(\" -> \"));\n                }\n                path.push(currentToken);\n                var registration = this._registry.get(currentToken);\n                if (registration && isTokenProvider(registration.provider)) {\n                    tokenProvider = registration.provider;\n                }\n                else {\n                    tokenProvider = null;\n                }\n            }\n        }\n        if (options.lifecycle === Lifecycle.Singleton ||\n            options.lifecycle == Lifecycle.ContainerScoped ||\n            options.lifecycle == Lifecycle.ResolutionScoped) {\n            if (isValueProvider(provider) || isFactoryProvider(provider)) {\n                throw new Error(\"Cannot use lifecycle \\\"\" + Lifecycle[options.lifecycle] + \"\\\" with ValueProviders or FactoryProviders\");\n            }\n        }\n        this._registry.set(token, { provider: provider, options: options });\n        return this;\n    };\n    InternalDependencyContainer.prototype.registerType = function (from, to) {\n        this.ensureNotDisposed();\n        if (isNormalToken(to)) {\n            return this.register(from, {\n                useToken: to\n            });\n        }\n        return this.register(from, {\n            useClass: to\n        });\n    };\n    InternalDependencyContainer.prototype.registerInstance = function (token, instance) {\n        this.ensureNotDisposed();\n        return this.register(token, {\n            useValue: instance\n        });\n    };\n    InternalDependencyContainer.prototype.registerSingleton = function (from, to) {\n        this.ensureNotDisposed();\n        if (isNormalToken(from)) {\n            if (isNormalToken(to)) {\n                return this.register(from, {\n                    useToken: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            else if (to) {\n                return this.register(from, {\n                    useClass: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            throw new Error('Cannot register a type name as a singleton without a \"to\" token');\n        }\n        var useClass = from;\n        if (to && !isNormalToken(to)) {\n            useClass = to;\n        }\n        return this.register(from, {\n            useClass: useClass\n        }, { lifecycle: Lifecycle.Singleton });\n    };\n    InternalDependencyContainer.prototype.resolve = function (token, context, isOptional) {\n        if (context === void 0) { context = new ResolutionContext(); }\n        if (isOptional === void 0) { isOptional = false; }\n        this.ensureNotDisposed();\n        var registration = this.getRegistration(token);\n        if (!registration && isNormalToken(token)) {\n            if (isOptional) {\n                return undefined;\n            }\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"Single\");\n        if (registration) {\n            var result = this.resolveRegistration(registration, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        if (isConstructorToken(token)) {\n            var result = this.construct(token, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        throw new Error(\"Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.\");\n    };\n    InternalDependencyContainer.prototype.executePreResolutionInterceptor = function (token, resolutionType) {\n        var e_1, _a;\n        if (this.interceptors.preResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.preResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, resolutionType);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.interceptors.preResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.executePostResolutionInterceptor = function (token, result, resolutionType) {\n        var e_2, _a;\n        if (this.interceptors.postResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.postResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, result, resolutionType);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this.interceptors.postResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.resolveRegistration = function (registration, context) {\n        this.ensureNotDisposed();\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped &&\n            context.scopedResolutions.has(registration)) {\n            return context.scopedResolutions.get(registration);\n        }\n        var isSingleton = registration.options.lifecycle === Lifecycle.Singleton;\n        var isContainerScoped = registration.options.lifecycle === Lifecycle.ContainerScoped;\n        var returnInstance = isSingleton || isContainerScoped;\n        var resolved;\n        if (isValueProvider(registration.provider)) {\n            resolved = registration.provider.useValue;\n        }\n        else if (isTokenProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.resolve(registration.provider.useToken, context))\n                : this.resolve(registration.provider.useToken, context);\n        }\n        else if (isClassProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.construct(registration.provider.useClass, context))\n                : this.construct(registration.provider.useClass, context);\n        }\n        else if (isFactoryProvider(registration.provider)) {\n            resolved = registration.provider.useFactory(this);\n        }\n        else {\n            resolved = this.construct(registration.provider, context);\n        }\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped) {\n            context.scopedResolutions.set(registration, resolved);\n        }\n        return resolved;\n    };\n    InternalDependencyContainer.prototype.resolveAll = function (token, context, isOptional) {\n        var _this = this;\n        if (context === void 0) { context = new ResolutionContext(); }\n        if (isOptional === void 0) { isOptional = false; }\n        this.ensureNotDisposed();\n        var registrations = this.getAllRegistrations(token);\n        if (!registrations && isNormalToken(token)) {\n            if (isOptional) {\n                return [];\n            }\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"All\");\n        if (registrations) {\n            var result_1 = registrations.map(function (item) {\n                return _this.resolveRegistration(item, context);\n            });\n            this.executePostResolutionInterceptor(token, result_1, \"All\");\n            return result_1;\n        }\n        var result = [this.construct(token, context)];\n        this.executePostResolutionInterceptor(token, result, \"All\");\n        return result;\n    };\n    InternalDependencyContainer.prototype.isRegistered = function (token, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        this.ensureNotDisposed();\n        return (this._registry.has(token) ||\n            (recursive &&\n                (this.parent || false) &&\n                this.parent.isRegistered(token, true)));\n    };\n    InternalDependencyContainer.prototype.reset = function () {\n        this.ensureNotDisposed();\n        this._registry.clear();\n        this.interceptors.preResolution.clear();\n        this.interceptors.postResolution.clear();\n    };\n    InternalDependencyContainer.prototype.clearInstances = function () {\n        var e_3, _a;\n        this.ensureNotDisposed();\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                this._registry.setAll(token, registrations\n                    .filter(function (registration) { return !isValueProvider(registration.provider); })\n                    .map(function (registration) {\n                    registration.instance = undefined;\n                    return registration;\n                }));\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    InternalDependencyContainer.prototype.createChildContainer = function () {\n        var e_4, _a;\n        this.ensureNotDisposed();\n        var childContainer = new InternalDependencyContainer(this);\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                if (registrations.some(function (_a) {\n                    var options = _a.options;\n                    return options.lifecycle === Lifecycle.ContainerScoped;\n                })) {\n                    childContainer._registry.setAll(token, registrations.map(function (registration) {\n                        if (registration.options.lifecycle === Lifecycle.ContainerScoped) {\n                            return {\n                                provider: registration.provider,\n                                options: registration.options\n                            };\n                        }\n                        return registration;\n                    }));\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return childContainer;\n    };\n    InternalDependencyContainer.prototype.beforeResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.preResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.afterResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.postResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.dispose = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.disposed = true;\n                        promises = [];\n                        this.disposables.forEach(function (disposable) {\n                            var maybePromise = disposable.dispose();\n                            if (maybePromise) {\n                                promises.push(maybePromise);\n                            }\n                        });\n                        return [4, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2];\n                }\n            });\n        });\n    };\n    InternalDependencyContainer.prototype.getRegistration = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.get(token);\n        }\n        if (this.parent) {\n            return this.parent.getRegistration(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.getAllRegistrations = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.getAll(token);\n        }\n        if (this.parent) {\n            return this.parent.getAllRegistrations(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.construct = function (ctor, context) {\n        var _this = this;\n        if (ctor instanceof DelayedConstructor) {\n            return ctor.createProxy(function (target) {\n                return _this.resolve(target, context);\n            });\n        }\n        var instance = (function () {\n            var paramInfo = typeInfo.get(ctor);\n            if (!paramInfo || paramInfo.length === 0) {\n                if (ctor.length === 0) {\n                    return new ctor();\n                }\n                else {\n                    throw new Error(\"TypeInfo not known for \\\"\" + ctor.name + \"\\\"\");\n                }\n            }\n            var params = paramInfo.map(_this.resolveParams(context, ctor));\n            return new (ctor.bind.apply(ctor, __spread([void 0], params)))();\n        })();\n        if (isDisposable(instance)) {\n            this.disposables.add(instance);\n        }\n        return instance;\n    };\n    InternalDependencyContainer.prototype.resolveParams = function (context, ctor) {\n        var _this = this;\n        return function (param, idx) {\n            var _a, _b, _c;\n            try {\n                if (isTokenDescriptor(param)) {\n                    if (isTransformDescriptor(param)) {\n                        return param.multiple\n                            ? (_a = _this.resolve(param.transform)).transform.apply(_a, __spread([_this.resolveAll(param.token, new ResolutionContext(), param.isOptional)], param.transformArgs)) : (_b = _this.resolve(param.transform)).transform.apply(_b, __spread([_this.resolve(param.token, context, param.isOptional)], param.transformArgs));\n                    }\n                    else {\n                        return param.multiple\n                            ? _this.resolveAll(param.token, new ResolutionContext(), param.isOptional)\n                            : _this.resolve(param.token, context, param.isOptional);\n                    }\n                }\n                else if (isTransformDescriptor(param)) {\n                    return (_c = _this.resolve(param.transform, context)).transform.apply(_c, __spread([_this.resolve(param.token, context)], param.transformArgs));\n                }\n                return _this.resolve(param, context);\n            }\n            catch (e) {\n                throw new Error(formatErrorCtor(ctor, idx, e));\n            }\n        };\n    };\n    InternalDependencyContainer.prototype.ensureNotDisposed = function () {\n        if (this.disposed) {\n            throw new Error(\"This container has been disposed, you cannot interact with a disposed container\");\n        }\n    };\n    return InternalDependencyContainer;\n}());\nexport var instance = new InternalDependencyContainer();\nexport default instance;\n", "import { getParamInfo } from \"../reflection-helpers\";\nimport { typeInfo } from \"../dependency-container\";\nimport { instance as globalContainer } from \"../dependency-container\";\nfunction injectable(options) {\n    return function (target) {\n        typeInfo.set(target, getParamInfo(target));\n        if (options && options.token) {\n            if (!Array.isArray(options.token)) {\n                globalContainer.register(options.token, target);\n            }\n            else {\n                options.token.forEach(function (token) {\n                    globalContainer.register(token, target);\n                });\n            }\n        }\n    };\n}\nexport default injectable;\n", "if (typeof Reflect === \"undefined\" || !Reflect.getMetadata) {\n    throw new Error(\"tsyringe requires a reflect polyfill. Please add 'import \\\"reflect-metadata\\\"' to the top of your entry point.\");\n}\nexport { Lifecycle } from \"./types\";\nexport * from \"./decorators\";\nexport * from \"./factories\";\nexport * from \"./providers\";\nexport { delay } from \"./lazy-helpers\";\nexport { instance as container } from \"./dependency-container\";\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "var PKCS12AttrSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nexport class PKCS12Attribute {\n    constructor(params = {}) {\n        this.attrId = \"\";\n        this.attrValues = [];\n        Object.assign(params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PKCS12Attribute.prototype, \"attrId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], PKCS12Attribute.prototype, \"attrValues\", void 0);\nlet PKCS12AttrSet = PKCS12AttrSet_1 = class PKCS12AttrSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, PKCS12AttrSet_1.prototype);\n    }\n};\nPKCS12AttrSet = PKCS12AttrSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PKCS12Attribute })\n], PKCS12AttrSet);\nexport { PKCS12AttrSet };\n", "var AuthenticatedSafe_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { ContentInfo } from \"@peculiar/asn1-cms\";\nlet AuthenticatedSafe = AuthenticatedSafe_1 = class AuthenticatedSafe extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthenticatedSafe_1.prototype);\n    }\n};\nAuthenticatedSafe = AuthenticatedSafe_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: ContentInfo })\n], AuthenticatedSafe);\nexport { AuthenticatedSafe };\n", "export const id_rsadsi = \"1.2.840.113549\";\nexport const id_pkcs = `${id_rsadsi}.1`;\nexport const id_pkcs_12 = `${id_pkcs}.12`;\nexport const id_pkcs_12PbeIds = `${id_pkcs_12}.1`;\nexport const id_pbeWithSHAAnd128BitRC4 = `${id_pkcs_12PbeIds}.1`;\nexport const id_pbeWithSHAAnd40BitRC4 = `${id_pkcs_12PbeIds}.2`;\nexport const id_pbeWithSHAAnd3_KeyTripleDES_CBC = `${id_pkcs_12PbeIds}.3`;\nexport const id_pbeWithSHAAnd2_KeyTripleDES_CBC = `${id_pkcs_12PbeIds}.4`;\nexport const id_pbeWithSHAAnd128BitRC2_CBC = `${id_pkcs_12PbeIds}.5`;\nexport const id_pbewithSHAAnd40BitRC2_CBC = `${id_pkcs_12PbeIds}.6`;\nexport const id_bagtypes = `${id_pkcs_12}.10.1`;\n", "import { id_bagtypes } from \"../object_identifiers\";\nexport const id_keyBag = `${id_bagtypes}.1`;\nexport const id_pkcs8ShroudedKeyBag = `${id_bagtypes}.2`;\nexport const id_certBag = `${id_bagtypes}.3`;\nexport const id_CRLBag = `${id_bagtypes}.4`;\nexport const id_SecretBag = `${id_bagtypes}.5`;\nexport const id_SafeContents = `${id_bagtypes}.6`;\nexport const id_pkcs_9 = \"1.2.840.113549.1.9\";\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_pkcs_9 } from \"./types\";\nexport class CertBag {\n    constructor(params = {}) {\n        this.certId = \"\";\n        this.certValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], CertBag.prototype, \"certId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], CertBag.prototype, \"certValue\", void 0);\nexport const id_certTypes = `${id_pkcs_9}.22`;\nexport const id_x509Certificate = `${id_certTypes}.1`;\nexport const id_sdsiCertificate = `${id_certTypes}.2`;\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_pkcs_9 } from \"./types\";\nexport class CRLBag {\n    constructor(params = {}) {\n        this.crlId = \"\";\n        this.crltValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], CRLBag.prototype, \"crlId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], CRLBag.prototype, \"crltValue\", void 0);\nexport const id_crlTypes = `${id_pkcs_9}.23`;\nexport const id_x509CRL = `${id_crlTypes}.1`;\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport class EncryptedData extends OctetString {\n}\nexport class EncryptedPrivateKeyInfo {\n    constructor(params = {}) {\n        this.encryptionAlgorithm = new AlgorithmIdentifier();\n        this.encryptedData = new EncryptedData();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], EncryptedPrivateKeyInfo.prototype, \"encryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: EncryptedData })\n], EncryptedPrivateKeyInfo.prototype, \"encryptedData\", void 0);\n", "var Attributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString, } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier, Attribute } from \"@peculiar/asn1-x509\";\nexport var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n})(Version || (Version = {}));\nexport class PrivateKey extends OctetString {\n}\nlet Attributes = Attributes_1 = class Attributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Attributes_1.prototype);\n    }\n};\nAttributes = Attributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], Attributes);\nexport { Attributes };\nexport class PrivateKeyInfo {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.privateKeyAlgorithm = new AlgorithmIdentifier();\n        this.privateKey = new PrivateKey();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PrivateKeyInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], PrivateKeyInfo.prototype, \"privateKeyAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: PrivateKey })\n], PrivateKeyInfo.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: Attributes, implicit: true, context: 0, optional: true })\n], PrivateKeyInfo.prototype, \"attributes\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { PrivateKeyInfo } from \"@peculiar/asn1-pkcs8\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet KeyBag = class KeyBag extends PrivateKeyInfo {\n};\nKeyBag = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], KeyBag);\nexport { KeyBag };\n", "import { __decorate } from \"tslib\";\nimport { EncryptedPrivateKeyInfo } from \"@peculiar/asn1-pkcs8\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet PKCS8ShroudedKeyBag = class PKCS8ShroudedKeyBag extends EncryptedPrivateKeyInfo {\n};\nPKCS8ShroudedKeyBag = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], PKCS8ShroudedKeyBag);\nexport { PKCS8ShroudedKeyBag };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class SecretBag {\n    constructor(params = {}) {\n        this.secretTypeId = \"\";\n        this.secretValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], SecretBag.prototype, \"secretTypeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], SecretBag.prototype, \"secretValue\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { DigestInfo } from \"@peculiar/asn1-rsa\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nexport class MacData {\n    constructor(params = {}) {\n        this.mac = new DigestInfo();\n        this.macSalt = new OctetString();\n        this.iterations = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DigestInfo })\n], MacData.prototype, \"mac\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], MacData.prototype, \"macSalt\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, defaultValue: 1 })\n], MacData.prototype, \"iterations\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { ContentInfo } from \"@peculiar/asn1-cms\";\nimport { MacData } from \"./mac_data\";\nexport class PFX {\n    constructor(params = {}) {\n        this.version = 3;\n        this.authSafe = new ContentInfo();\n        this.macData = new MacData();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PFX.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: ContentInfo })\n], PFX.prototype, \"authSafe\", void 0);\n__decorate([\n    AsnProp({ type: MacData, optional: true })\n], PFX.prototype, \"macData\", void 0);\n", "var SafeContents_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { PKCS12Attribute } from \"./attribute\";\nexport class SafeBag {\n    constructor(params = {}) {\n        this.bagId = \"\";\n        this.bagValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], SafeBag.prototype, \"bagId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], SafeBag.prototype, \"bagValue\", void 0);\n__decorate([\n    AsnProp({ type: PKCS12Attribute, repeated: \"set\", optional: true })\n], SafeBag.prototype, \"bagAttributes\", void 0);\nlet SafeContents = SafeContents_1 = class SafeContents extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SafeContents_1.prototype);\n    }\n};\nSafeContents = SafeContents_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: SafeBag })\n], SafeContents);\nexport { SafeContents };\n", "var ExtensionRequest_1, ExtendedCertificateAttributes_1, SMIMECapabilities_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnPropTypes, AsnProp, OctetString, AsnArray, } from \"@peculiar/asn1-schema\";\nimport * as cms from \"@peculiar/asn1-cms\";\nimport * as pfx from \"@peculiar/asn1-pfx\";\nimport * as pkcs8 from \"@peculiar/asn1-pkcs8\";\nimport * as x509 from \"@peculiar/asn1-x509\";\nimport * as attr from \"@peculiar/asn1-x509-attr\";\nexport const id_pkcs9 = \"1.2.840.113549.1.9\";\nexport const id_pkcs9_mo = `${id_pkcs9}.0`;\nexport const id_pkcs9_oc = `${id_pkcs9}.24`;\nexport const id_pkcs9_at = `${id_pkcs9}.25`;\nexport const id_pkcs9_sx = `${id_pkcs9}.26`;\nexport const id_pkcs9_mr = `${id_pkcs9}.27`;\nexport const id_pkcs9_oc_pkcsEntity = `${id_pkcs9_oc}.1`;\nexport const id_pkcs9_oc_naturalPerson = `${id_pkcs9_oc}.2`;\nexport const id_pkcs9_at_emailAddress = `${id_pkcs9}.1`;\nexport const id_pkcs9_at_unstructuredName = `${id_pkcs9}.2`;\nexport const id_pkcs9_at_contentType = `${id_pkcs9}.3`;\nexport const id_pkcs9_at_messageDigest = `${id_pkcs9}.4`;\nexport const id_pkcs9_at_signingTime = `${id_pkcs9}.5`;\nexport const id_pkcs9_at_counterSignature = `${id_pkcs9}.6`;\nexport const id_pkcs9_at_challengePassword = `${id_pkcs9}.7`;\nexport const id_pkcs9_at_unstructuredAddress = `${id_pkcs9}.8`;\nexport const id_pkcs9_at_extendedCertificateAttributes = `${id_pkcs9}.9`;\nexport const id_pkcs9_at_signingDescription = `${id_pkcs9}.13`;\nexport const id_pkcs9_at_extensionRequest = `${id_pkcs9}.14`;\nexport const id_pkcs9_at_smimeCapabilities = `${id_pkcs9}.15`;\nexport const id_pkcs9_at_friendlyName = `${id_pkcs9}.20`;\nexport const id_pkcs9_at_localKeyId = `${id_pkcs9}.21`;\nexport const id_pkcs9_at_userPKCS12 = `2.16.840.1.113730.3.1.216`;\nexport const id_pkcs9_at_pkcs15Token = `${id_pkcs9_at}.1`;\nexport const id_pkcs9_at_encryptedPrivateKeyInfo = `${id_pkcs9_at}.2`;\nexport const id_pkcs9_at_randomNonce = `${id_pkcs9_at}.3`;\nexport const id_pkcs9_at_sequenceNumber = `${id_pkcs9_at}.4`;\nexport const id_pkcs9_at_pkcs7PDU = `${id_pkcs9_at}.5`;\nexport const id_ietf_at = `1.3.6.1.5.5.7.9`;\nexport const id_pkcs9_at_dateOfBirth = `${id_ietf_at}.1`;\nexport const id_pkcs9_at_placeOfBirth = `${id_ietf_at}.2`;\nexport const id_pkcs9_at_gender = `${id_ietf_at}.3`;\nexport const id_pkcs9_at_countryOfCitizenship = `${id_ietf_at}.4`;\nexport const id_pkcs9_at_countryOfResidence = `${id_ietf_at}.5`;\nexport const id_pkcs9_sx_pkcs9String = `${id_pkcs9_sx}.1`;\nexport const id_pkcs9_sx_signingTime = `${id_pkcs9_sx}.2`;\nexport const id_pkcs9_mr_caseIgnoreMatch = `${id_pkcs9_mr}.1`;\nexport const id_pkcs9_mr_signingTimeMatch = `${id_pkcs9_mr}.2`;\nexport const id_smime = `${id_pkcs9}.16`;\nexport const id_certTypes = `${id_pkcs9}.22`;\nexport const crlTypes = `${id_pkcs9}.23`;\nexport const id_at_pseudonym = `${attr.id_at}.65`;\nlet PKCS9String = class PKCS9String extends x509.DirectoryString {\n    constructor(params = {}) {\n        super(params);\n    }\n    toString() {\n        const o = {};\n        o.toString();\n        return this.ia5String || super.toString();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], PKCS9String.prototype, \"ia5String\", void 0);\nPKCS9String = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], PKCS9String);\nexport { PKCS9String };\nlet Pkcs7PDU = class Pkcs7PDU extends cms.ContentInfo {\n};\nPkcs7PDU = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Pkcs7PDU);\nexport { Pkcs7PDU };\nlet UserPKCS12 = class UserPKCS12 extends pfx.PFX {\n};\nUserPKCS12 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], UserPKCS12);\nexport { UserPKCS12 };\nlet EncryptedPrivateKeyInfo = class EncryptedPrivateKeyInfo extends pkcs8.EncryptedPrivateKeyInfo {\n};\nEncryptedPrivateKeyInfo = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], EncryptedPrivateKeyInfo);\nexport { EncryptedPrivateKeyInfo };\nlet EmailAddress = class EmailAddress {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], EmailAddress.prototype, \"value\", void 0);\nEmailAddress = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EmailAddress);\nexport { EmailAddress };\nlet UnstructuredName = class UnstructuredName extends PKCS9String {\n};\nUnstructuredName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], UnstructuredName);\nexport { UnstructuredName };\nlet UnstructuredAddress = class UnstructuredAddress extends x509.DirectoryString {\n};\nUnstructuredAddress = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], UnstructuredAddress);\nexport { UnstructuredAddress };\nlet DateOfBirth = class DateOfBirth {\n    constructor(value = new Date()) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], DateOfBirth.prototype, \"value\", void 0);\nDateOfBirth = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DateOfBirth);\nexport { DateOfBirth };\nlet PlaceOfBirth = class PlaceOfBirth extends x509.DirectoryString {\n};\nPlaceOfBirth = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], PlaceOfBirth);\nexport { PlaceOfBirth };\nlet Gender = class Gender {\n    constructor(value = \"M\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], Gender.prototype, \"value\", void 0);\nGender = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Gender);\nexport { Gender };\nlet CountryOfCitizenship = class CountryOfCitizenship {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], CountryOfCitizenship.prototype, \"value\", void 0);\nCountryOfCitizenship = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CountryOfCitizenship);\nexport { CountryOfCitizenship };\nlet CountryOfResidence = class CountryOfResidence extends CountryOfCitizenship {\n};\nCountryOfResidence = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CountryOfResidence);\nexport { CountryOfResidence };\nlet Pseudonym = class Pseudonym extends x509.DirectoryString {\n};\nPseudonym = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Pseudonym);\nexport { Pseudonym };\nlet ContentType = class ContentType {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ContentType.prototype, \"value\", void 0);\nContentType = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ContentType);\nexport { ContentType };\nexport class MessageDigest extends OctetString {\n}\nlet SigningTime = class SigningTime extends x509.Time {\n};\nSigningTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SigningTime);\nexport { SigningTime };\nexport class RandomNonce extends OctetString {\n}\nlet SequenceNumber = class SequenceNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n    toString() {\n        return this.value.toString();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SequenceNumber.prototype, \"value\", void 0);\nSequenceNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SequenceNumber);\nexport { SequenceNumber };\nlet CounterSignature = class CounterSignature extends cms.SignerInfo {\n};\nCounterSignature = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CounterSignature);\nexport { CounterSignature };\nlet ChallengePassword = class ChallengePassword extends x509.DirectoryString {\n};\nChallengePassword = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ChallengePassword);\nexport { ChallengePassword };\nlet ExtensionRequest = ExtensionRequest_1 = class ExtensionRequest extends x509.Extensions {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtensionRequest_1.prototype);\n    }\n};\nExtensionRequest = ExtensionRequest_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], ExtensionRequest);\nexport { ExtensionRequest };\nlet ExtendedCertificateAttributes = ExtendedCertificateAttributes_1 = class ExtendedCertificateAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedCertificateAttributes_1.prototype);\n    }\n};\nExtendedCertificateAttributes = ExtendedCertificateAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: cms.Attribute })\n], ExtendedCertificateAttributes);\nexport { ExtendedCertificateAttributes };\nlet FriendlyName = class FriendlyName {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], FriendlyName.prototype, \"value\", void 0);\nFriendlyName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], FriendlyName);\nexport { FriendlyName };\nexport class LocalKeyId extends OctetString {\n}\nexport class SigningDescription extends x509.DirectoryString {\n}\nlet SMIMECapability = class SMIMECapability extends x509.AlgorithmIdentifier {\n};\nSMIMECapability = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SMIMECapability);\nexport { SMIMECapability };\nlet SMIMECapabilities = SMIMECapabilities_1 = class SMIMECapabilities extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SMIMECapabilities_1.prototype);\n    }\n};\nSMIMECapabilities = SMIMECapabilities_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: SMIMECapability })\n], SMIMECapabilities);\nexport { SMIMECapabilities };\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "var Attributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"@peculiar/asn1-x509\";\nlet Attributes = Attributes_1 = class Attributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Attributes_1.prototype);\n    }\n};\nAttributes = Attributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], Attributes);\nexport { Attributes };\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { Name, SubjectPublicKeyInfo } from \"@peculiar/asn1-x509\";\nimport { Attributes } from \"./attributes\";\nexport class CertificationRequestInfo {\n    constructor(params = {}) {\n        this.version = 0;\n        this.subject = new Name();\n        this.subjectPKInfo = new SubjectPublicKeyInfo();\n        this.attributes = new Attributes();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CertificationRequestInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], CertificationRequestInfo.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], CertificationRequestInfo.prototype, \"subjectPKInfo\", void 0);\n__decorate([\n    AsnProp({ type: Attributes, implicit: true, context: 0 })\n], CertificationRequestInfo.prototype, \"attributes\", void 0);\n", "import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { CertificationRequestInfo } from \"./certification_request_info\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport class CertificationRequest {\n    constructor(params = {}) {\n        this.certificationRequestInfo = new CertificationRequestInfo();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: CertificationRequestInfo, raw: true })\n], CertificationRequest.prototype, \"certificationRequestInfo\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificationRequest.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificationRequest.prototype, \"signature\", void 0);\n", "import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport type { SupportedEncodings } from 'uint8arrays/to-string'\n\nconst pathSepS = '/'\nconst pathSepB = new TextEncoder().encode(pathSepS)\nconst pathSep = pathSepB[0]\n\n/**\n * A Key represents the unique identifier of an object.\n * Our Key scheme is inspired by file systems and Google App Engine key model.\n * Keys are meant to be unique across a system. Keys are hierarchical,\n * incorporating more and more specific namespaces. Thus keys can be deemed\n * 'children' or 'ancestors' of other keys:\n * - `new Key('/Comedy')`\n * - `new Key('/Comedy/MontyPython')`\n * Also, every namespace can be parametrized to embed relevant object\n * information. For example, the Key `name` (most specific namespace) could\n * include the object type:\n * - `new Key('/Comedy/MontyPython/Actor:JohnCleese')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop')`\n * - `new Key('/Comedy/MontyPython/Sketch:CheeseShop/Character:Mousebender')`\n *\n */\nexport class Key {\n  private _buf: Uint8Array\n\n  /**\n   * @param {string | Uint8Array} s\n   * @param {boolean} [clean]\n   */\n  constructor (s: string | Uint8Array, clean?: boolean) {\n    if (typeof s === 'string') {\n      this._buf = uint8ArrayFromString(s)\n    } else if (s instanceof Uint8Array) {\n      this._buf = s\n    } else {\n      throw new Error('Invalid key, should be String of Uint8Array')\n    }\n\n    if (clean == null) {\n      clean = true\n    }\n\n    if (clean) {\n      this.clean()\n    }\n\n    if (this._buf.byteLength === 0 || this._buf[0] !== pathSep) {\n      throw new Error('Invalid key')\n    }\n  }\n\n  /**\n   * Convert to the string representation\n   *\n   * @param {import('uint8arrays/to-string').SupportedEncodings} [encoding] - The encoding to use.\n   * @returns {string}\n   */\n  toString (encoding: SupportedEncodings = 'utf8'): string {\n    return uint8ArrayToString(this._buf, encoding)\n  }\n\n  /**\n   * Return the Uint8Array representation of the key\n   *\n   * @returns {Uint8Array}\n   */\n  uint8Array (): Uint8Array {\n    return this._buf\n  }\n\n  /**\n   * Return string representation of the key\n   *\n   * @returns {string}\n   */\n  get [Symbol.toStringTag] (): string {\n    return `Key(${this.toString()})`\n  }\n\n  /**\n   * Constructs a key out of a namespace array.\n   *\n   * @param {Array<string>} list - The array of namespaces\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * Key.withNamespaces(['one', 'two'])\n   * // => Key('/one/two')\n   * ```\n   */\n  static withNamespaces (list: string[]): Key {\n    return new Key(list.join(pathSepS))\n  }\n\n  /**\n   * Returns a randomly (uuid) generated key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * Key.random()\n   * // => Key('/344502982398')\n   * ```\n   */\n  static random (): Key {\n    return new Key(Math.random().toString().substring(2))\n  }\n\n  /**\n   * @param {*} other\n   */\n  static asKey (other: any): Key | null {\n    if (other instanceof Uint8Array || typeof other === 'string') {\n      // we can create a key from this\n      return new Key(other)\n    }\n\n    if (typeof other.uint8Array === 'function') {\n      // this is an older version or may have crossed the esm/cjs boundary\n      return new Key(other.uint8Array())\n    }\n\n    return null\n  }\n\n  /**\n   * Cleanup the current key\n   *\n   * @returns {void}\n   */\n  clean (): void {\n    if (this._buf == null || this._buf.byteLength === 0) {\n      this._buf = pathSepB\n    }\n\n    if (this._buf[0] !== pathSep) {\n      const bytes = new Uint8Array(this._buf.byteLength + 1)\n      bytes.fill(pathSep, 0, 1)\n      bytes.set(this._buf, 1)\n      this._buf = bytes\n    }\n\n    // normalize does not remove trailing slashes\n    while (this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === pathSep) {\n      this._buf = this._buf.subarray(0, -1)\n    }\n  }\n\n  /**\n   * Check if the given key is sorted lower than ourself.\n   *\n   * @param {Key} key - The other Key to check against\n   * @returns {boolean}\n   */\n  less (key: Key): boolean {\n    const list1 = this.list()\n    const list2 = key.list()\n\n    for (let i = 0; i < list1.length; i++) {\n      if (list2.length < i + 1) {\n        return false\n      }\n\n      const c1 = list1[i]\n      const c2 = list2[i]\n\n      if (c1 < c2) {\n        return true\n      } else if (c1 > c2) {\n        return false\n      }\n    }\n\n    return list1.length < list2.length\n  }\n\n  /**\n   * Returns the key with all parts in reversed order.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').reverse()\n   * // => Key('/Actor:JohnCleese/MontyPython/Comedy')\n   * ```\n   */\n  reverse (): Key {\n    return Key.withNamespaces(this.list().slice().reverse())\n  }\n\n  /**\n   * Returns the `namespaces` making up this Key.\n   *\n   * @returns {Array<string>}\n   */\n  namespaces (): string[] {\n    return this.list()\n  }\n\n  /**\n   * Returns the \"base\" namespace of this key.\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').baseNamespace()\n   * // => 'Actor:JohnCleese'\n   * ```\n   */\n  baseNamespace (): string {\n    const ns = this.namespaces()\n    return ns[ns.length - 1]\n  }\n\n  /**\n   * Returns the `list` representation of this key.\n   *\n   * @returns {Array<string>}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').list()\n   * // => ['Comedy', 'MontyPythong', 'Actor:JohnCleese']\n   * ```\n   */\n  list (): string[] {\n    return this.toString().split(pathSepS).slice(1)\n  }\n\n  /**\n   * Returns the \"type\" of this key (value of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').type()\n   * // => 'Actor'\n   * ```\n   */\n  type (): string {\n    return namespaceType(this.baseNamespace())\n  }\n\n  /**\n   * Returns the \"name\" of this key (field of last namespace).\n   *\n   * @returns {string}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').name()\n   * // => 'JohnCleese'\n   * ```\n   */\n  name (): string {\n    return namespaceValue(this.baseNamespace())\n  }\n\n  /**\n   * Returns an \"instance\" of this type key (appends value to namespace).\n   *\n   * @param {string} s - The string to append.\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor').instance('JohnClesse')\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   * ```\n   */\n  instance (s: string): Key {\n    return new Key(this.toString() + ':' + s)\n  }\n\n  /**\n   * Returns the \"path\" of this key (parent + type).\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython/Actor:JohnCleese').path()\n   * // => Key('/Comedy/MontyPython/Actor')\n   * ```\n   */\n  path (): Key {\n    let p = this.parent().toString()\n    if (!p.endsWith(pathSepS)) {\n      p += pathSepS\n    }\n    p += this.type()\n    return new Key(p)\n  }\n\n  /**\n   * Returns the `parent` Key of this Key.\n   *\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key(\"/Comedy/MontyPython/Actor:JohnCleese\").parent()\n   * // => Key(\"/Comedy/MontyPython\")\n   * ```\n   */\n  parent (): Key {\n    const list = this.list()\n    if (list.length === 1) {\n      return new Key(pathSepS)\n    }\n\n    return new Key(list.slice(0, -1).join(pathSepS))\n  }\n\n  /**\n   * Returns the `child` Key of this Key.\n   *\n   * @param {Key} key - The child Key to add\n   * @returns {Key}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython').child(new Key('Actor:JohnCleese'))\n   * // => Key('/Comedy/MontyPython/Actor:JohnCleese')\n   * ```\n   */\n  child (key: Key): Key {\n    if (this.toString() === pathSepS) {\n      return key\n    } else if (key.toString() === pathSepS) {\n      return this\n    }\n\n    return new Key(this.toString() + key.toString(), false)\n  }\n\n  /**\n   * Returns whether this key is a prefix of `other`\n   *\n   * @param {Key} other - The other key to test against\n   * @returns {boolean}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy').isAncestorOf('/Comedy/MontyPython')\n   * // => true\n   * ```\n   */\n  isAncestorOf (other: Key): boolean {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return other.toString().startsWith(this.toString())\n  }\n\n  /**\n   * Returns whether this key is a contains another as prefix.\n   *\n   * @param {Key} other - The other Key to test against\n   * @returns {boolean}\n   *\n   * @example\n   * ```js\n   * new Key('/Comedy/MontyPython').isDecendantOf('/Comedy')\n   * // => true\n   * ```\n   */\n  isDecendantOf (other: Key): boolean {\n    if (other.toString() === this.toString()) {\n      return false\n    }\n\n    return this.toString().startsWith(other.toString())\n  }\n\n  /**\n   * Checks if this key has only one namespace.\n   *\n   * @returns {boolean}\n   */\n  isTopLevel (): boolean {\n    return this.list().length === 1\n  }\n\n  /**\n   * Concats one or more Keys into one new Key.\n   *\n   * @param {Array<Key>} keys - The array of keys to concatenate\n   * @returns {Key}\n   */\n  concat (...keys: Key[]): Key {\n    return Key.withNamespaces([...this.namespaces(), ...flatten(keys.map(key => key.namespaces()))])\n  }\n}\n\n/**\n * The first component of a namespace. `foo` in `foo:bar`\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceType (ns: string): string {\n  const parts = ns.split(':')\n  if (parts.length < 2) {\n    return ''\n  }\n  return parts.slice(0, -1).join(':')\n}\n\n/**\n * The last component of a namespace, `baz` in `foo:bar:baz`.\n *\n * @param {string} ns\n * @returns {string}\n */\nfunction namespaceValue (ns: string): string {\n  const parts = ns.split(':')\n  return parts[parts.length - 1]\n}\n\n/**\n * Flatten array of arrays (only one level)\n *\n * @template T\n * @param {Array<any>} arr\n * @returns {T[]}\n */\nfunction flatten (arr: any[]): string[] {\n  return ([]).concat(...arr)\n}\n", "import { TypedEventEmitter } from 'main-event'\nimport { UnimplementedError } from '../error.js'\nimport type { PeerId, ListenerEvents, Listener } from '@libp2p/interface'\nimport type { TransportManager } from '@libp2p/interface-internal'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface WebRTCDirectListenerComponents {\n  peerId: PeerId\n  transportManager: TransportManager\n}\n\nexport interface WebRTCDirectListenerInit {\n  shutdownController: AbortController\n}\n\nexport class WebRTCDirectListener extends TypedEventEmitter<ListenerEvents> implements Listener {\n  async listen (): Promise<void> {\n    throw new UnimplementedError('WebRTCTransport.createListener')\n  }\n\n  getAddrs (): Multiaddr[] {\n    return []\n  }\n\n  updateAnnounceAddrs (): void {\n\n  }\n\n  async close (): Promise<void> {\n\n  }\n}\n", "export const NOISE_MSG_MAX_LENGTH_BYTES = 65535\nexport const NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG = NOISE_MSG_MAX_LENGTH_BYTES - 16\n\nexport const DUMP_SESSION_KEYS = Boolean(globalThis.process?.env?.DUMP_SESSION_KEYS)\nexport const CHACHA_TAG_LENGTH = 16\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is boolean. */\nexport function abool(b: boolean): void {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(value: Uint8Array, length?: number, title: string = ''): Uint8Array {\n  const bytes = isBytes(value);\n  const len = value?.length;\n  const needsLen = length !== undefined;\n  if (!bytes || (needsLen && len !== length)) {\n    const prefix = title && `\"${title}\" `;\n    const ofLen = needsLen ? ` of length ${length}` : '';\n    const got = bytes ? `length=${len}` : `type=${typeof value}`;\n    throw new Error(prefix + 'expected Uint8Array' + ofLen + ', got ' + got);\n  }\n  return value;\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out, undefined, 'output');\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport type IHash = {\n  (data: string | Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n// Used in micro\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return BigInt(hex === '' ? '0' : '0x' + hex); // Big Endian\n}\n\n// Used in ff1\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\n\n// Used in micro, ff1\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/**\n * Checks if two U8A use same underlying buffer and overlaps.\n * This is invalid and can corrupt data.\n */\nexport function overlapBytes(a: Uint8Array, b: Uint8Array): boolean {\n  return (\n    a.buffer === b.buffer && // best we can do, may fail with an obscure Proxy\n    a.byteOffset < b.byteOffset + b.byteLength && // a starts before b end\n    b.byteOffset < a.byteOffset + a.byteLength // b starts before a end\n  );\n}\n\n/**\n * If input and output overlap and input starts before output, we will overwrite end of input before\n * we start processing it, so this is not supported for most ciphers (except chacha/salse, which designed with this)\n */\nexport function complexOverlapBytes(input: Uint8Array, output: Uint8Array): void {\n  // This is very cursed. It works somehow, but I'm completely unsure,\n  // reasoning about overlapping aligned windows is very hard.\n  if (overlapBytes(input, output) && input.byteOffset < output.byteOffset)\n    throw new Error('complex overlap of input and output is not supported');\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Used in ARX only\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts: T2\n): T1 & T2 {\n  if (opts == null || typeof opts !== 'object') throw new Error('options must be defined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Compares 2 uint8array-s in kinda constant time. */\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// TODO: remove\nexport interface IHash2 {\n  blockLen: number; // Bytes per block\n  outputLen: number; // Bytes in output\n  update(buf: string | Uint8Array): this;\n  // Writes digest into buf\n  digestInto(buf: Uint8Array): void;\n  digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\n\n/** Sync cipher: takes byte array and returns byte array. */\nexport type Cipher = {\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\n/** Async cipher e.g. from built-in WebCrypto. */\nexport type AsyncCipher = {\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\n/** Cipher with `output` argument which can optimize by doing 1 less allocation. */\nexport type CipherWithOutput = Cipher & {\n  encrypt(plaintext: Uint8Array, output?: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array, output?: Uint8Array): Uint8Array;\n};\n\n/**\n * Params are outside of return type, so it is accessible before calling constructor.\n * If function support multiple nonceLength's, we return the best one.\n */\nexport type CipherParams = {\n  blockSize: number;\n  nonceLength?: number;\n  tagLength?: number;\n  varSizeNonce?: boolean;\n};\n/** ARX cipher, like salsa or chacha. */\nexport type ARXCipher = ((\n  key: Uint8Array,\n  nonce: Uint8Array,\n  AAD?: Uint8Array\n) => CipherWithOutput) & {\n  blockSize: number;\n  nonceLength: number;\n  tagLength: number;\n};\nexport type CipherCons<T extends any[]> = (key: Uint8Array, ...args: T) => Cipher;\n/**\n * Wraps a cipher: validates args, ensures encrypt() can only be called once.\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = <C extends CipherCons<any>, P extends CipherParams>(\n  params: P,\n  constructor: C\n): C & P => {\n  function wrappedCipher(key: Uint8Array, ...args: any[]): CipherWithOutput {\n    // Validate key\n    abytes(key, undefined, 'key');\n\n    // Big-Endian hardware is rare. Just in case someone still decides to run ciphers:\n    if (!isLE) throw new Error('Non little-endian hardware is not yet supported');\n\n    // Validate nonce if nonceLength is present\n    if (params.nonceLength !== undefined) {\n      const nonce = args[0];\n      abytes(nonce, params.varSizeNonce ? undefined : params.nonceLength, 'nonce');\n    }\n\n    // Validate AAD if tagLength present\n    const tagl = params.tagLength;\n    if (tagl && args[1] !== undefined) abytes(args[1], undefined, 'AAD');\n\n    const cipher = constructor(key, ...args);\n    const checkOutput = (fnLength: number, output?: Uint8Array) => {\n      if (output !== undefined) {\n        if (fnLength !== 2) throw new Error('cipher output not supported');\n        abytes(output, undefined, 'output');\n      }\n    };\n    // Create wrapped cipher with validation and single-use encryption\n    let called = false;\n    const wrCipher = {\n      encrypt(data: Uint8Array, output?: Uint8Array) {\n        if (called) throw new Error('cannot encrypt() twice with same key + nonce');\n        called = true;\n        abytes(data);\n        checkOutput(cipher.encrypt.length, output);\n        return (cipher as CipherWithOutput).encrypt(data, output);\n      },\n      decrypt(data: Uint8Array, output?: Uint8Array) {\n        abytes(data);\n        if (tagl && data.length < tagl)\n          throw new Error('\"ciphertext\" expected length bigger than tagLength=' + tagl);\n        checkOutput(cipher.decrypt.length, output);\n        return (cipher as CipherWithOutput).decrypt(data, output);\n      },\n    };\n\n    return wrCipher;\n  }\n\n  Object.assign(wrappedCipher, params);\n  return wrappedCipher as C & P;\n};\n\n/** Represents salsa / chacha stream. */\nexport type XorStream = (\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  output?: Uint8Array,\n  counter?: number\n) => Uint8Array;\n\n/**\n * By default, returns u8a of length.\n * When out is available, it checks it for validity and uses it.\n */\nexport function getOutput(\n  expectedLength: number,\n  out?: Uint8Array,\n  onlyAligned = true\n): Uint8Array {\n  if (out === undefined) return new Uint8Array(expectedLength);\n  if (out.length !== expectedLength)\n    throw new Error(\n      '\"output\" expected Uint8Array of length ' + expectedLength + ', got: ' + out.length\n    );\n  if (onlyAligned && !isAligned32(out)) throw new Error('invalid output, must be aligned');\n  return out;\n}\n\nexport function u64Lengths(dataLength: number, aadLength: number, isLE: boolean): Uint8Array {\n  abool(isLE);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  view.setBigUint64(0, BigInt(aadLength), isLE);\n  view.setBigUint64(8, BigInt(dataLength), isLE);\n  return num;\n}\n\n// Is byte array aligned to 4 byte offset (u32)?\nexport function isAligned32(bytes: Uint8Array): boolean {\n  return bytes.byteOffset % 4 === 0;\n}\n\n// copy bytes to new u8a (aligned). Because Buffer.slice is broken.\nexport function copyBytes(bytes: Uint8Array): Uint8Array {\n  return Uint8Array.from(bytes);\n}\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  const cr = typeof globalThis === 'object' ? (globalThis as any).crypto : null;\n  if (typeof cr?.getRandomValues !== 'function')\n    throw new Error('crypto.getRandomValues must be defined');\n  return cr.getRandomValues(new Uint8Array(bytesLength));\n}\n\n/**\n * The pseudorandom number generator doesn't wipe current state:\n * instead, it generates new one based on previous state + entropy.\n * Not reseed/rekey, since AES CTR DRBG does rekey on each randomBytes,\n * which is in fact `reseed`, since it changes counter too.\n */\nexport interface PRG {\n  addEntropy(seed: Uint8Array): void;\n  randomBytes(length: number): Uint8Array;\n  clean(): void;\n}\n\ntype RemoveNonceInner<T extends any[], Ret> = ((...args: T) => Ret) extends (\n  arg0: any,\n  arg1: any,\n  ...rest: infer R\n) => any\n  ? (key: Uint8Array, ...args: R) => Ret\n  : never;\n\nexport type RemoveNonce<T extends (...args: any) => any> = RemoveNonceInner<\n  Parameters<T>,\n  ReturnType<T>\n>;\nexport type CipherWithNonce = ((\n  key: Uint8Array,\n  nonce: Uint8Array,\n  ...args: any[]\n) => Cipher | AsyncCipher) & {\n  nonceLength: number;\n};\n\n/**\n * Uses CSPRG for nonce, nonce injected in ciphertext.\n * For `encrypt`, a `nonceBytes`-length buffer is fetched from CSPRNG and\n * prepended to encrypted ciphertext. For `decrypt`, first `nonceBytes` of ciphertext\n * are treated as nonce.\n *\n * NOTE: Under the same key, using random nonces (e.g. `managedNonce`) with AES-GCM and ChaCha\n * should be limited to `2**23` (8M) messages to get a collision chance of `2**-50`. Stretching to  * `2**32` (4B) messages, chance would become `2**-33` - still negligible, but creeping up.\n * @example\n * const gcm = managedNonce(aes.gcm);\n * const ciphr = gcm(key).encrypt(data);\n * const plain = gcm(key).decrypt(ciph);\n */\nexport function managedNonce<T extends CipherWithNonce>(\n  fn: T,\n  randomBytes_: typeof randomBytes = randomBytes\n): RemoveNonce<T> {\n  const { nonceLength } = fn;\n  anumber(nonceLength);\n  const addNonce = (nonce: Uint8Array, ciphertext: Uint8Array) => {\n    const out = concatBytes(nonce, ciphertext);\n    ciphertext.fill(0);\n    return out;\n  };\n  // NOTE: we cannot support DST here, it would be mistake:\n  // - we don't know how much dst length cipher requires\n  // - nonce may unalign dst and break everything\n  // - we create new u8a anyway (concatBytes)\n  // - previously we passed all args to cipher, but that was mistake!\n  return ((key: Uint8Array, ...args: any[]): any => ({\n    encrypt(plaintext: Uint8Array) {\n      abytes(plaintext);\n      const nonce = randomBytes_(nonceLength);\n      const encrypted = fn(key, nonce, ...args).encrypt(plaintext);\n      // @ts-ignore\n      if (encrypted instanceof Promise) return encrypted.then((ct) => addNonce(nonce, ct));\n      return addNonce(nonce, encrypted);\n    },\n    decrypt(ciphertext: Uint8Array) {\n      abytes(ciphertext);\n      const nonce = ciphertext.subarray(0, nonceLength);\n      const decrypted = ciphertext.subarray(nonceLength);\n      return fn(key, nonce, ...args).decrypt(decrypted);\n    },\n  })) as RemoveNonce<T>;\n}\n", "/**\n * Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\n\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | cnt(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | cnt(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | cnt(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n\n * @module\n */\nimport {\n  type PRG,\n  type XorStream,\n  abool,\n  abytes,\n  anumber,\n  checkOpts,\n  clean,\n  copyBytes,\n  randomBytes,\n  u32,\n} from './utils.ts';\n\n// Replaces `TextEncoder`, which is not available in all environments\nconst encodeStr = (str: string) => Uint8Array.from(str.split(''), (c) => c.charCodeAt(0));\nconst sigma16 = encodeStr('expand 16-byte k');\nconst sigma32 = encodeStr('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\n\n/** Rotate left. */\nexport function rotl(a: number, b: number): number {\n  return (a << b) | (a >>> (32 - b));\n}\n\n/** Ciphers must use u32 for efficiency. */\nexport type CipherCoreFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  output: Uint32Array,\n  counter: number,\n  rounds?: number\n) => void;\n\n/** Method which extends key + short nonce into larger nonce / diff key. */\nexport type ExtendNonceFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  input: Uint32Array,\n  output: Uint32Array\n) => void;\n\n/** ARX cipher options.\n * * `allowShortKeys` for 16-byte keys\n * * `counterLength` in bytes\n * * `counterRight`: right: `nonce|counter`; left: `counter|nonce`\n * */\nexport type CipherOpts = {\n  allowShortKeys?: boolean; // Original salsa / chacha allow 16-byte keys\n  extendNonceFn?: ExtendNonceFn;\n  counterLength?: number;\n  counterRight?: boolean;\n  rounds?: number;\n};\n\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b: Uint8Array) {\n  return b.byteOffset % 4 === 0;\n}\n\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\n\nconst U32_EMPTY = Uint32Array.of();\nfunction runCipher(\n  core: CipherCoreFn,\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  data: Uint8Array,\n  output: Uint8Array,\n  counter: number,\n  rounds: number\n): void {\n  const len = data.length;\n  const block = new Uint8Array(BLOCK_LEN);\n  const b32 = u32(block);\n  // Make sure that buffers aligned to 4 bytes\n  const isAligned = isAligned32(data) && isAligned32(output);\n  const d32 = isAligned ? u32(data) : U32_EMPTY;\n  const o32 = isAligned ? u32(output) : U32_EMPTY;\n  for (let pos = 0; pos < len; counter++) {\n    core(sigma, key, nonce, b32, counter, rounds);\n    if (counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    const take = Math.min(BLOCK_LEN, len - pos);\n    // aligned to 4 bytes\n    if (isAligned && take === BLOCK_LEN) {\n      const pos32 = pos / 4;\n      if (pos % 4 !== 0) throw new Error('arx: invalid block position');\n      for (let j = 0, posj: number; j < BLOCK_LEN32; j++) {\n        posj = pos32 + j;\n        o32[posj] = d32[posj] ^ b32[j];\n      }\n      pos += BLOCK_LEN;\n      continue;\n    }\n    for (let j = 0, posj; j < take; j++) {\n      posj = pos + j;\n      output[posj] = data[posj] ^ block[j];\n    }\n    pos += take;\n  }\n}\n\n/** Creates ARX-like (ChaCha, Salsa) cipher stream from core function. */\nexport function createCipher(core: CipherCoreFn, opts: CipherOpts): XorStream {\n  const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts(\n    { allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 },\n    opts\n  );\n  if (typeof core !== 'function') throw new Error('core must be a function');\n  anumber(counterLength);\n  anumber(rounds);\n  abool(counterRight);\n  abool(allowShortKeys);\n  return (\n    key: Uint8Array,\n    nonce: Uint8Array,\n    data: Uint8Array,\n    output?: Uint8Array,\n    counter = 0\n  ): Uint8Array => {\n    abytes(key, undefined, 'key');\n    abytes(nonce, undefined, 'nonce');\n    abytes(data, undefined, 'data');\n    const len = data.length;\n    if (output === undefined) output = new Uint8Array(len);\n    abytes(output, undefined, 'output');\n    anumber(counter);\n    if (counter < 0 || counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    if (output.length < len)\n      throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n    const toClean = [];\n\n    // Key & sigma\n    // key=16 -> sigma16, k=key|key\n    // key=32 -> sigma32, k=key\n    let l = key.length;\n    let k: Uint8Array;\n    let sigma: Uint32Array;\n    if (l === 32) {\n      toClean.push((k = copyBytes(key)));\n      sigma = sigma32_32;\n    } else if (l === 16 && allowShortKeys) {\n      k = new Uint8Array(32);\n      k.set(key);\n      k.set(key, 16);\n      sigma = sigma16_32;\n      toClean.push(k);\n    } else {\n      abytes(key, 32, 'arx key');\n      throw new Error('invalid key size');\n      // throw new Error(`\"arx key\" expected Uint8Array of length 32, got length=${l}`);\n    }\n\n    // Nonce\n    // salsa20:      8   (8-byte counter)\n    // chacha20orig: 8   (8-byte counter)\n    // chacha20:     12  (4-byte counter)\n    // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n    // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n    // Align nonce to 4 bytes\n    if (!isAligned32(nonce)) toClean.push((nonce = copyBytes(nonce)));\n\n    const k32 = u32(k);\n    // hsalsa & hchacha: handle extended nonce\n    if (extendNonceFn) {\n      if (nonce.length !== 24) throw new Error(`arx: extended nonce must be 24 bytes`);\n      extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n      nonce = nonce.subarray(16);\n    }\n\n    // Handle nonce counter\n    const nonceNcLen = 16 - counterLength;\n    if (nonceNcLen !== nonce.length)\n      throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n\n    // Pad counter when nonce is 64 bit\n    if (nonceNcLen !== 12) {\n      const nc = new Uint8Array(12);\n      nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n      nonce = nc;\n      toClean.push(nonce);\n    }\n    const n32 = u32(nonce);\n    runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n    clean(...toClean);\n    return output;\n  };\n}\n\n/** Internal class which wraps chacha20 or chacha8 to create CSPRNG. */\nexport class _XorStreamPRG implements PRG {\n  readonly blockLen: number;\n  readonly keyLen: number;\n  readonly nonceLen: number;\n  private state: Uint8Array;\n  private buf: Uint8Array;\n  private key: Uint8Array;\n  private nonce: Uint8Array;\n  private pos: number;\n  private ctr: number;\n  private cipher: XorStream;\n  constructor(\n    cipher: XorStream,\n    blockLen: number,\n    keyLen: number,\n    nonceLen: number,\n    seed: Uint8Array\n  ) {\n    this.cipher = cipher;\n    this.blockLen = blockLen;\n    this.keyLen = keyLen;\n    this.nonceLen = nonceLen;\n    this.state = new Uint8Array(this.keyLen + this.nonceLen);\n    this.reseed(seed);\n    this.ctr = 0;\n    this.pos = this.blockLen;\n    this.buf = new Uint8Array(this.blockLen);\n    this.key = this.state.subarray(0, this.keyLen);\n    this.nonce = this.state.subarray(this.keyLen);\n  }\n  private reseed(seed: Uint8Array) {\n    abytes(seed);\n    if (!seed || seed.length === 0) throw new Error('entropy required');\n    for (let i = 0; i < seed.length; i++) this.state[i % this.state.length] ^= seed[i];\n    this.ctr = 0;\n    this.pos = this.blockLen;\n  }\n  addEntropy(seed: Uint8Array): void {\n    this.state.set(this.randomBytes(this.state.length));\n    this.reseed(seed);\n  }\n  randomBytes(len: number): Uint8Array {\n    anumber(len);\n    if (len === 0) return new Uint8Array(0);\n    const out = new Uint8Array(len);\n    let outPos = 0;\n    // Leftovers\n    if (this.pos < this.blockLen) {\n      const take = Math.min(len, this.blockLen - this.pos);\n      out.set(this.buf.subarray(this.pos, this.pos + take), 0);\n      this.pos += take;\n      outPos += take;\n      if (outPos === len) return out; // fast path\n    }\n    // Full blocks directly to out\n    const blocks = Math.floor((len - outPos) / this.blockLen);\n    if (blocks > 0) {\n      const blockBytes = blocks * this.blockLen;\n      const b = out.subarray(outPos, outPos + blockBytes);\n      this.cipher(this.key, this.nonce, b, b, this.ctr);\n      this.ctr += blocks;\n      outPos += blockBytes;\n    }\n    // Save leftovers\n    const left = len - outPos;\n    if (left > 0) {\n      this.buf.fill(0);\n      // NOTE: cipher will handle overflow\n      this.cipher(this.key, this.nonce, this.buf, this.buf, this.ctr++);\n      out.set(this.buf.subarray(0, left), outPos);\n      this.pos = left;\n    }\n    return out;\n  }\n  clone(): _XorStreamPRG {\n    return new _XorStreamPRG(\n      this.cipher,\n      this.blockLen,\n      this.keyLen,\n      this.nonceLen,\n      this.randomBytes(this.state.length)\n    );\n  }\n  clean(): void {\n    this.pos = 0;\n    this.ctr = 0;\n    this.buf.fill(0);\n    this.state.fill(0);\n  }\n}\n\nexport type XorPRG = (seed?: Uint8Array) => _XorStreamPRG;\n\nexport const createPRG = (\n  cipher: XorStream,\n  blockLen: number,\n  keyLen: number,\n  nonceLen: number\n): XorPRG => {\n  return (seed: Uint8Array = randomBytes(32)): _XorStreamPRG =>\n    new _XorStreamPRG(cipher, blockLen, keyLen, nonceLen, seed);\n};\n", "/**\n * Poly1305 ([PDF](https://cr.yp.to/mac/poly1305-20050329.pdf),\n * [wiki](https://en.wikipedia.org/wiki/Poly1305))\n * is a fast and parallel secret-key message-authentication code suitable for\n * a wide variety of applications. It was standardized in\n * [RFC 8439](https://www.rfc-editor.org/rfc/rfc8439) and is now used in TLS 1.3.\n *\n * Polynomial MACs are not perfect for every situation:\n * they lack Random Key Robustness: the MAC can be forged, and can't be used in PAKE schemes.\n * See [invisible salamanders attack](https://keymaterial.net/2020/09/07/invisible-salamanders-in-aes-gcm-siv/).\n * To combat invisible salamanders, `hash(key)` can be included in ciphertext,\n * however, this would violate ciphertext indistinguishability:\n * an attacker would know which key was used - so `HKDF(key, i)`\n * could be used instead.\n *\n * Check out [original website](https://cr.yp.to/mac.html).\n * Based on Public Domain [poly1305-donna](https://github.com/floodyberry/poly1305-donna).\n * @module\n */\n// prettier-ignore\nimport {\n  abytes, aexists, aoutput, bytesToHex,\n  clean, concatBytes, copyBytes, hexToNumber, numberToBytesBE,\n  type IHash2\n} from './utils.ts';\n\nfunction u8to16(a: Uint8Array, i: number) {\n  return (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\n}\n\nfunction bytesToNumberLE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\n/** Small version of `poly1305` without loop unrolling. Unused, provided for auditability. */\nfunction poly1305_small(msg: Uint8Array, key: Uint8Array): Uint8Array {\n  abytes(msg);\n  abytes(key, 32, 'key');\n  const POW_2_130_5 = BigInt(2) ** BigInt(130) - BigInt(5); // 2^130-5\n  const POW_2_128_1 = BigInt(2) ** BigInt(128) - BigInt(1); // 2^128-1\n  const CLAMP_R = BigInt('0x0ffffffc0ffffffc0ffffffc0fffffff');\n  const r = bytesToNumberLE(key.subarray(0, 16)) & CLAMP_R;\n  const s = bytesToNumberLE(key.subarray(16));\n  // Process by 16 byte chunks\n  let acc = BigInt(0);\n  for (let i = 0; i < msg.length; i += 16) {\n    const m = msg.subarray(i, i + 16);\n    const n = bytesToNumberLE(m) | (BigInt(1) << BigInt(8 * m.length));\n    acc = ((acc + n) * r) % POW_2_130_5;\n  }\n  const res = (acc + s) & POW_2_128_1;\n  return numberToBytesBE(res, 16).reverse(); // LE\n}\n\n// Can be used to replace `computeTag` in chacha.ts. Unused, provided for auditability.\n// @ts-expect-error\nfunction poly1305_computeTag_small(\n  authKey: Uint8Array,\n  lengths: Uint8Array,\n  ciphertext: Uint8Array,\n  AAD?: Uint8Array\n): Uint8Array {\n  const res = [];\n  const updatePadded2 = (msg: Uint8Array) => {\n    res.push(msg);\n    const leftover = msg.length % 16;\n    if (leftover) res.push(new Uint8Array(16).slice(leftover));\n  };\n  if (AAD) updatePadded2(AAD);\n  updatePadded2(ciphertext);\n  res.push(lengths);\n  return poly1305_small(concatBytes(...res), authKey);\n}\n\n/** Poly1305 class. Prefer poly1305() function instead. */\nexport class Poly1305 implements IHash2 {\n  readonly blockLen = 16;\n  readonly outputLen = 16;\n  private buffer = new Uint8Array(16);\n  private r = new Uint16Array(10); // Allocating 1 array with .subarray() here is slower than 3\n  private h = new Uint16Array(10);\n  private pad = new Uint16Array(8);\n  private pos = 0;\n  protected finished = false;\n\n  // Can be speed-up using BigUint64Array, at the cost of complexity\n  constructor(key: Uint8Array) {\n    key = copyBytes(abytes(key, 32, 'key'));\n    const t0 = u8to16(key, 0);\n    const t1 = u8to16(key, 2);\n    const t2 = u8to16(key, 4);\n    const t3 = u8to16(key, 6);\n    const t4 = u8to16(key, 8);\n    const t5 = u8to16(key, 10);\n    const t6 = u8to16(key, 12);\n    const t7 = u8to16(key, 14);\n\n    // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n    for (let i = 0; i < 8; i++) this.pad[i] = u8to16(key, 16 + 2 * i);\n  }\n\n  private process(data: Uint8Array, offset: number, isLast = false) {\n    const hibit = isLast ? 0 : 1 << 11;\n    const { h, r } = this;\n    const r0 = r[0];\n    const r1 = r[1];\n    const r2 = r[2];\n    const r3 = r[3];\n    const r4 = r[4];\n    const r5 = r[5];\n    const r6 = r[6];\n    const r7 = r[7];\n    const r8 = r[8];\n    const r9 = r[9];\n\n    const t0 = u8to16(data, offset + 0);\n    const t1 = u8to16(data, offset + 2);\n    const t2 = u8to16(data, offset + 4);\n    const t3 = u8to16(data, offset + 6);\n    const t4 = u8to16(data, offset + 8);\n    const t5 = u8to16(data, offset + 10);\n    const t6 = u8to16(data, offset + 12);\n    const t7 = u8to16(data, offset + 14);\n\n    let h0 = h[0] + (t0 & 0x1fff);\n    let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n    let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n    let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n    let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n    let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n    let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n    let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n    let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n    let h9 = h[9] + ((t7 >>> 5) | hibit);\n\n    let c = 0;\n\n    let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n    c = d0 >>> 13;\n    d0 &= 0x1fff;\n    d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n    c += d0 >>> 13;\n    d0 &= 0x1fff;\n\n    let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n    c = d1 >>> 13;\n    d1 &= 0x1fff;\n    d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n    c += d1 >>> 13;\n    d1 &= 0x1fff;\n\n    let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n    c = d2 >>> 13;\n    d2 &= 0x1fff;\n    d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n    c += d2 >>> 13;\n    d2 &= 0x1fff;\n\n    let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n    c = d3 >>> 13;\n    d3 &= 0x1fff;\n    d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n    c += d3 >>> 13;\n    d3 &= 0x1fff;\n\n    let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n    c = d4 >>> 13;\n    d4 &= 0x1fff;\n    d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n    c += d4 >>> 13;\n    d4 &= 0x1fff;\n\n    let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n    c = d5 >>> 13;\n    d5 &= 0x1fff;\n    d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n    c += d5 >>> 13;\n    d5 &= 0x1fff;\n\n    let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n    c = d6 >>> 13;\n    d6 &= 0x1fff;\n    d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n    c += d6 >>> 13;\n    d6 &= 0x1fff;\n\n    let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n    c = d7 >>> 13;\n    d7 &= 0x1fff;\n    d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n    c += d7 >>> 13;\n    d7 &= 0x1fff;\n\n    let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n    c = d8 >>> 13;\n    d8 &= 0x1fff;\n    d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n    c += d8 >>> 13;\n    d8 &= 0x1fff;\n\n    let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n    c = d9 >>> 13;\n    d9 &= 0x1fff;\n    d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n    c += d9 >>> 13;\n    d9 &= 0x1fff;\n\n    c = ((c << 2) + c) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = c >>> 13;\n    d1 += c;\n\n    h[0] = d0;\n    h[1] = d1;\n    h[2] = d2;\n    h[3] = d3;\n    h[4] = d4;\n    h[5] = d5;\n    h[6] = d6;\n    h[7] = d7;\n    h[8] = d8;\n    h[9] = d9;\n  }\n\n  private finalize() {\n    const { h, pad } = this;\n    const g = new Uint16Array(10);\n    let c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    for (let i = 2; i < 10; i++) {\n      h[i] += c;\n      c = h[i] >>> 13;\n      h[i] &= 0x1fff;\n    }\n    h[0] += c * 5;\n    c = h[0] >>> 13;\n    h[0] &= 0x1fff;\n    h[1] += c;\n    c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    h[2] += c;\n\n    g[0] = h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n    for (let i = 1; i < 10; i++) {\n      g[i] = h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n    g[9] -= 1 << 13;\n\n    let mask = (c ^ 1) - 1;\n    for (let i = 0; i < 10; i++) g[i] &= mask;\n    mask = ~mask;\n    for (let i = 0; i < 10; i++) h[i] = (h[i] & mask) | g[i];\n    h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n    h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n    h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n    h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n    h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n    h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n    h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n    h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n\n    let f = h[0] + pad[0];\n    h[0] = f & 0xffff;\n    for (let i = 1; i < 8; i++) {\n      f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n      h[i] = f & 0xffff;\n    }\n    clean(g);\n  }\n  update(data: Uint8Array): this {\n    aexists(this);\n    abytes(data);\n    data = copyBytes(data);\n    const { buffer, blockLen } = this;\n    const len = data.length;\n\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input\n      if (take === blockLen) {\n        for (; blockLen <= len - pos; pos += blockLen) this.process(data, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(buffer, 0, false);\n        this.pos = 0;\n      }\n    }\n    return this;\n  }\n  destroy(): void {\n    clean(this.h, this.r, this.buffer, this.pad);\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { buffer, h } = this;\n    let { pos } = this;\n    if (pos) {\n      buffer[pos++] = 1;\n      for (; pos < 16; pos++) buffer[pos] = 0;\n      this.process(buffer, 0, true);\n    }\n    this.finalize();\n    let opos = 0;\n    for (let i = 0; i < 8; i++) {\n      out[opos++] = h[i] >>> 0;\n      out[opos++] = h[i] >>> 8;\n    }\n    return out;\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nexport function wrapConstructorWithKey<H extends IHash2>(\n  hashCons: (key: Uint8Array) => H\n): {\n  (msg: Uint8Array, key: Uint8Array): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(key: Uint8Array): H;\n} {\n  const hashC = (msg: Uint8Array, key: Uint8Array): Uint8Array =>\n    hashCons(key).update(msg).digest();\n  const tmp = hashCons(new Uint8Array(32)); // tmp array, used just once below\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Uint8Array) => hashCons(key);\n  return hashC;\n}\n\n/** Poly1305 MAC from RFC 8439. */\nexport const poly1305: CHash = /** @__PURE__ */ (() =>\n  wrapConstructorWithKey((key) => new Poly1305(key)))();\n", "/**\n * ChaCha stream cipher, released\n * in 2008. Developed after Salsa20, ChaCha aims to increase diffusion per round.\n * It was standardized in [RFC 8439](https://www.rfc-editor.org/rfc/rfc8439) and\n * is now used in TLS 1.3.\n *\n * [XChaCha20](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha)\n * extended-nonce variant is also provided. Similar to XSalsa, it's safe to use with\n * randomly-generated nonces.\n *\n * Check out [PDF](http://cr.yp.to/chacha/chacha-20080128.pdf) and\n * [wiki](https://en.wikipedia.org/wiki/Salsa20) and\n * [website](https://cr.yp.to/chacha.html).\n *\n * @module\n */\nimport { type XorPRG, createCipher, createPRG, rotl } from './_arx.ts';\nimport { poly1305 } from './_poly1305.ts';\nimport {\n  type ARXCipher,\n  type CipherWithOutput,\n  type XorStream,\n  abytes,\n  clean,\n  equalBytes,\n  getOutput,\n  u64Lengths,\n  wrapCipher,\n} from './utils.ts';\n\n/**\n * ChaCha core function. It is implemented twice:\n * 1. Simple loop (chachaCore_small, hchacha_small)\n * 2. Unrolled loop (chachaCore, hchacha) - 4x faster, but larger & harder to read\n * The specific implementation is selected in `createCipher` below.\n */\n\n/** quarter-round */\n// prettier-ignore\nfunction chachaQR(x: Uint32Array, a: number, b: number, c: number, d: number) {\n  x[a] = (x[a] + x[b]) | 0; x[d] = rotl(x[d] ^ x[a], 16);\n  x[c] = (x[c] + x[d]) | 0; x[b] = rotl(x[b] ^ x[c], 12);\n  x[a] = (x[a] + x[b]) | 0; x[d] = rotl(x[d] ^ x[a], 8);\n  x[c] = (x[c] + x[d]) | 0; x[b] = rotl(x[b] ^ x[c], 7);\n}\n\n/** single round */\nfunction chachaRound(x: Uint32Array, rounds = 20) {\n  for (let r = 0; r < rounds; r += 2) {\n    chachaQR(x, 0, 4, 8, 12);\n    chachaQR(x, 1, 5, 9, 13);\n    chachaQR(x, 2, 6, 10, 14);\n    chachaQR(x, 3, 7, 11, 15);\n    chachaQR(x, 0, 5, 10, 15);\n    chachaQR(x, 1, 6, 11, 12);\n    chachaQR(x, 2, 7, 8, 13);\n    chachaQR(x, 3, 4, 9, 14);\n  }\n}\n\nconst ctmp = /* @__PURE__ */ new Uint32Array(16);\n\n/** Small version of chacha without loop unrolling. Unused, provided for auditability. */\n// prettier-ignore\nfunction chacha(\n  s: Uint32Array, k: Uint32Array, i: Uint32Array, out: Uint32Array,\n  isHChacha: boolean = true, rounds: number = 20\n): void {\n  // Create initial array using common pattern\n  const y = Uint32Array.from([\n    s[0], s[1], s[2], s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    k[0], k[1], k[2], k[3], // Key      Key     Key     Key\n    k[4], k[5], k[6], k[7], // Key      Key     Key     Key\n    i[0], i[1], i[2], i[3], // Counter  Counter Nonce   Nonce\n  ]);\n  const x = ctmp;\n  x.set(y);\n  chachaRound(x, rounds);\n\n  // hchacha extracts 8 specific bytes, chacha adds orig to result\n  if (isHChacha) {\n    const xindexes = [0, 1, 2, 3, 12, 13, 14, 15];\n    for (let i = 0; i < 8; i++) out[i] = x[xindexes[i]];\n  } else {\n    for (let i = 0; i < 16; i++) out[i] = (y[i] + x[i]) | 0;\n  }\n}\n\n/** Identical to `chachaCore`. Unused. */\n// @ts-ignore\nconst chachaCore_small: typeof chachaCore = (s, k, n, out, cnt, rounds) =>\n  chacha(s, k, Uint32Array.from([n[0], n[1], cnt, 0]), out, false, rounds);\n/** Identical to `hchacha`. Unused. */\n// @ts-ignore\nconst hchacha_small: typeof hchacha = chacha;\n\n/** Identical to `chachaCore_small`. Unused. */\n// prettier-ignore\nfunction chachaCore(\n  s: Uint32Array, k: Uint32Array, n: Uint32Array, out: Uint32Array, cnt: number, rounds = 20\n): void {\n  let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n      y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n      y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n      y12 = cnt,  y13 = n[0], y14 = n[1], y15 = n[2];  // Counter  Counter\tNonce   Nonce\n  // Save state to temporary variables\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  for (let r = 0; r < rounds; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  // Write output\n  let oi = 0;\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha hashes key and nonce into key' and nonce' for xchacha20.\n * Identical to `hchacha_small`.\n * Need to find a way to merge it with `chachaCore` without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(\n  s: Uint32Array, k: Uint32Array, i: Uint32Array, out: Uint32Array\n): void {\n  let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3],\n      x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3],\n      x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7],\n      x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n  for (let r = 0; r < 20; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  let oi = 0;\n  out[oi++] = x00; out[oi++] = x01;\n  out[oi++] = x02; out[oi++] = x03;\n  out[oi++] = x12; out[oi++] = x13;\n  out[oi++] = x14; out[oi++] = x15;\n}\n\n/** Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter. */\nexport const chacha20orig: XorStream = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With smaller nonce, it's not safe to make it random (CSPRNG), due to collision chance.\n */\nexport const chacha20: XorStream = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  allowShortKeys: false,\n});\n\n/**\n * XChaCha eXtended-nonce ChaCha. With 24-byte nonce, it's safe to make it random (CSPRNG).\n * See [IRTF draft](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha).\n */\nexport const xchacha20: XorStream = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  extendNonceFn: hchacha,\n  allowShortKeys: false,\n});\n\n/** Reduced 8-round chacha, described in original paper. */\nexport const chacha8: XorStream = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 8,\n});\n\n/** Reduced 12-round chacha, described in original paper. */\nexport const chacha12: XorStream = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 12,\n});\n\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h: ReturnType<typeof poly1305.create>, msg: Uint8Array) => {\n  h.update(msg);\n  const leftover = msg.length % 16;\n  if (leftover) h.update(ZEROS16.subarray(leftover));\n};\n\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(\n  fn: XorStream,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  ciphertext: Uint8Array,\n  AAD?: Uint8Array\n): Uint8Array {\n  if (AAD !== undefined) abytes(AAD, undefined, 'AAD');\n  const authKey = fn(key, nonce, ZEROS32);\n  const lengths = u64Lengths(ciphertext.length, AAD ? AAD.length : 0, true);\n\n  // Methods below can be replaced with\n  // return poly1305_computeTag_small(authKey, lengths, ciphertext, AAD)\n  const h = poly1305.create(authKey);\n  if (AAD) updatePadded(h, AAD);\n  updatePadded(h, ciphertext);\n  h.update(lengths);\n  const res = h.digest();\n  clean(authKey, lengths);\n  return res;\n}\n\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them, but it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead =\n  (xorStream: XorStream) =>\n  (key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): CipherWithOutput => {\n    const tagLength = 16;\n    return {\n      encrypt(plaintext: Uint8Array, output?: Uint8Array) {\n        const plength = plaintext.length;\n        output = getOutput(plength + tagLength, output, false);\n        output.set(plaintext);\n        const oPlain = output.subarray(0, -tagLength);\n        // Actual encryption\n        xorStream(key, nonce, oPlain, oPlain, 1);\n        const tag = computeTag(xorStream, key, nonce, oPlain, AAD);\n        output.set(tag, plength); // append tag\n        clean(tag);\n        return output;\n      },\n      decrypt(ciphertext: Uint8Array, output?: Uint8Array) {\n        output = getOutput(ciphertext.length - tagLength, output, false);\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = computeTag(xorStream, key, nonce, data, AAD);\n        if (!equalBytes(passedTag, tag)) throw new Error('invalid tag');\n        output.set(ciphertext.subarray(0, -tagLength));\n        // Actual decryption\n        xorStream(key, nonce, output, output, 1); // start stream with i=1\n        clean(tag);\n        return output;\n      },\n    };\n  };\n\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n *\n * Unsafe to use random nonces under the same key, due to collision chance.\n * Prefer XChaCha instead.\n */\nexport const chacha20poly1305: ARXCipher = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 12, tagLength: 16 },\n  _poly1305_aead(chacha20)\n);\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n *\n * Can be safely used with random nonces (CSPRNG).\n * See [IRTF draft](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha).\n */\nexport const xchacha20poly1305: ARXCipher = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 24, tagLength: 16 },\n  _poly1305_aead(xchacha20)\n);\n\n/**\n * Chacha20 CSPRNG (cryptographically secure pseudorandom number generator).\n * It's best to limit usage to non-production, non-critical cases: for example, test-only.\n * Compatible with libtomcrypt. It does not have a specification, so unclear how secure it is.\n */\nexport const rngChacha20: XorPRG = /* @__PURE__ */ createPRG(chacha20orig, 64, 32, 8);\n/**\n * Chacha20/8 CSPRNG (cryptographically secure pseudorandom number generator).\n * It's best to limit usage to non-production, non-critical cases: for example, test-only.\n * Faster than `rngChacha20`.\n */\nexport const rngChacha8: XorPRG = /* @__PURE__ */ createPRG(chacha8, 64, 32, 12);\n", "/**\n * HKDF (RFC 5869): extract + expand in one step.\n * See https://soatok.blog/2021/11/17/understanding-hkdf/.\n * @module\n */\nimport { hmac } from './hmac.ts';\nimport { abytes, ahash, anumber, type CHash, clean } from './utils.ts';\n\n/**\n * HKDF-extract from spec. Less important part. `HKDF-Extract(IKM, salt) -> PRK`\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n */\nexport function extract(hash: CHash, ikm: Uint8Array, salt?: Uint8Array): Uint8Array {\n  ahash(hash);\n  // NOTE: some libraries treat zero-length array as 'not provided';\n  // we don't, since we have undefined as 'not provided'\n  // https://github.com/RustCrypto/KDFs/issues/15\n  if (salt === undefined) salt = new Uint8Array(hash.outputLen);\n  return hmac(hash, salt, ikm);\n}\n\nconst HKDF_COUNTER = /* @__PURE__ */ Uint8Array.of(0);\nconst EMPTY_BUFFER = /* @__PURE__ */ Uint8Array.of();\n\n/**\n * HKDF-expand from the spec. The most important part. `HKDF-Expand(PRK, info, L) -> OKM`\n * @param hash - hash function that would be used (e.g. sha256)\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in bytes\n */\nexport function expand(\n  hash: CHash,\n  prk: Uint8Array,\n  info?: Uint8Array,\n  length: number = 32\n): Uint8Array {\n  ahash(hash);\n  anumber(length, 'length');\n  const olen = hash.outputLen;\n  if (length > 255 * olen) throw new Error('Length must be <= 255*HashLen');\n  const blocks = Math.ceil(length / olen);\n  if (info === undefined) info = EMPTY_BUFFER;\n  else abytes(info, undefined, 'info');\n  // first L(ength) octets of T\n  const okm = new Uint8Array(blocks * olen);\n  // Re-use HMAC instance between blocks\n  const HMAC = hmac.create(hash, prk);\n  const HMACTmp = HMAC._cloneInto();\n  const T = new Uint8Array(HMAC.outputLen);\n  for (let counter = 0; counter < blocks; counter++) {\n    HKDF_COUNTER[0] = counter + 1;\n    // T(0) = empty string (zero length)\n    // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n    HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n      .update(info)\n      .update(HKDF_COUNTER)\n      .digestInto(T);\n    okm.set(T, olen * counter);\n    HMAC._cloneInto(HMACTmp);\n  }\n  HMAC.destroy();\n  HMACTmp.destroy();\n  clean(T, HKDF_COUNTER);\n  return okm.slice(0, length);\n}\n\n/**\n * HKDF (RFC 5869): derive keys from an initial input.\n * Combines hkdf_extract + hkdf_expand in one step\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in bytes\n * @example\n * import { hkdf } from '@noble/hashes/hkdf';\n * import { sha256 } from '@noble/hashes/sha2';\n * import { randomBytes } from '@noble/hashes/utils';\n * const inputKey = randomBytes(32);\n * const salt = randomBytes(32);\n * const info = 'application-key';\n * const hk1 = hkdf(sha256, inputKey, salt, info, 32);\n */\nexport const hkdf = (\n  hash: CHash,\n  ikm: Uint8Array,\n  salt: Uint8Array | undefined,\n  info: Uint8Array | undefined,\n  length: number\n): Uint8Array => expand(hash, extract(hash, ikm, salt), info, length);\n", "import { chacha20poly1305 } from '@noble/ciphers/chacha.js'\nimport { x25519 } from '@noble/curves/ed25519.js'\nimport { extract, expand } from '@noble/hashes/hkdf.js'\nimport { sha256 } from '@noble/hashes/sha2.js'\nimport type { ICryptoInterface } from '../crypto.js'\nimport type { KeyPair } from '../types.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport const pureJsCrypto: ICryptoInterface = {\n  hashSHA256 (data: Uint8Array | Uint8ArrayList): Uint8Array {\n    return sha256(data.subarray())\n  },\n\n  getHKDF (ck: Uint8Array, ikm: Uint8Array): [Uint8Array, Uint8Array, Uint8Array] {\n    const prk = extract(sha256, ikm, ck)\n    const okmU8Array = expand(sha256, prk, undefined, 96)\n    const okm = okmU8Array\n\n    const k1 = okm.subarray(0, 32)\n    const k2 = okm.subarray(32, 64)\n    const k3 = okm.subarray(64, 96)\n\n    return [k1, k2, k3]\n  },\n\n  generateX25519KeyPair (): KeyPair {\n    const secretKey = x25519.utils.randomSecretKey()\n    const publicKey = x25519.getPublicKey(secretKey)\n\n    return {\n      publicKey,\n      privateKey: secretKey\n    }\n  },\n\n  generateX25519KeyPairFromSeed (seed: Uint8Array): KeyPair {\n    const publicKey = x25519.getPublicKey(seed)\n\n    return {\n      publicKey,\n      privateKey: seed\n    }\n  },\n\n  generateX25519SharedKey (privateKey: Uint8Array | Uint8ArrayList, publicKey: Uint8Array | Uint8ArrayList): Uint8Array {\n    return x25519.getSharedSecret(privateKey.subarray(), publicKey.subarray())\n  },\n\n  chaCha20Poly1305Encrypt (plaintext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array): Uint8Array {\n    return chacha20poly1305(k, nonce, ad).encrypt(plaintext.subarray())\n  },\n\n  chaCha20Poly1305Decrypt (ciphertext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array, dst?: Uint8Array): Uint8Array {\n    return chacha20poly1305(k, nonce, ad).decrypt(ciphertext.subarray(), dst)\n  }\n}\n", "import { pureJsCrypto } from './js.js'\n\nexport const defaultCrypto = pureJsCrypto\n", "import type { ICrypto, KeyPair } from './types.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/** Underlying crypto implementation, meant to be overridable */\nexport interface ICryptoInterface {\n  hashSHA256(data: Uint8Array | Uint8ArrayList): Uint8Array\n\n  getHKDF(ck: Uint8Array, ikm: Uint8Array): [Uint8Array, Uint8Array, Uint8Array]\n\n  generateX25519KeyPair(): KeyPair\n  generateX25519KeyPairFromSeed(seed: Uint8Array): KeyPair\n  generateX25519SharedKey(privateKey: Uint8Array | Uint8ArrayList, publicKey: Uint8Array | Uint8ArrayList): Uint8Array\n\n  chaCha20Poly1305Encrypt(plaintext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array): Uint8ArrayList | Uint8Array\n  chaCha20Poly1305Decrypt(ciphertext: Uint8Array | Uint8ArrayList, nonce: Uint8Array, ad: Uint8Array, k: Uint8Array, dst?: Uint8Array): Uint8ArrayList | Uint8Array\n}\n\nexport function wrapCrypto (crypto: ICryptoInterface): ICrypto {\n  return {\n    generateKeypair: crypto.generateX25519KeyPair,\n    dh: (keypair, publicKey) => crypto.generateX25519SharedKey(keypair.privateKey, publicKey).subarray(0, 32),\n    encrypt: crypto.chaCha20Poly1305Encrypt,\n    decrypt: crypto.chaCha20Poly1305Decrypt,\n    hash: crypto.hashSHA256,\n    hkdf: crypto.getHKDF\n  }\n}\n", "import { allocUnsafe as uint8ArrayAllocUnsafe } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport const uint16BEEncode = (value: number): Uint8Array => {\n  const target = uint8ArrayAllocUnsafe(2)\n  target[0] = value >> 8\n  target[1] = value\n  return target\n}\nuint16BEEncode.bytes = 2\n\nexport const uint16BEDecode = (data: Uint8Array | Uint8ArrayList): number => {\n  if (data.length < 2) { throw RangeError('Could not decode int16BE') }\n\n  if (data instanceof Uint8Array) {\n    let value = 0\n    value += data[0] << 8\n    value += data[1]\n    return value\n  }\n\n  return data.getUint16(0)\n}\nuint16BEDecode.bytes = 2\n", "import type { Counter, Metrics } from '@libp2p/interface'\n\nexport type MetricsRegistry = Record<string, Counter>\n\nexport function registerMetrics (metrics: Metrics): MetricsRegistry {\n  return {\n    xxHandshakeSuccesses: metrics.registerCounter(\n      'libp2p_noise_xxhandshake_successes_total', {\n        help: 'Total count of noise xxHandshakes successes_'\n      }),\n\n    xxHandshakeErrors: metrics.registerCounter(\n      'libp2p_noise_xxhandshake_error_total', {\n        help: 'Total count of noise xxHandshakes errors'\n      }),\n\n    encryptedPackets: metrics.registerCounter(\n      'libp2p_noise_encrypted_packets_total', {\n        help: 'Total count of noise encrypted packets successfully'\n      }),\n\n    decryptedPackets: metrics.registerCounter(\n      'libp2p_noise_decrypted_packets_total', {\n        help: 'Total count of noise decrypted packets'\n      }),\n\n    decryptErrors: metrics.registerCounter(\n      'libp2p_noise_decrypt_errors_total', {\n        help: 'Total count of noise decrypt errors'\n      })\n  }\n}\n", "import { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { DUMP_SESSION_KEYS } from './constants.js'\nimport type { CipherState } from './protocol.js'\nimport type { KeyPair } from './types.js'\nimport type { Logger } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport function logLocalStaticKeys (s: KeyPair | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (s) {\n    keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${uint8ArrayToString(s.publicKey, 'hex')}`)\n    keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${uint8ArrayToString(s.privateKey, 'hex')}`)\n  } else {\n    keyLogger('Missing local static keys.')\n  }\n}\n\nexport function logLocalEphemeralKeys (e: KeyPair | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (e) {\n    keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${uint8ArrayToString(e.publicKey, 'hex')}`)\n    keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${uint8ArrayToString(e.privateKey, 'hex')}`)\n  } else {\n    keyLogger('Missing local ephemeral keys.')\n  }\n}\n\nexport function logRemoteStaticKey (rs: Uint8Array | Uint8ArrayList | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (rs) {\n    keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${uint8ArrayToString(rs.subarray(), 'hex')}`)\n  } else {\n    keyLogger('Missing remote static public key.')\n  }\n}\n\nexport function logRemoteEphemeralKey (re: Uint8Array | Uint8ArrayList | undefined, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  if (re) {\n    keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${uint8ArrayToString(re.subarray(), 'hex')}`)\n  } else {\n    keyLogger('Missing remote ephemeral keys.')\n  }\n}\n\nexport function logCipherState (cs1: CipherState, cs2: CipherState, keyLogger: Logger): void {\n  if (!keyLogger.enabled || !DUMP_SESSION_KEYS) {\n    return\n  }\n\n  keyLogger(`CIPHER_STATE_1 ${cs1.n.getUint64()} ${cs1.k && uint8ArrayToString(cs1.k, 'hex')}`)\n  keyLogger(`CIPHER_STATE_2 ${cs2.n.getUint64()} ${cs2.k && uint8ArrayToString(cs2.k, 'hex')}`)\n}\n", "export class InvalidCryptoExchangeError extends Error {\n  public code: string\n\n  constructor (message = 'Invalid crypto exchange') {\n    super(message)\n    this.code = InvalidCryptoExchangeError.code\n  }\n\n  static readonly code = 'ERR_INVALID_CRYPTO_EXCHANGE'\n}\n", "import { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\n\nexport const MIN_NONCE = 0\n// For performance reasons, the nonce is represented as a JS `number`\n// Although JS `number` can safely represent integers up to 2 ** 53 - 1, we choose to only use\n// 4 bytes to store the data for performance reason.\n// This is a slight deviation from the noise spec, which describes the max nonce as 2 ** 64 - 2\n// The effect is that this implementation will need a new handshake to be performed after fewer messages are exchanged than other implementations with full uint64 nonces.\n// this MAX_NONCE is still a large number of messages, so the practical effect of this is negligible.\nexport const MAX_NONCE = 0xffffffff\n\nconst ERR_MAX_NONCE = 'Cipherstate has reached maximum n, a new handshake must be performed'\n\n/**\n * The nonce is an uint that's increased over time.\n * Maintaining different representations help improve performance.\n */\nexport class Nonce {\n  private n: number\n  private readonly bytes: Uint8Array\n  private readonly view: DataView\n\n  constructor (n = MIN_NONCE) {\n    this.n = n\n    this.bytes = uint8ArrayAlloc(12)\n    this.view = new DataView(this.bytes.buffer, this.bytes.byteOffset, this.bytes.byteLength)\n    this.view.setUint32(4, n, true)\n  }\n\n  increment (): void {\n    this.n++\n    // Even though we're treating the nonce as 8 bytes, RFC7539 specifies 12 bytes for a nonce.\n    this.view.setUint32(4, this.n, true)\n  }\n\n  getBytes (): Uint8Array {\n    return this.bytes\n  }\n\n  getUint64 (): number {\n    return this.n\n  }\n\n  assertValue (): void {\n    if (this.n > MAX_NONCE) {\n      throw new Error(ERR_MAX_NONCE)\n    }\n  }\n}\n", "import { Uint8ArrayList } from 'uint8arraylist'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport { InvalidCryptoExchangeError } from './errors.js'\nimport { Nonce } from './nonce.js'\nimport type { ICipherState, ISymmetricState, IHandshakeState, KeyPair, ICrypto } from './types.js'\n\n// Code in this file is a direct translation of a subset of the noise protocol https://noiseprotocol.org/noise.html,\n// agnostic to libp2p's usage of noise\n\nexport const ZEROLEN = uint8ArrayAlloc(0)\n\ninterface ICipherStateWithKey extends ICipherState {\n  k: Uint8Array\n}\n\nexport class CipherState implements ICipherState {\n  public k?: Uint8Array\n  public n: Nonce\n  private readonly crypto: ICrypto\n\n  constructor (crypto: ICrypto, k: Uint8Array | undefined = undefined, n = 0) {\n    this.crypto = crypto\n    this.k = k\n    this.n = new Nonce(n)\n  }\n\n  public hasKey (): this is ICipherStateWithKey {\n    return Boolean(this.k)\n  }\n\n  public encryptWithAd (ad: Uint8Array, plaintext: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    if (!this.hasKey()) {\n      return plaintext\n    }\n\n    this.n.assertValue()\n    const e = this.crypto.encrypt(plaintext, this.n.getBytes(), ad, this.k)\n    this.n.increment()\n\n    return e\n  }\n\n  public decryptWithAd (ad: Uint8Array, ciphertext: Uint8Array | Uint8ArrayList, dst?: Uint8Array): Uint8Array | Uint8ArrayList {\n    if (!this.hasKey()) {\n      return ciphertext\n    }\n\n    this.n.assertValue()\n    const plaintext = this.crypto.decrypt(ciphertext, this.n.getBytes(), ad, this.k, dst)\n    this.n.increment()\n\n    return plaintext\n  }\n}\n\nexport class SymmetricState implements ISymmetricState {\n  public cs: CipherState\n  public ck: Uint8Array\n  public h: Uint8Array\n  private readonly crypto: ICrypto\n\n  constructor (crypto: ICrypto, protocolName: string) {\n    this.crypto = crypto\n\n    const protocolNameBytes = uint8ArrayFromString(protocolName, 'utf-8')\n    this.h = hashProtocolName(crypto, protocolNameBytes)\n\n    this.ck = this.h\n    this.cs = new CipherState(crypto)\n  }\n\n  public mixKey (ikm: Uint8Array): void {\n    const [ck, tempK] = this.crypto.hkdf(this.ck, ikm)\n    this.ck = ck\n    this.cs = new CipherState(this.crypto, tempK)\n  }\n\n  public mixHash (data: Uint8Array | Uint8ArrayList): void {\n    this.h = this.crypto.hash(new Uint8ArrayList(this.h, data))\n  }\n\n  public encryptAndHash (plaintext: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const ciphertext = this.cs.encryptWithAd(this.h, plaintext)\n    this.mixHash(ciphertext)\n    return ciphertext\n  }\n\n  public decryptAndHash (ciphertext: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const plaintext = this.cs.decryptWithAd(this.h, ciphertext)\n    this.mixHash(ciphertext)\n    return plaintext\n  }\n\n  public split (): [CipherState, CipherState] {\n    const [tempK1, tempK2] = this.crypto.hkdf(this.ck, ZEROLEN)\n    return [new CipherState(this.crypto, tempK1), new CipherState(this.crypto, tempK2)]\n  }\n}\n\n// const MESSAGE_PATTERNS = ['e', 's', 'ee', 'es', 'se', 'ss'] as const\n// type MessagePattern = Array<typeof MESSAGE_PATTERNS[number]>\n\nexport interface HandshakeStateInit {\n  crypto: ICrypto\n  protocolName: string\n  initiator: boolean\n  prologue: Uint8Array\n  s?: KeyPair\n  e?: KeyPair\n  rs?: Uint8Array | Uint8ArrayList\n  re?: Uint8Array | Uint8ArrayList\n}\n\nexport abstract class AbstractHandshakeState implements IHandshakeState {\n  public ss: SymmetricState\n  public s?: KeyPair\n  public e?: KeyPair\n  public rs?: Uint8Array | Uint8ArrayList\n  public re?: Uint8Array | Uint8ArrayList\n  public initiator: boolean\n  protected readonly crypto: ICrypto\n\n  constructor (init: HandshakeStateInit) {\n    const { crypto, protocolName, prologue, initiator, s, e, rs, re } = init\n    this.crypto = crypto\n    this.ss = new SymmetricState(crypto, protocolName)\n    this.ss.mixHash(prologue)\n    this.initiator = initiator\n    this.s = s\n    this.e = e\n    this.rs = rs\n    this.re = re\n  }\n\n  protected writeE (): Uint8Array {\n    if (this.e) {\n      throw new Error('ephemeral keypair is already set')\n    }\n    const e = this.crypto.generateKeypair()\n    this.ss.mixHash(e.publicKey)\n    this.e = e\n    return e.publicKey\n  }\n\n  protected writeS (): Uint8Array | Uint8ArrayList {\n    if (!this.s) {\n      throw new Error('static keypair is not set')\n    }\n    return this.ss.encryptAndHash(this.s.publicKey)\n  }\n\n  protected writeEE (): void {\n    if (!this.e) {\n      throw new Error('ephemeral keypair is not set')\n    }\n    if (!this.re) {\n      throw new Error('remote ephemeral public key is not set')\n    }\n    this.ss.mixKey(this.crypto.dh(this.e, this.re))\n  }\n\n  protected writeES (): void {\n    if (this.initiator) {\n      if (!this.e) {\n        throw new Error('ephemeral keypair is not set')\n      }\n      if (!this.rs) {\n        throw new Error('remote static public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.e, this.rs))\n    } else {\n      if (!this.s) {\n        throw new Error('static keypair is not set')\n      }\n      if (!this.re) {\n        throw new Error('remote ephemeral public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.s, this.re))\n    }\n  }\n\n  protected writeSE (): void {\n    if (this.initiator) {\n      if (!this.s) {\n        throw new Error('static keypair is not set')\n      }\n      if (!this.re) {\n        throw new Error('remote ephemeral public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.s, this.re))\n    } else {\n      if (!this.e) {\n        throw new Error('ephemeral keypair is not set')\n      }\n      if (!this.rs) {\n        throw new Error('remote static public key is not set')\n      }\n      this.ss.mixKey(this.crypto.dh(this.e, this.rs))\n    }\n  }\n\n  protected readE (message: Uint8ArrayList, offset = 0): void {\n    if (this.re) {\n      throw new Error('remote ephemeral public key is already set')\n    }\n    if (message.byteLength < offset + 32) {\n      throw new Error('message is not long enough')\n    }\n    this.re = message.sublist(offset, offset + 32)\n    this.ss.mixHash(this.re)\n  }\n\n  protected readS (message: Uint8ArrayList, offset = 0): number {\n    if (this.rs) {\n      throw new Error('remote static public key is already set')\n    }\n    const cipherLength = 32 + (this.ss.cs.hasKey() ? 16 : 0)\n    if (message.byteLength < offset + cipherLength) {\n      throw new Error('message is not long enough')\n    }\n    const temp = message.sublist(offset, offset + cipherLength)\n    this.rs = this.ss.decryptAndHash(temp)\n    return cipherLength\n  }\n\n  protected readEE (): void {\n    this.writeEE()\n  }\n\n  protected readES (): void {\n    this.writeES()\n  }\n\n  protected readSE (): void {\n    this.writeSE()\n  }\n}\n\n/**\n * A IHandshakeState that's optimized for the XX pattern\n */\nexport class XXHandshakeState extends AbstractHandshakeState {\n  // e\n  writeMessageA (payload: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    return new Uint8ArrayList(this.writeE(), this.ss.encryptAndHash(payload))\n  }\n\n  // e, ee, s, es\n  writeMessageB (payload: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const e = this.writeE()\n    this.writeEE()\n    const encS = this.writeS()\n    this.writeES()\n\n    return new Uint8ArrayList(e, encS, this.ss.encryptAndHash(payload))\n  }\n\n  // s, se\n  writeMessageC (payload: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    const encS = this.writeS()\n    this.writeSE()\n\n    return new Uint8ArrayList(encS, this.ss.encryptAndHash(payload))\n  }\n\n  // e\n  readMessageA (message: Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    try {\n      this.readE(message)\n\n      return this.ss.decryptAndHash(message.sublist(32))\n    } catch (e) {\n      throw new InvalidCryptoExchangeError(`handshake stage 0 validation fail: ${(e as Error).message}`)\n    }\n  }\n\n  // e, ee, s, es\n  readMessageB (message: Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    try {\n      this.readE(message)\n      this.readEE()\n      const consumed = this.readS(message, 32)\n      this.readES()\n\n      return this.ss.decryptAndHash(message.sublist(32 + consumed))\n    } catch (e) {\n      throw new InvalidCryptoExchangeError(`handshake stage 1 validation fail: ${(e as Error).message}`)\n    }\n  }\n\n  // s, se\n  readMessageC (message: Uint8ArrayList): Uint8Array | Uint8ArrayList {\n    try {\n      const consumed = this.readS(message)\n      this.readSE()\n\n      return this.ss.decryptAndHash(message.sublist(consumed))\n    } catch (e) {\n      throw new InvalidCryptoExchangeError(`handshake stage 2 validation fail: ${(e as Error).message}`)\n    }\n  }\n}\n\nfunction hashProtocolName (crypto: ICrypto, protocolName: Uint8Array): Uint8Array {\n  if (protocolName.length <= 32) {\n    const h = uint8ArrayAlloc(32)\n    h.set(protocolName)\n    return h\n  } else {\n    return crypto.hash(protocolName)\n  }\n}\n", "import { decodeMessage, encodeMessage, MaxLengthError, message } from 'protons-runtime'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport type { Codec, DecodeOptions } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface NoiseExtensions {\n  webtransportCerthashes: Uint8Array[]\n  streamMuxers: string[]\n}\n\nexport namespace NoiseExtensions {\n  let _codec: Codec<NoiseExtensions>\n\n  export const codec = (): Codec<NoiseExtensions> => {\n    if (_codec == null) {\n      _codec = message<NoiseExtensions>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.webtransportCerthashes != null) {\n          for (const value of obj.webtransportCerthashes) {\n            w.uint32(10)\n            w.bytes(value)\n          }\n        }\n\n        if (obj.streamMuxers != null) {\n          for (const value of obj.streamMuxers) {\n            w.uint32(18)\n            w.string(value)\n          }\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length, opts = {}) => {\n        const obj: any = {\n          webtransportCerthashes: [],\n          streamMuxers: []\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              if (opts.limits?.webtransportCerthashes != null && obj.webtransportCerthashes.length === opts.limits.webtransportCerthashes) {\n                throw new MaxLengthError('Decode error - map field \"webtransportCerthashes\" had too many elements')\n              }\n\n              obj.webtransportCerthashes.push(reader.bytes())\n              break\n            }\n            case 2: {\n              if (opts.limits?.streamMuxers != null && obj.streamMuxers.length === opts.limits.streamMuxers) {\n                throw new MaxLengthError('Decode error - map field \"streamMuxers\" had too many elements')\n              }\n\n              obj.streamMuxers.push(reader.string())\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<NoiseExtensions>): Uint8Array => {\n    return encodeMessage(obj, NoiseExtensions.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList, opts?: DecodeOptions<NoiseExtensions>): NoiseExtensions => {\n    return decodeMessage(buf, NoiseExtensions.codec(), opts)\n  }\n}\n\nexport interface NoiseHandshakePayload {\n  identityKey: Uint8Array\n  identitySig: Uint8Array\n  extensions?: NoiseExtensions\n}\n\nexport namespace NoiseHandshakePayload {\n  let _codec: Codec<NoiseHandshakePayload>\n\n  export const codec = (): Codec<NoiseHandshakePayload> => {\n    if (_codec == null) {\n      _codec = message<NoiseHandshakePayload>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if ((obj.identityKey != null && obj.identityKey.byteLength > 0)) {\n          w.uint32(10)\n          w.bytes(obj.identityKey)\n        }\n\n        if ((obj.identitySig != null && obj.identitySig.byteLength > 0)) {\n          w.uint32(18)\n          w.bytes(obj.identitySig)\n        }\n\n        if (obj.extensions != null) {\n          w.uint32(34)\n          NoiseExtensions.codec().encode(obj.extensions, w)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length, opts = {}) => {\n        const obj: any = {\n          identityKey: uint8ArrayAlloc(0),\n          identitySig: uint8ArrayAlloc(0)\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1: {\n              obj.identityKey = reader.bytes()\n              break\n            }\n            case 2: {\n              obj.identitySig = reader.bytes()\n              break\n            }\n            case 4: {\n              obj.extensions = NoiseExtensions.codec().decode(reader, reader.uint32(), {\n                limits: opts.limits?.extensions\n              })\n              break\n            }\n            default: {\n              reader.skipType(tag & 7)\n              break\n            }\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<NoiseHandshakePayload>): Uint8Array => {\n    return encodeMessage(obj, NoiseHandshakePayload.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList, opts?: DecodeOptions<NoiseHandshakePayload>): NoiseHandshakePayload => {\n    return decodeMessage(buf, NoiseHandshakePayload.codec(), opts)\n  }\n}\n", "import { publicKeyFromProtobuf, publicKeyToProtobuf } from '@libp2p/crypto/keys'\nimport { StreamMessageEvent, UnexpectedPeerError } from '@libp2p/interface'\nimport { AbstractMessageStream, LengthPrefixedDecoder } from '@libp2p/utils'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { CHACHA_TAG_LENGTH, NOISE_MSG_MAX_LENGTH_BYTES, NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG } from './constants.ts'\nimport { uint16BEEncode, uint16BEDecode } from './encoder.ts'\nimport { NoiseHandshakePayload } from './proto/payload.js'\nimport type { MetricsRegistry } from './metrics.ts'\nimport type { NoiseExtensions } from './proto/payload.js'\nimport type { HandshakeResult } from './types.ts'\nimport type { AbortOptions, MessageStream, PrivateKey, PublicKey, StreamCloseEvent } from '@libp2p/interface'\nimport type { SendResult } from '@libp2p/utils'\n\nexport async function createHandshakePayload (\n  privateKey: PrivateKey,\n  staticPublicKey: Uint8Array | Uint8ArrayList,\n  extensions?: NoiseExtensions\n): Promise<Uint8Array | Uint8ArrayList> {\n  const identitySig = await privateKey.sign(getSignaturePayload(staticPublicKey))\n\n  return NoiseHandshakePayload.encode({\n    identityKey: publicKeyToProtobuf(privateKey.publicKey),\n    identitySig,\n    extensions\n  })\n}\n\nexport async function decodeHandshakePayload (\n  payloadBytes: Uint8Array | Uint8ArrayList,\n  remoteStaticKey?: Uint8Array | Uint8ArrayList,\n  remoteIdentityKey?: PublicKey\n): Promise<NoiseHandshakePayload> {\n  try {\n    const payload = NoiseHandshakePayload.decode(payloadBytes)\n    const publicKey = publicKeyFromProtobuf(payload.identityKey)\n\n    if (remoteIdentityKey?.equals(publicKey) === false) {\n      throw new Error(`Payload identity key ${publicKey} does not match expected remote identity key ${remoteIdentityKey}`)\n    }\n\n    if (!remoteStaticKey) {\n      throw new Error('Remote static does not exist')\n    }\n\n    const signaturePayload = getSignaturePayload(remoteStaticKey)\n\n    if (!(await publicKey.verify(signaturePayload, payload.identitySig))) {\n      throw new Error('Invalid payload signature')\n    }\n\n    return payload\n  } catch (e) {\n    throw new UnexpectedPeerError((e as Error).message)\n  }\n}\n\nexport function getSignaturePayload (publicKey: Uint8Array | Uint8ArrayList): Uint8Array | Uint8ArrayList {\n  const prefix = uint8ArrayFromString('noise-libp2p-static-key:')\n\n  if (publicKey instanceof Uint8Array) {\n    return uint8ArrayConcat([prefix, publicKey], prefix.length + publicKey.length)\n  }\n\n  publicKey.prepend(prefix)\n\n  return publicKey\n}\n\nclass EncryptedMessageStream extends AbstractMessageStream {\n  private stream: MessageStream\n  private handshake: HandshakeResult\n  private metrics?: MetricsRegistry\n  private decoder: LengthPrefixedDecoder\n\n  constructor (stream: MessageStream, handshake: HandshakeResult, metrics?: MetricsRegistry) {\n    super({\n      log: stream.log,\n      inactivityTimeout: stream.inactivityTimeout,\n      maxReadBufferLength: stream.maxReadBufferLength,\n      direction: stream.direction\n    })\n\n    this.stream = stream\n    this.handshake = handshake\n    this.metrics = metrics\n    this.decoder = new LengthPrefixedDecoder({\n      lengthDecoder: uint16BEDecode,\n      maxBufferSize: 16 * 1024 * 1024,\n      encodingLength: () => 2\n    })\n\n    const noiseOnMessageDecrypt = (evt: StreamMessageEvent): void => {\n      try {\n        for (const buf of this.decoder.decode(evt.data)) {\n          this.onData(this.decrypt(buf))\n        }\n      } catch (err: any) {\n        this.abort(err)\n      }\n    }\n    this.stream.addEventListener('message', noiseOnMessageDecrypt)\n\n    const noiseOnClose = (evt: StreamCloseEvent): void => {\n      if (evt.error != null) {\n        if (evt.local === true) {\n          this.abort(evt.error)\n        } else {\n          this.onRemoteReset()\n        }\n      } else {\n        this.onTransportClosed()\n      }\n    }\n    this.stream.addEventListener('close', noiseOnClose)\n\n    const noiseOnDrain = (): void => {\n      this.safeDispatchEvent('drain')\n    }\n    this.stream.addEventListener('drain', noiseOnDrain)\n\n    const noiseOnRemoteCloseWrite = (): void => {\n      this.onRemoteCloseWrite()\n    }\n    this.stream.addEventListener('remoteCloseWrite', noiseOnRemoteCloseWrite)\n  }\n\n  encrypt (chunk: Uint8Array | Uint8ArrayList): Uint8ArrayList {\n    const output = new Uint8ArrayList()\n\n    for (let i = 0; i < chunk.byteLength; i += NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG) {\n      let end = i + NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG\n      if (end > chunk.byteLength) {\n        end = chunk.byteLength\n      }\n\n      let data: Uint8Array | Uint8ArrayList\n\n      if (chunk instanceof Uint8Array) {\n        data = this.handshake.encrypt(chunk.subarray(i, end))\n      } else {\n        data = this.handshake.encrypt(chunk.sublist(i, end))\n      }\n\n      this.metrics?.encryptedPackets.increment()\n\n      output.append(uint16BEEncode(data.byteLength))\n      output.append(data)\n    }\n\n    return output\n  }\n\n  decrypt (chunk: Uint8Array | Uint8ArrayList): Uint8ArrayList {\n    const output = new Uint8ArrayList()\n\n    for (let i = 0; i < chunk.byteLength; i += NOISE_MSG_MAX_LENGTH_BYTES) {\n      let end = i + NOISE_MSG_MAX_LENGTH_BYTES\n      if (end > chunk.byteLength) {\n        end = chunk.byteLength\n      }\n\n      if (end - CHACHA_TAG_LENGTH < i) {\n        throw new Error('Invalid chunk')\n      }\n\n      let encrypted: Uint8Array | Uint8ArrayList\n\n      if (chunk instanceof Uint8Array) {\n        encrypted = chunk.subarray(i, end)\n      } else {\n        encrypted = chunk.sublist(i, end)\n      }\n\n      // memory allocation is not cheap so reuse the encrypted Uint8Array\n      // see https://github.com/ChainSafe/js-libp2p-noise/pull/242#issue-1422126164\n      // this is ok because chacha20 reads bytes one by one and don't reread after that\n      // it's also tested in https://github.com/ChainSafe/as-chacha20poly1305/pull/1/files#diff-25252846b58979dcaf4e41d47b3eadd7e4f335e7fb98da6c049b1f9cd011f381R48\n      const dst = chunk.subarray(i, end - CHACHA_TAG_LENGTH)\n      try {\n        const plaintext = this.handshake.decrypt(encrypted, dst)\n        this.metrics?.decryptedPackets.increment()\n\n        output.append(plaintext)\n      } catch (e) {\n        this.metrics?.decryptErrors.increment()\n        throw e\n      }\n    }\n\n    return output\n  }\n\n  close (options?: AbortOptions): Promise<void> {\n    return this.stream.close(options)\n  }\n\n  sendPause (): void {\n    this.stream.pause()\n  }\n\n  sendResume (): void {\n    this.stream.resume()\n  }\n\n  sendReset (err: Error): void {\n    this.stream.abort(err)\n  }\n\n  sendData (data: Uint8ArrayList): SendResult {\n    return {\n      sentBytes: data.byteLength,\n      canSendMore: this.stream.send(this.encrypt(data))\n    }\n  }\n}\n\nexport function toMessageStream (connection: MessageStream, handshake: HandshakeResult, metrics?: MetricsRegistry): MessageStream {\n  return new EncryptedMessageStream(connection, handshake, metrics)\n}\n", "import {\n  logLocalStaticKeys,\n  logLocalEphemeralKeys,\n  logRemoteEphemeralKey,\n  logRemoteStaticKey,\n  logCipherState\n} from './logger.js'\nimport { ZEROLEN, XXHandshakeState } from './protocol.js'\nimport { createHandshakePayload, decodeHandshakePayload } from './utils.js'\nimport type { HandshakeResult, HandshakeParams } from './types.js'\nimport type { AbortOptions } from '@libp2p/interface'\n\nexport async function performHandshakeInitiator (init: HandshakeParams, options?: AbortOptions): Promise<HandshakeResult> {\n  const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init\n\n  const payload = await createHandshakePayload(privateKey, s.publicKey, extensions)\n  const xx = new XXHandshakeState({\n    crypto,\n    protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n    initiator: true,\n    prologue,\n    s\n  })\n\n  logLocalStaticKeys(xx.s, log)\n  log.trace('Stage 0 - Initiator starting to send first message.')\n  await connection.write(xx.writeMessageA(ZEROLEN), options)\n  log.trace('Stage 0 - Initiator finished sending first message.')\n  logLocalEphemeralKeys(xx.e, log)\n\n  log.trace('Stage 1 - Initiator waiting to receive first message from responder...')\n  const plaintext = xx.readMessageB(await connection.read(options))\n  log.trace('Stage 1 - Initiator received the message.')\n  logRemoteEphemeralKey(xx.re, log)\n  logRemoteStaticKey(xx.rs, log)\n\n  log.trace(\"Initiator going to check remote's signature...\")\n  const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey)\n  log.trace('All good with the signature!')\n\n  log.trace('Stage 2 - Initiator sending third handshake message.')\n  await connection.write(xx.writeMessageC(payload), options)\n  log.trace('Stage 2 - Initiator sent message with signed payload.')\n\n  const [cs1, cs2] = xx.ss.split()\n  logCipherState(cs1, cs2, log)\n\n  return {\n    payload: receivedPayload,\n    encrypt: (plaintext) => cs1.encryptWithAd(ZEROLEN, plaintext),\n    decrypt: (ciphertext, dst) => cs2.decryptWithAd(ZEROLEN, ciphertext, dst)\n  }\n}\n\nexport async function performHandshakeResponder (init: HandshakeParams, options?: AbortOptions): Promise<HandshakeResult> {\n  const { log, connection, crypto, privateKey, prologue, s, remoteIdentityKey, extensions } = init\n\n  const payload = await createHandshakePayload(privateKey, s.publicKey, extensions)\n  const xx = new XXHandshakeState({\n    crypto,\n    protocolName: 'Noise_XX_25519_ChaChaPoly_SHA256',\n    initiator: false,\n    prologue,\n    s\n  })\n\n  logLocalStaticKeys(xx.s, log)\n  log.trace('Stage 0 - Responder waiting to receive first message.')\n  xx.readMessageA(await connection.read(options))\n  log.trace('Stage 0 - Responder received first message.')\n  logRemoteEphemeralKey(xx.re, log)\n\n  log.trace('Stage 1 - Responder sending out first message with signed payload and static key.')\n  await connection.write(xx.writeMessageB(payload), options)\n  log.trace('Stage 1 - Responder sent the second handshake message with signed payload.')\n  logLocalEphemeralKeys(xx.e, log)\n\n  log.trace('Stage 2 - Responder waiting for third handshake message...')\n  const plaintext = xx.readMessageC(await connection.read(options))\n  log.trace('Stage 2 - Responder received the message, finished handshake.')\n  const receivedPayload = await decodeHandshakePayload(plaintext, xx.rs, remoteIdentityKey)\n\n  const [cs1, cs2] = xx.ss.split()\n  logCipherState(cs1, cs2, log)\n\n  return {\n    payload: receivedPayload,\n    encrypt: (plaintext) => cs2.encryptWithAd(ZEROLEN, plaintext),\n    decrypt: (ciphertext, dst) => cs1.decryptWithAd(ZEROLEN, ciphertext, dst)\n  }\n}\n", "import { publicKeyFromProtobuf } from '@libp2p/crypto/keys'\nimport { InvalidCryptoExchangeError, serviceCapabilities } from '@libp2p/interface'\nimport { peerIdFromPublicKey } from '@libp2p/peer-id'\nimport { lpStream } from '@libp2p/utils'\nimport { alloc as uint8ArrayAlloc } from 'uint8arrays/alloc'\nimport { NOISE_MSG_MAX_LENGTH_BYTES } from './constants.js'\nimport { defaultCrypto } from './crypto/index.js'\nimport { wrapCrypto } from './crypto.js'\nimport { uint16BEDecode, uint16BEEncode } from './encoder.js'\nimport { registerMetrics } from './metrics.js'\nimport { performHandshakeInitiator, performHandshakeResponder } from './performHandshake.js'\nimport { toMessageStream } from './utils.ts'\nimport type { ICryptoInterface } from './crypto.js'\nimport type { NoiseComponents } from './index.js'\nimport type { MetricsRegistry } from './metrics.js'\nimport type { HandshakeResult, ICrypto, INoiseConnection, INoiseExtensions, KeyPair } from './types.js'\nimport type { SecuredConnection, PrivateKey, PublicKey, StreamMuxerFactory, SecureConnectionOptions, Logger, MessageStream } from '@libp2p/interface'\nimport type { LengthPrefixedStream } from '@libp2p/utils'\n\nexport interface NoiseExtensions {\n  webtransportCerthashes: Uint8Array[]\n}\n\nexport interface NoiseInit {\n  /**\n   * x25519 private key, reuse for faster handshakes\n   */\n  staticNoiseKey?: Uint8Array\n  extensions?: Partial<NoiseExtensions>\n  crypto?: ICryptoInterface\n  prologueBytes?: Uint8Array\n}\n\nexport class Noise implements INoiseConnection {\n  public protocol = '/noise'\n  public crypto: ICrypto\n\n  private readonly prologue: Uint8Array\n  private readonly staticKey: KeyPair\n  private readonly extensions?: NoiseExtensions\n  private readonly metrics?: MetricsRegistry\n  private readonly components: NoiseComponents\n  private readonly log: Logger\n\n  constructor (components: NoiseComponents, init: NoiseInit = {}) {\n    const { staticNoiseKey, extensions, crypto, prologueBytes } = init\n    const { metrics } = components\n\n    this.components = components\n    this.log = components.logger.forComponent('libp2p:noise')\n    const _crypto = crypto ?? defaultCrypto\n    this.crypto = wrapCrypto(_crypto)\n    this.extensions = {\n      webtransportCerthashes: [],\n      ...extensions\n    }\n    this.metrics = metrics ? registerMetrics(metrics) : undefined\n\n    if (staticNoiseKey) {\n      // accepts x25519 private key of length 32\n      this.staticKey = _crypto.generateX25519KeyPairFromSeed(staticNoiseKey)\n    } else {\n      this.staticKey = _crypto.generateX25519KeyPair()\n    }\n    this.prologue = prologueBytes ?? uint8ArrayAlloc(0)\n  }\n\n  readonly [Symbol.toStringTag] = '@chainsafe/libp2p-noise'\n\n  readonly [serviceCapabilities]: string[] = [\n    '@libp2p/connection-encryption',\n    '@chainsafe/libp2p-noise'\n  ]\n\n  /**\n   * Encrypt outgoing data to the remote party (handshake as initiator)\n   *\n   * @param connection - streaming iterable duplex that will be encrypted\n   * @param options\n   * @param options.remotePeer - PeerId of the remote peer. Used to validate the integrity of the remote peer\n   * @param options.signal - Used to abort the operation\n   */\n  async secureOutbound (connection: MessageStream, options?: SecureConnectionOptions): Promise<SecuredConnection<INoiseExtensions>> {\n    const log = connection.log?.newScope('noise') ?? this.log\n    const wrappedConnection = lpStream(connection, {\n      lengthEncoder: uint16BEEncode,\n      lengthDecoder: uint16BEDecode,\n      maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n    })\n\n    const handshake = await this.performHandshakeInitiator(\n      wrappedConnection,\n      this.components.privateKey,\n      log,\n      options?.remotePeer?.publicKey,\n      options\n    )\n    const publicKey = publicKeyFromProtobuf(handshake.payload.identityKey)\n\n    return {\n      connection: toMessageStream(wrappedConnection.unwrap(), handshake, this.metrics),\n      remoteExtensions: handshake.payload.extensions,\n      remotePeer: peerIdFromPublicKey(publicKey),\n      streamMuxer: options?.skipStreamMuxerNegotiation === true ? undefined : this.getStreamMuxer(handshake.payload.extensions?.streamMuxers)\n    }\n  }\n\n  private getStreamMuxer (protocols?: string[]): StreamMuxerFactory | undefined {\n    if (protocols == null || protocols.length === 0) {\n      return\n    }\n\n    const streamMuxers = this.components.upgrader.getStreamMuxers()\n\n    if (streamMuxers != null) {\n      for (const protocol of protocols) {\n        const streamMuxer = streamMuxers.get(protocol)\n\n        if (streamMuxer != null) {\n          return streamMuxer\n        }\n      }\n    }\n\n    if (protocols.length) {\n      throw new InvalidCryptoExchangeError('Early muxer negotiation was requested but the initiator and responder had no common muxers')\n    }\n  }\n\n  /**\n   * Decrypt incoming data (handshake as responder).\n   *\n   * @param connection - streaming iterable duplex that will be encrypted\n   * @param options\n   * @param options.remotePeer - PeerId of the remote peer. Used to validate the integrity of the remote peer\n   * @param options.signal - Used to abort the operation\n   */\n  async secureInbound (connection: MessageStream, options?: SecureConnectionOptions): Promise<SecuredConnection<INoiseExtensions>> {\n    const log = connection.log?.newScope('noise') ?? this.log\n    const wrappedConnection = lpStream(connection, {\n      lengthEncoder: uint16BEEncode,\n      lengthDecoder: uint16BEDecode,\n      maxDataLength: NOISE_MSG_MAX_LENGTH_BYTES\n    })\n\n    const handshake = await this.performHandshakeResponder(\n      wrappedConnection,\n      this.components.privateKey,\n      log,\n      options?.remotePeer?.publicKey,\n      options\n    )\n    const publicKey = publicKeyFromProtobuf(handshake.payload.identityKey)\n\n    return {\n      connection: toMessageStream(wrappedConnection.unwrap(), handshake, this.metrics),\n      remoteExtensions: handshake.payload.extensions,\n      remotePeer: peerIdFromPublicKey(publicKey),\n      streamMuxer: options?.skipStreamMuxerNegotiation === true ? undefined : this.getStreamMuxer(handshake.payload.extensions?.streamMuxers)\n    }\n  }\n\n  /**\n   * Perform XX handshake as initiator.\n   */\n  private async performHandshakeInitiator (\n    connection: LengthPrefixedStream,\n    // TODO: pass private key in noise constructor via Components\n    privateKey: PrivateKey,\n    log: Logger,\n    remoteIdentityKey?: PublicKey,\n    options?: SecureConnectionOptions\n  ): Promise<HandshakeResult> {\n    let result: HandshakeResult\n    const streamMuxers = options?.skipStreamMuxerNegotiation === true ? [] : [...this.components.upgrader.getStreamMuxers().keys()]\n\n    try {\n      result = await performHandshakeInitiator({\n        connection,\n        privateKey,\n        remoteIdentityKey,\n        log: log.newScope('xxhandshake'),\n        crypto: this.crypto,\n        prologue: this.prologue,\n        s: this.staticKey,\n        extensions: {\n          streamMuxers,\n          webtransportCerthashes: [],\n          ...this.extensions\n        }\n      }, options)\n      this.metrics?.xxHandshakeSuccesses.increment()\n    } catch (e: unknown) {\n      this.metrics?.xxHandshakeErrors.increment()\n      throw e\n    }\n\n    return result\n  }\n\n  /**\n   * Perform XX handshake as responder.\n   */\n  private async performHandshakeResponder (\n    connection: LengthPrefixedStream,\n    privateKey: PrivateKey,\n    log: Logger,\n    remoteIdentityKey?: PublicKey,\n    options?: SecureConnectionOptions\n  ): Promise<HandshakeResult> {\n    let result: HandshakeResult\n    const streamMuxers = options?.skipStreamMuxerNegotiation === true ? [] : [...this.components.upgrader.getStreamMuxers().keys()]\n\n    try {\n      result = await performHandshakeResponder({\n        connection,\n        privateKey,\n        remoteIdentityKey,\n        log: log.newScope('xxhandshake'),\n        crypto: this.crypto,\n        prologue: this.prologue,\n        s: this.staticKey,\n        extensions: {\n          streamMuxers,\n          webtransportCerthashes: [],\n          ...this.extensions\n        }\n      }, options)\n      this.metrics?.xxHandshakeSuccesses.increment()\n    } catch (e: unknown) {\n      this.metrics?.xxHandshakeErrors.increment()\n      throw e\n    }\n\n    return result\n  }\n}\n", "/**\n * @packageDocumentation\n *\n * This repository contains TypeScript implementation of noise protocol, an encryption protocol used in libp2p.\n *\n * ## Usage\n *\n * Install with `yarn add @chainsafe/libp2p-noise` or `npm i @chainsafe/libp2p-noise`.\n *\n * Example of using default noise configuration and passing it to the libp2p config:\n *\n * ```ts\n * import {createLibp2p} from \"libp2p\"\n * import {noise} from \"@chainsafe/libp2p-noise\"\n *\n * //custom noise configuration, pass it instead of `noise()`\n * //x25519 private key\n * const n = noise({ staticNoiseKey });\n *\n * const libp2p = await createLibp2p({\n *   connectionEncrypters: [noise()],\n *   //... other options\n * })\n * ```\n *\n * See the [NoiseInit](https://github.com/ChainSafe/js-libp2p-noise/blob/master/src/noise.ts#L22-L30) interface for noise configuration options.\n *\n * ## API\n *\n * This module exposes an implementation of the [ConnectionEncrypter](https://libp2p.github.io/js-libp2p/interfaces/_libp2p_interface.ConnectionEncrypter.html) interface.\n *\n * ## Bring your own crypto\n *\n * You can provide a custom crypto implementation (instead of the default, based on [@noble](https://paulmillr.com/noble/)) by adding a `crypto` field to the init argument passed to the `Noise` factory.\n *\n * The implementation must conform to the `ICryptoInterface`, defined in <https://github.com/ChainSafe/js-libp2p-noise/blob/master/src/crypto.ts>\n */\n\nimport { Noise } from './noise.js'\nimport type { NoiseInit, NoiseExtensions } from './noise.js'\nimport type { KeyPair } from './types.js'\nimport type { ComponentLogger, ConnectionEncrypter, Metrics, PeerId, PrivateKey, Upgrader } from '@libp2p/interface'\n\nexport { pureJsCrypto } from './crypto/js.js'\nexport type { ICryptoInterface } from './crypto.js'\nexport type { NoiseInit, NoiseExtensions, KeyPair }\n\nexport interface NoiseComponents {\n  peerId: PeerId\n  privateKey: PrivateKey\n  logger: ComponentLogger\n  upgrader: Upgrader\n  metrics?: Metrics\n}\n\nexport function noise (init: NoiseInit = {}): (components: NoiseComponents) => ConnectionEncrypter<NoiseExtensions> {\n  return (components: NoiseComponents) => new Noise(components, init)\n}\n", "import { InvalidParametersError } from '@libp2p/interface'\nimport { getNetConfig } from '@libp2p/utils'\nimport { CODE_CERTHASH, multiaddr } from '@multiformats/multiaddr'\nimport { base64url } from 'multiformats/bases/base64'\nimport { bases, digest } from 'multiformats/basics'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { MAX_MESSAGE_SIZE } from '../../constants.js'\nimport { InvalidFingerprintError, UnsupportedHashAlgorithmError } from '../../error.js'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\n/**\n * Get base2 | identity decoders\n */\n// @ts-expect-error - Not easy to combine these types.\nexport const multibaseDecoder: any = Object.values(bases).map(b => b.decoder).reduce((d, b) => d.or(b))\n\nconst fingerprintRegex = /^a=fingerprint:(?:\\w+-[0-9]+)\\s(?<fingerprint>(:?[0-9a-fA-F]{2})+)$/m\nexport function getFingerprintFromSdp (sdp: string | undefined): string | undefined {\n  if (sdp == null) {\n    return undefined\n  }\n\n  const searchResult = sdp.match(fingerprintRegex)\n  return searchResult?.groups?.fingerprint\n}\n\n// Extract the certhash from a multiaddr\nexport function certhash (ma: Multiaddr): string {\n  const components = ma.getComponents()\n  const certhash = components.find(c => c.code === CODE_CERTHASH)?.value\n\n  if (certhash === undefined || certhash === '') {\n    throw new InvalidParametersError(`Couldn't find a certhash component of multiaddr: ${ma.toString()}`)\n  }\n\n  return certhash\n}\n\n/**\n * Convert a certhash into a multihash\n */\nexport function decodeCerthash (certhash: string): MultihashDigest {\n  return digest.decode(multibaseDecoder.decode(certhash))\n}\n\nexport function certhashToFingerprint (certhash: string): string {\n  const multibaseDecoded = decodeCerthash(certhash)\n\n  return new Array(multibaseDecoded.bytes.length)\n    .fill(0)\n    .map((val, index) => {\n      return multibaseDecoded.digest[index].toString(16).padStart(2, '0').toUpperCase()\n    })\n    .join(':')\n}\n\n/**\n * Extract the fingerprint from a multiaddr\n */\nexport function ma2Fingerprint (ma: Multiaddr): string {\n  const multihashDecoded = decodeCerthash(certhash(ma))\n  const prefix = toSupportedHashFunction(multihashDecoded.code)\n  const fingerprint = multihashDecoded.digest.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '')\n  const sdp = fingerprint.match(/.{1,2}/g)\n\n  if (sdp == null) {\n    throw new InvalidFingerprintError(fingerprint, ma.toString())\n  }\n\n  return `${prefix} ${sdp.join(':').toUpperCase()}`\n}\n\nexport function fingerprint2Ma (fingerprint: string): Multiaddr {\n  const output = fingerprint.split(':').map(str => parseInt(str, 16))\n  const encoded = Uint8Array.from(output)\n  const digest = Digest.create(sha256.code, encoded)\n\n  return multiaddr(`/certhash/${base64url.encode(digest.bytes)}`)\n}\n\n/**\n * Normalize the hash name from a given multihash has name\n */\nexport function toSupportedHashFunction (code: number): 'sha-1' | 'sha-256' | 'sha-512' {\n  switch (code) {\n    case 0x11:\n      return 'sha-1'\n    case 0x12:\n      return 'sha-256'\n    case 0x13:\n      return 'sha-512'\n    default:\n      throw new UnsupportedHashAlgorithmError(code)\n  }\n}\n\n/**\n * Create an answer SDP message from a multiaddr - the server always operates in\n * ice-lite mode and DTLS active mode.\n */\nexport function serverAnswerFromMultiaddr (ma: Multiaddr, ufrag: string): RTCSessionDescriptionInit {\n  const { host, port, type } = getNetConfig(ma)\n\n  if (type !== 'ip4' && type !== 'ip6') {\n    throw new InvalidParametersError(`Multiaddr ${ma} was not an IPv4 or IPv6 address`)\n  }\n\n  const fingerprint = ma2Fingerprint(ma)\n  const sdp = `v=0\no=- 0 0 IN IP${type === 'ip4' ? 4 : 6} ${host}\ns=-\nt=0 0\na=ice-lite\nm=application ${port} UDP/DTLS/SCTP webrtc-datachannel\nc=IN IP${type === 'ip4' ? 4 : 6} ${host}\na=mid:0\na=ice-options:ice2\na=ice-ufrag:${ufrag}\na=ice-pwd:${ufrag}\na=fingerprint:${fingerprint}\na=setup:passive\na=sctp-port:5000\na=max-message-size:${MAX_MESSAGE_SIZE}\na=candidate:1467250027 1 UDP 1467250027 ${host} ${port} typ host\na=end-of-candidates\n`\n\n  return {\n    type: 'answer',\n    sdp\n  }\n}\n\n/**\n * Create an offer SDP message from a multiaddr\n */\nexport function clientOfferFromMultiAddr (ma: Multiaddr, ufrag: string): RTCSessionDescriptionInit {\n  const { host, port, type } = getNetConfig(ma)\n\n  if (type !== 'ip4' && type !== 'ip6') {\n    throw new InvalidParametersError(`Multiaddr ${ma} was not an IPv4 or IPv6 address`)\n  }\n\n  const sdp = `v=0\no=- 0 0 IN IP${type === 'ip4' ? 4 : 6} ${host}\ns=-\nc=IN IP${type === 'ip4' ? 4 : 6} ${host}\nt=0 0\na=ice-options:ice2,trickle\nm=application ${port} UDP/DTLS/SCTP webrtc-datachannel\na=mid:0\na=setup:active\na=ice-ufrag:${ufrag}\na=ice-pwd:${ufrag}\na=fingerprint:sha-256 00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00\na=sctp-port:5000\na=max-message-size:${MAX_MESSAGE_SIZE}\na=candidate:1467250027 1 UDP 1467250027 ${host} ${port} typ host\na=end-of-candidates\n`\n\n  return {\n    type: 'offer',\n    sdp\n  }\n}\n\n/**\n * Replace (munge) the ufrag and password values in a SDP\n */\nexport function munge (desc: RTCSessionDescriptionInit, ufrag: string): RTCSessionDescriptionInit {\n  if (desc.sdp === undefined) {\n    throw new InvalidParametersError(\"Can't munge a missing SDP\")\n  }\n\n  const lineBreak = desc.sdp.includes('\\r\\n') ? '\\r\\n' : '\\n'\n\n  try {\n    desc.sdp = desc.sdp\n      .replace(/\\na=ice-ufrag:[^\\n]*\\n/, '\\na=ice-ufrag:' + ufrag + lineBreak)\n      .replace(/\\na=ice-pwd:[^\\n]*\\n/, '\\na=ice-pwd:' + ufrag + lineBreak)\n  } catch {\n    // fails under Node.js\n  }\n\n  return desc\n}\n", "import * as Digest from 'multiformats/hashes/digest'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { concat } from 'uint8arrays/concat'\nimport { fromString as uint8arrayFromString } from 'uint8arrays/from-string'\nimport * as sdp from './sdp.js'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nconst PREFIX = uint8arrayFromString('libp2p-webrtc-noise:')\n\n/**\n * Generate a noise prologue from the peer connection's certificate.\n * noise prologue = bytes('libp2p-webrtc-noise:') + noise-server fingerprint + noise-client fingerprint\n */\nexport function generateNoisePrologue (localFingerprint: string, remoteAddr: Multiaddr, role: 'client' | 'server'): Uint8Array {\n  const localFpString = localFingerprint.trim().toLowerCase().replaceAll(':', '')\n  const localFpArray = uint8arrayFromString(localFpString, 'hex')\n  const local = Digest.create(sha256.code, localFpArray)\n  const remote: Uint8Array = sdp.multibaseDecoder.decode(sdp.certhash(remoteAddr))\n  const byteLength = PREFIX.byteLength + local.bytes.byteLength + remote.byteLength\n\n  if (role === 'server') {\n    return concat([PREFIX, remote, local.bytes], byteLength)\n  }\n\n  return concat([PREFIX, local.bytes, remote], byteLength)\n}\n", "import { noise } from '@chainsafe/libp2p-noise'\nimport { pEvent } from 'p-event'\nimport { WebRTCTransportError } from '../../error.js'\nimport { DataChannelMuxerFactory } from '../../muxer.js'\nimport { toMultiaddrConnection } from '../../rtcpeerconnection-to-conn.ts'\nimport { createStream } from '../../stream.js'\nimport { isFirefox } from '../../util.js'\nimport { generateNoisePrologue } from './generate-noise-prologue.js'\nimport * as sdp from './sdp.js'\nimport type { DirectRTCPeerConnection } from './get-rtcpeerconnection.js'\nimport type { DataChannelOptions } from '../../index.js'\nimport type { ComponentLogger, Connection, CounterGroup, Logger, PeerId, PrivateKey, Upgrader } from '@libp2p/interface'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface ConnectOptions {\n  log: Logger\n  logger: ComponentLogger\n  events?: CounterGroup\n  remoteAddr: Multiaddr\n  role: 'client' | 'server'\n  dataChannel?: DataChannelOptions\n  upgrader: Upgrader\n  peerId: PeerId\n  remotePeer?: PeerId\n  signal: AbortSignal\n  privateKey: PrivateKey\n}\n\nexport interface ClientOptions extends ConnectOptions {\n  role: 'client'\n}\n\nexport interface ServerOptions extends ConnectOptions {\n  role: 'server'\n}\n\nconst CONNECTION_STATE_CHANGE_EVENT = isFirefox ? 'iceconnectionstatechange' : 'connectionstatechange'\n\nfunction isServer (options: ClientOptions | ServerOptions, peerConnection: any): peerConnection is DirectRTCPeerConnection {\n  return options.role === 'server'\n}\n\nexport async function connect (peerConnection: RTCPeerConnection, muxerFactory: DataChannelMuxerFactory, ufrag: string, options: ClientOptions): Promise<Connection>\nexport async function connect (peerConnection: DirectRTCPeerConnection, muxerFactory: DataChannelMuxerFactory, ufrag: string, options: ServerOptions): Promise<void>\nexport async function connect (peerConnection: RTCPeerConnection | DirectRTCPeerConnection, muxerFactory: DataChannelMuxerFactory, ufrag: string, options: ClientOptions | ServerOptions): Promise<any> {\n  // create data channel for running the noise handshake. Once the data\n  // channel is opened, the listener will initiate the noise handshake. This\n  // is used to confirm the identity of the peer.\n  const handshakeDataChannel = peerConnection.createDataChannel('', { negotiated: true, id: 0 })\n\n  try {\n    if (options.role === 'client') {\n      // the client has to set the local offer before the remote answer\n\n      // Create offer and munge sdp with ufrag == pwd. This allows the remote to\n      // respond to STUN messages without performing an actual SDP exchange.\n      // This is because it can infer the passwd field by reading the USERNAME\n      // attribute of the STUN message.\n      options.log.trace('client creating local offer')\n      const offerSdp = await peerConnection.createOffer()\n      options.log.trace('client created local offer %s', offerSdp.sdp)\n      const mungedOfferSdp = sdp.munge(offerSdp, ufrag)\n      options.log.trace('client setting local offer %s', mungedOfferSdp.sdp)\n      await peerConnection.setLocalDescription(mungedOfferSdp)\n\n      const answerSdp = sdp.serverAnswerFromMultiaddr(options.remoteAddr, ufrag)\n      options.log.trace('client setting server description %s', answerSdp.sdp)\n      await peerConnection.setRemoteDescription(answerSdp)\n    } else {\n      // the server has to set the remote offer before the local answer\n      const offerSdp = sdp.clientOfferFromMultiAddr(options.remoteAddr, ufrag)\n      options.log.trace('server setting client %s %s', offerSdp.type, offerSdp.sdp)\n      await peerConnection.setRemoteDescription(offerSdp)\n\n      // Create offer and munge sdp with ufrag == pwd. This allows the remote to\n      // respond to STUN messages without performing an actual SDP exchange.\n      // This is because it can infer the passwd field by reading the USERNAME\n      // attribute of the STUN message.\n      options.log.trace('server creating local answer')\n      const answerSdp = await peerConnection.createAnswer()\n      options.log.trace('server created local answer')\n      const mungedAnswerSdp = sdp.munge(answerSdp, ufrag)\n      options.log.trace('server setting local description %s', answerSdp.sdp)\n      await peerConnection.setLocalDescription(mungedAnswerSdp)\n    }\n\n    if (handshakeDataChannel.readyState !== 'open') {\n      options.log.trace('%s wait for handshake channel to open, starting status %s', options.role, handshakeDataChannel.readyState)\n      await pEvent(handshakeDataChannel, 'open', options)\n    }\n\n    options.log.trace('%s handshake channel opened', options.role)\n\n    if (isServer(options, peerConnection)) {\n      // now that the connection has been opened, add the remote's certhash to\n      // it's multiaddr so we can complete the noise handshake\n      const remoteFingerprint = peerConnection.remoteFingerprint()?.value ?? ''\n      options.remoteAddr = options.remoteAddr.encapsulate(sdp.fingerprint2Ma(remoteFingerprint))\n    }\n\n    // Do noise handshake.\n    // Set the Noise Prologue to libp2p-webrtc-noise:<FINGERPRINTS> before\n    // starting the actual Noise handshake.\n    // <FINGERPRINTS> is the concatenation of the of the two TLS fingerprints\n    // of A (responder) and B (initiator) in their byte representation.\n    const localFingerprint = sdp.getFingerprintFromSdp(peerConnection.localDescription?.sdp)\n\n    if (localFingerprint == null) {\n      throw new WebRTCTransportError('Could not get fingerprint from local description sdp')\n    }\n\n    options.log.trace('%s performing noise handshake', options.role)\n    const noisePrologue = generateNoisePrologue(localFingerprint, options.remoteAddr, options.role)\n\n    // Since we use the default crypto interface and do not use a static key\n    // or early data, we pass in undefined for these parameters.\n    const connectionEncrypter = noise({ prologueBytes: noisePrologue })(options)\n\n    const handshakeStream = createStream({\n      channel: handshakeDataChannel,\n      direction: 'outbound',\n      isHandshake: true,\n      log: options.log,\n      ...(options.dataChannel ?? {})\n    })\n\n    // Creating the connection before completion of the noise\n    // handshake ensures that the stream opening callback is set up\n    const maConn = toMultiaddrConnection({\n      // @ts-expect-error types are broken\n      peerConnection,\n      remoteAddr: options.remoteAddr,\n      metrics: options.events,\n      direction: options.role === 'client' ? 'outbound' : 'inbound',\n      log: options.logger.forComponent('libp2p:webrtc-direct:connection')\n    })\n\n    peerConnection.addEventListener(CONNECTION_STATE_CHANGE_EVENT, () => {\n      switch (peerConnection.connectionState) {\n        case 'failed':\n        case 'disconnected':\n        case 'closed':\n          maConn.close().catch((err) => {\n            options.log.error('error closing connection - %e', err)\n            maConn.abort(err)\n          })\n          break\n        default:\n          break\n      }\n    })\n\n    // Track opened peer connection\n    options.events?.increment({ peer_connection: true })\n\n    if (options.role === 'client') {\n      // For outbound connections, the remote is expected to start the noise\n      // handshake. Therefore, we need to secure an inbound noise connection\n      // from the server.\n      options.log.trace('%s secure inbound', options.role)\n      const result = await connectionEncrypter.secureInbound(handshakeStream, {\n        remotePeer: options.remotePeer,\n        signal: options.signal,\n        skipStreamMuxerNegotiation: true\n      })\n\n      options.log.trace('%s upgrade outbound', options.role)\n      return await options.upgrader.upgradeOutbound(maConn, {\n        skipProtection: true,\n        skipEncryption: true,\n        remotePeer: result.remotePeer,\n        muxerFactory,\n        signal: options.signal\n      })\n    }\n\n    // For inbound connections, the server is are expected to start the noise\n    // handshake. Therefore, we need to secure an outbound noise connection from\n    // the client.\n    options.log.trace('%s secure outbound', options.role)\n    const result = await connectionEncrypter.secureOutbound(handshakeStream, {\n      remotePeer: options.remotePeer,\n      signal: options.signal,\n      skipStreamMuxerNegotiation: true\n    })\n\n    maConn.remoteAddr = maConn.remoteAddr.encapsulate(`/p2p/${result.remotePeer}`)\n\n    options.log.trace('%s upgrade inbound', options.role)\n\n    await options.upgrader.upgradeInbound(maConn, {\n      skipProtection: true,\n      skipEncryption: true,\n      remotePeer: result.remotePeer,\n      muxerFactory,\n      signal: options.signal\n    })\n  } catch (err) {\n    handshakeDataChannel.close()\n    peerConnection.close()\n\n    throw err\n  }\n}\n", "import { DataChannelMuxerFactory } from '../../muxer.ts'\nimport type { CreateDialerRTCPeerConnectionOptions } from './get-rtcpeerconnection.ts'\n\nexport async function createDialerRTCPeerConnection (role: 'client' | 'server', ufrag: string, options: CreateDialerRTCPeerConnectionOptions = {}): Promise<{ peerConnection: RTCPeerConnection, muxerFactory: DataChannelMuxerFactory }> {\n  // @ts-expect-error options type is wrong\n  let certificate: RTCCertificate = options.certificate\n\n  if (certificate == null) {\n    // ECDSA is preferred over RSA here. From our testing we find that P-256 elliptic\n    // curve is supported by Pion, webrtc-rs, as well as Chromium (P-228 and P-384\n    // was not supported in Chromium). We use the same hash function as found in the\n    // multiaddr if it is supported.\n    certificate = await RTCPeerConnection.generateCertificate({\n      name: 'ECDSA',\n\n      // @ts-expect-error missing from lib.dom.d.ts but required by chrome\n      namedCurve: 'P-256'\n      // hash: sdp.toSupportedHashFunction(hashName)\n    })\n  }\n\n  const rtcConfig = typeof options.rtcConfiguration === 'function' ? await options.rtcConfiguration() : options.rtcConfiguration\n\n  const peerConnection = new RTCPeerConnection({\n    ...(rtcConfig ?? {}),\n    certificates: [certificate]\n  })\n\n  const muxerFactory = new DataChannelMuxerFactory({\n    peerConnection,\n    metrics: options.events,\n    dataChannelOptions: options.dataChannel\n  })\n\n  return {\n    peerConnection,\n    muxerFactory\n  }\n}\n", "import { privateKeyToCryptoKeyPair } from '@libp2p/crypto/keys'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport type { PrivateKey } from '@libp2p/interface'\n\nexport function toBuffer (uint8Array: Uint8Array): Buffer {\n  return Buffer.from(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength)\n}\n\nexport async function formatAsPem (privateKey: PrivateKey): Promise<string> {\n  const keyPair = await privateKeyToCryptoKeyPair(privateKey)\n  const exported = await crypto.subtle.exportKey('pkcs8', keyPair.privateKey)\n\n  return [\n    '-----BEGIN PRIVATE KEY-----',\n    ...uint8ArrayToString(new Uint8Array(exported), 'base64pad').split(/(.{64})/).filter(Boolean),\n    '-----END PRIVATE KEY-----'\n  ].join('\\n')\n}\n", "import { generateKeyPair, privateKeyToCryptoKeyPair } from '@libp2p/crypto/keys'\nimport { InvalidParametersError, NotFoundError, NotStartedError, serviceCapabilities, transportSymbol } from '@libp2p/interface'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport { CODE_P2P } from '@multiformats/multiaddr'\nimport { WebRTCDirect } from '@multiformats/multiaddr-matcher'\nimport { BasicConstraintsExtension, X509Certificate, X509CertificateGenerator } from '@peculiar/x509'\nimport { Key } from 'interface-datastore'\nimport { TypedEventEmitter } from 'main-event'\nimport { base64url } from 'multiformats/bases/base64'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { DEFAULT_CERTIFICATE_DATASTORE_KEY, DEFAULT_CERTIFICATE_LIFESPAN, DEFAULT_CERTIFICATE_PRIVATE_KEY_NAME, DEFAULT_CERTIFICATE_RENEWAL_THRESHOLD } from '../constants.js'\nimport { genUfrag } from '../util.js'\nimport { WebRTCDirectListener } from './listener.js'\nimport { connect } from './utils/connect.js'\nimport { createDialerRTCPeerConnection } from './utils/get-rtcpeerconnection.js'\nimport { formatAsPem } from './utils/pem.js'\nimport type { DataChannelOptions, TransportCertificate } from '../index.js'\nimport type { WebRTCDialEvents } from '../private-to-private/transport.js'\nimport type { CreateListenerOptions, Transport, Listener, ComponentLogger, Logger, Connection, CounterGroup, Metrics, PeerId, DialTransportOptions, PrivateKey, Upgrader, Startable } from '@libp2p/interface'\nimport type { TransportManager } from '@libp2p/interface-internal'\nimport type { Keychain } from '@libp2p/keychain'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { Datastore } from 'interface-datastore'\nimport type { TypedEventTarget } from 'main-event'\n\nexport interface WebRTCDirectTransportComponents {\n  peerId: PeerId\n  privateKey: PrivateKey\n  metrics?: Metrics\n  logger: ComponentLogger\n  transportManager: TransportManager\n  upgrader: Upgrader\n  keychain?: Keychain\n  datastore: Datastore\n}\n\nexport interface WebRTCMetrics {\n  dialerEvents: CounterGroup\n}\n\nexport interface WebRTCTransportDirectInit {\n  /**\n   * The default configuration used by all created RTCPeerConnections\n   */\n  rtcConfiguration?: RTCConfiguration | (() => RTCConfiguration | Promise<RTCConfiguration>)\n\n  /**\n   * The default configuration used by all created RTCDataChannels\n   */\n  dataChannel?: DataChannelOptions\n\n  /**\n   * Use an existing TLS certificate to secure incoming connections or supply\n   * settings to generate one.\n   *\n   * This must be an ECDSA certificate using the P-256 curve.\n   *\n   * From our testing we find that P-256 elliptic curve is supported by Pion,\n   * webrtc-rs, as well as Chromium (P-228 and P-384 was not supported in\n   * Chromium).\n   */\n  certificate?: TransportCertificate\n\n  /**\n   * The key the certificate is stored in the datastore under\n   *\n   * @default '/libp2p/webrtc-direct/certificate'\n   */\n  certificateDatastoreKey?: string\n\n  /**\n   * The name the certificate private key is stored in the keychain with\n   *\n   * @default 'webrtc-direct-certificate-private-key'\n   */\n  certificateKeychainName?: string\n\n  /**\n   * Number of ms a certificate should be valid for (defaults to 14 days)\n   *\n   * @default 2_592_000_000\n   */\n  certificateLifespan?: number\n\n  /**\n   * Certificates will be renewed this many ms before expiry (defaults to 1 day)\n   *\n   * @default 86_400_000\n   */\n  certificateRenewalThreshold?: number\n}\n\nexport interface WebRTCDirectTransportCertificateEvents {\n  'certificate:renew': CustomEvent<TransportCertificate>\n}\n\nexport class WebRTCDirectTransport implements Transport, Startable {\n  private readonly log: Logger\n  private readonly metrics?: WebRTCMetrics\n  private readonly components: WebRTCDirectTransportComponents\n  private readonly init: WebRTCTransportDirectInit\n  private certificate?: TransportCertificate\n  private privateKey?: PrivateKey\n  private readonly emitter: TypedEventTarget<WebRTCDirectTransportCertificateEvents>\n  private renewCertificateTask?: ReturnType<typeof setTimeout>\n\n  constructor (components: WebRTCDirectTransportComponents, init: WebRTCTransportDirectInit = {}) {\n    this.log = components.logger.forComponent('libp2p:webrtc-direct')\n    this.components = components\n    this.init = init\n    this.emitter = new TypedEventEmitter()\n\n    if (init.certificateLifespan != null && init.certificateRenewalThreshold != null && init.certificateRenewalThreshold >= init.certificateLifespan) {\n      throw new InvalidParametersError('Certificate renewal threshold must be less than certificate lifespan')\n    }\n\n    if (components.metrics != null) {\n      this.metrics = {\n        dialerEvents: components.metrics.registerCounterGroup('libp2p_webrtc-direct_dialer_events_total', {\n          label: 'event',\n          help: 'Total count of WebRTC-direct dial events by type'\n        })\n      }\n    }\n  }\n\n  readonly [transportSymbol] = true\n\n  readonly [Symbol.toStringTag] = '@libp2p/webrtc-direct'\n\n  readonly [serviceCapabilities]: string[] = [\n    '@libp2p/transport'\n  ]\n\n  async start (): Promise<void> {\n    this.certificate = await this.getCertificate()\n  }\n\n  async stop (): Promise<void> {\n    if (this.renewCertificateTask != null) {\n      clearTimeout(this.renewCertificateTask)\n    }\n\n    this.certificate = undefined\n  }\n\n  /**\n   * Dial a given multiaddr\n   */\n  async dial (ma: Multiaddr, options: DialTransportOptions<WebRTCDialEvents>): Promise<Connection> {\n    this.log('dial %a', ma)\n    // do not create RTCPeerConnection if the signal has already been aborted\n    options.signal.throwIfAborted()\n\n    let theirPeerId: PeerId | undefined\n    const remotePeerString = ma.getComponents().findLast(c => c.code === CODE_P2P)?.value\n    if (remotePeerString != null) {\n      theirPeerId = peerIdFromString(remotePeerString)\n    }\n\n    const ufrag = genUfrag()\n\n    // https://github.com/libp2p/specs/blob/master/webrtc/webrtc-direct.md#browser-to-public-server\n    const {\n      peerConnection,\n      muxerFactory\n    } = await createDialerRTCPeerConnection('client', ufrag, {\n      rtcConfiguration: typeof this.init.rtcConfiguration === 'function' ? await this.init.rtcConfiguration() : this.init.rtcConfiguration ?? {},\n      dataChannel: this.init.dataChannel\n    })\n\n    try {\n      return await connect(peerConnection, muxerFactory, ufrag, {\n        role: 'client',\n        log: this.log,\n        logger: this.components.logger,\n        events: this.metrics?.dialerEvents,\n        signal: options.signal,\n        remoteAddr: ma,\n        dataChannel: this.init.dataChannel,\n        upgrader: options.upgrader,\n        peerId: this.components.peerId,\n        remotePeer: theirPeerId,\n        privateKey: this.components.privateKey\n      })\n    } catch (err) {\n      peerConnection.close()\n      throw err\n    }\n  }\n\n  /**\n   * Create a transport listener - this will throw in browsers\n   */\n  createListener (options: CreateListenerOptions): Listener {\n    if (this.certificate == null) {\n      throw new NotStartedError()\n    }\n\n    return new WebRTCDirectListener(this.components, {\n      ...this.init,\n      ...options,\n      certificate: this.certificate,\n      emitter: this.emitter\n    })\n  }\n\n  /**\n   * Filter check for all Multiaddrs that this transport can listen on\n   */\n  listenFilter (multiaddrs: Multiaddr[]): Multiaddr[] {\n    return multiaddrs.filter(WebRTCDirect.exactMatch)\n  }\n\n  /**\n   * Filter check for all Multiaddrs that this transport can dial\n   */\n  dialFilter (multiaddrs: Multiaddr[]): Multiaddr[] {\n    return this.listenFilter(multiaddrs)\n  }\n\n  private async getCertificate (forceRenew?: boolean): Promise<TransportCertificate> {\n    if (isTransportCertificate(this.init.certificate)) {\n      this.log('using provided TLS certificate')\n      return this.init.certificate\n    }\n\n    const privateKey = await this.loadOrCreatePrivateKey()\n    const { pem, certhash } = await this.loadOrCreateCertificate(privateKey, forceRenew)\n\n    return {\n      privateKey: await formatAsPem(privateKey),\n      pem,\n      certhash\n    }\n  }\n\n  private async loadOrCreatePrivateKey (): Promise<PrivateKey> {\n    if (this.privateKey != null) {\n      return this.privateKey\n    }\n\n    const keychainName = this.init.certificateKeychainName ?? DEFAULT_CERTIFICATE_PRIVATE_KEY_NAME\n    const keychain = this.getKeychain()\n\n    try {\n      if (keychain == null) {\n        this.log('no keychain configured - not checking for stored private key')\n        throw new NotFoundError()\n      }\n\n      this.log.trace('checking for stored private key')\n      this.privateKey = await keychain.exportKey(keychainName)\n    } catch (err: any) {\n      if (err.name !== 'NotFoundError') {\n        throw err\n      }\n\n      this.log.trace('generating private key')\n      this.privateKey = await generateKeyPair('ECDSA', 'P-256')\n\n      if (keychain != null) {\n        this.log.trace('storing private key')\n        await keychain.importKey(keychainName, this.privateKey)\n      } else {\n        this.log('no keychain configured - not storing private key')\n      }\n    }\n\n    return this.privateKey\n  }\n\n  private async loadOrCreateCertificate (privateKey: PrivateKey, forceRenew?: boolean): Promise<{ pem: string, certhash: string }> {\n    if (this.certificate != null && forceRenew !== true) {\n      return this.certificate\n    }\n\n    let cert: X509Certificate\n    const dsKey = new Key(this.init.certificateDatastoreKey ?? DEFAULT_CERTIFICATE_DATASTORE_KEY)\n    const keyPair = await privateKeyToCryptoKeyPair(privateKey)\n\n    try {\n      if (forceRenew === true) {\n        this.log.trace('forcing renewal of TLS certificate')\n        throw new NotFoundError()\n      }\n\n      this.log.trace('checking for stored TLS certificate')\n      cert = await this.loadCertificate(dsKey, keyPair)\n    } catch (err: any) {\n      if (err.name !== 'NotFoundError') {\n        throw err\n      }\n\n      this.log.trace('generating new TLS certificate')\n      cert = await this.createCertificate(dsKey, keyPair)\n    }\n\n    // set timeout to renew certificate\n    let renewTime = (cert.notAfter.getTime() - (this.init.certificateRenewalThreshold ?? DEFAULT_CERTIFICATE_RENEWAL_THRESHOLD)) - Date.now()\n\n    if (renewTime < 0) {\n      renewTime = 100\n    }\n\n    this.log('will renew TLS certificate after %d ms', renewTime)\n\n    this.renewCertificateTask = setTimeout(() => {\n      this.log('renewing TLS certificate')\n      this.getCertificate(true)\n        .then(cert => {\n          this.certificate = cert\n          this.emitter.safeDispatchEvent('certificate:renew', {\n            detail: cert\n          })\n        })\n        .catch(err => {\n          this.log.error('could not renew certificate - %e', err)\n        })\n    }, renewTime)\n\n    return {\n      pem: cert.toString('pem'),\n      certhash: base64url.encode((await sha256.digest(new Uint8Array(cert.rawData))).bytes)\n    }\n  }\n\n  async loadCertificate (dsKey: Key, keyPair: CryptoKeyPair): Promise<X509Certificate> {\n    const buf = await this.components.datastore.get(dsKey)\n    const cert = new X509Certificate(buf)\n\n    // check expiry date\n    const expiryTime = cert.notAfter.getTime() - (this.init.certificateRenewalThreshold ?? DEFAULT_CERTIFICATE_RENEWAL_THRESHOLD)\n\n    if (Date.now() > expiryTime) {\n      this.log('stored TLS certificate has expired')\n      // act as if no certificate was present\n      throw new NotFoundError()\n    }\n\n    this.log('loaded certificate, expires in %d ms', expiryTime)\n\n    // check public keys match\n    const exportedCertKey = await cert.publicKey.export(crypto)\n    const rawCertKey = await crypto.subtle.exportKey('raw', exportedCertKey)\n    const rawKeyPairKey = await crypto.subtle.exportKey('raw', keyPair.publicKey)\n\n    if (!uint8ArrayEquals(\n      new Uint8Array(rawCertKey, 0, rawCertKey.byteLength),\n      new Uint8Array(rawKeyPairKey, 0, rawKeyPairKey.byteLength)\n    )) {\n      this.log('stored TLS certificate public key did not match public key from private key')\n      throw new NotFoundError()\n    }\n\n    this.log('loaded certificate, expiry time is %o', expiryTime)\n\n    return cert\n  }\n\n  async createCertificate (dsKey: Key, keyPair: CryptoKeyPair): Promise<X509Certificate> {\n    const notBefore = new Date()\n    const notAfter = new Date(Date.now() + (this.init.certificateLifespan ?? DEFAULT_CERTIFICATE_LIFESPAN))\n\n    // have to set ms to 0 to work around https://github.com/PeculiarVentures/x509/issues/73\n    notBefore.setMilliseconds(0)\n    notAfter.setMilliseconds(0)\n\n    const cert = await X509CertificateGenerator.createSelfSigned({\n      serialNumber: (BigInt(Math.random().toString().replace('.', '')) * 100000n).toString(16),\n      name: 'CN=example.com, C=US, L=CA, O=example, ST=CA',\n      notBefore,\n      notAfter,\n      keys: keyPair,\n      extensions: [\n        new BasicConstraintsExtension(false, undefined, true)\n      ]\n    }, crypto)\n\n    if (this.getKeychain() != null) {\n      this.log.trace('storing TLS certificate')\n      await this.components.datastore.put(dsKey, uint8ArrayFromString(cert.toString('pem')))\n    } else {\n      this.log('no keychain is configured so not storing TLS certificate since the private key will not be reused')\n    }\n\n    return cert\n  }\n\n  private getKeychain (): Keychain | undefined {\n    try {\n      return this.components.keychain\n    } catch {}\n  }\n}\n\nfunction isTransportCertificate (obj?: any): obj is TransportCertificate {\n  if (obj == null) {\n    return false\n  }\n\n  return typeof obj.privateKey === 'string' && typeof obj.pem === 'string' && typeof obj.certhash === 'string'\n}\n"],
  "mappings": "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",
  "names": ["require_Reflect", "__commonJSMin", "Reflect", "factory", "root", "sloppyModeThis", "exporter", "makeExporter", "target", "previous", "key", "value", "functionThis", "indirectEvalThis", "hasOwn", "supportsSymbol", "toPrimitiveSymbol", "iteratorSymbol", "supportsCreate", "supportsProto", "downLevel", "HashMap", "MakeDictionary", "map", "functionPrototype", "_Map", "CreateMapPolyfill", "_Set", "CreateSetPolyfill", "_WeakMap", "CreateWeakMapPolyfill", "registrySymbol", "metadataRegistry", "GetOrCreateMetadataRegistry", "metadataProvider", "CreateMetadataProvider", "decorate", "decorators", "propertyKey", "attributes", "IsUndefined", "IsArray", "IsConstructor", "DecorateConstructor", "IsObject", "IsNull", "ToPropertyKey", "DecorateProperty", "metadata", "metadataKey", "metadataValue", "decorator", "IsPropertyKey", "OrdinaryDefineOwnMetadata", "defineMetadata", "hasMetadata", "OrdinaryHasMetadata", "hasOwnMetadata", "OrdinaryHasOwnMetadata", "getMetadata", "OrdinaryGetMetadata", "getOwnMetadata", "OrdinaryGetOwnMetadata", "getMetadataKeys", "OrdinaryMetadataKeys", "getOwnMetadataKeys", "OrdinaryOwnMetadataKeys", "deleteMetadata", "provider", "GetMetadataProvider", "i", "decorated", "descriptor", "MetadataKey", "O", "P", "parent", "OrdinaryGetPrototypeOf", "ToBoolean", "MetadataValue", "ownKeys", "parentKeys", "set", "keys", "_i", "ownKeys_1", "hasKey", "_a", "parentKeys_1", "Type", "x", "IsSymbol", "ToPrimitive", "input", "PreferredType", "hint", "exoticToPrim", "GetMethod", "result", "OrdinaryToPrimitive", "toString_1", "IsCallable", "valueOf", "toString_2", "argument", "ToString", "SameValueZero", "y", "V", "func", "GetIterator", "obj", "method", "iterator", "IteratorValue", "iterResult", "IteratorStep", "IteratorClose", "f", "proto", "prototype", "prototypeProto", "constructor", "CreateMetadataRegistry", "fallback", "CreateFallbackProvider", "first", "second", "rest", "targetProviderMap", "registry", "registerProvider", "getProvider", "setProvider", "getProviderNoCache", "next", "providerMap", "hasProvider", "existingProvider", "targetMetadata", "OrdinaryDeleteMetadata", "GetOrCreateMetadataMap", "Create", "createdTargetMetadata", "metadataMap", "keysObj", "k", "nextValue", "e", "reflect", "metadataOwner", "metadataPropertySet", "registeredProvider", "cacheSentinel", "arraySentinel", "MapIterator", "values", "selector", "index", "error", "Map", "size", "getKey", "getValue", "getEntry", "insert", "_", "Set", "UUID_SIZE", "rootKey", "CreateUniqueKey", "WeakMap", "table", "GetOrCreateWeakMapTable", "CreateUUID", "create", "FillRandomBytes", "buffer", "GenRandomBytes", "array", "data", "offset", "byte", "require_build", "__commonJSMin", "exports", "ARRAY_BUFFER_NAME", "BufferSourceConverter", "_BufferSourceConverter", "data", "type", "a", "b", "aView", "bView", "args", "buffers", "size", "buffer", "res", "offset", "view", "STRING_TYPE", "HEX_REGEX", "BASE64_REGEX", "BASE64URL_REGEX", "Utf8Converter", "text", "s", "uintArray", "i", "buf", "encodedString", "Utf16Converter", "littleEndian", "arrayBuffer", "dataView", "code", "Convert", "_Convert", "enc", "str", "binary", "base64", "formatted", "base64url", "encoding", "stringLength", "resultView", "result", "len", "byte", "hexString", "c", "padCount", "assign", "target", "sources", "obj", "prop", "combine", "totalByteLength", "item", "prev", "cur", "currentPos", "arr", "item2", "isEqual", "bytes1", "bytes2", "b1", "b2", "require_tslib", "__commonJSMin", "exports", "module", "__extends", "__assign", "__rest", "__decorate", "__param", "__metadata", "__awaiter", "__generator", "__exportStar", "__values", "__read", "__spread", "__spreadArrays", "__await", "__asyncGenerator", "__asyncDelegator", "__asyncValues", "__makeTemplateObject", "__importStar", "__importDefault", "__classPrivateFieldGet", "__classPrivateFieldSet", "__createBinding", "factory", "root", "createExporter", "previous", "id", "v", "exporter", "extendStatics", "d", "b", "p", "__", "s", "i", "n", "e", "t", "decorators", "target", "key", "desc", "c", "r", "paramIndex", "decorator", "metadataKey", "metadataValue", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "rejected", "result", "body", "_", "f", "y", "g", "verb", "op", "o", "m", "k", "k2", "ar", "error", "il", "j", "jl", "q", "a", "resume", "settle", "fulfill", "cooked", "raw", "mod", "receiver", "privateMap", "index_exports", "__export", "webRTC", "webRTCDirect", "UnexpectedPeerError", "message", "InvalidCryptoExchangeError", "InvalidParametersError", "InvalidPublicKeyError", "InvalidPrivateKeyError", "ConnectionFailedError", "message", "MuxerClosedError", "StreamResetError", "StreamStateError", "message", "StreamBufferError", "NotFoundError", "InvalidMultiaddrError", "message", "InvalidCIDError", "InvalidMultihashError", "InvalidMessageError", "message", "NotStartedError", "message", "UnsupportedKeyTypeError", "message", "StreamMessageEvent", "data", "eventInitDict", "StreamCloseEvent", "local", "error", "StreamAbortEvent", "StreamResetEvent", "peerIdSymbol", "transportSymbol", "FaultTolerance", "TypedEventEmitter", "#listeners", "type", "listeners", "listener", "options", "list", "callback", "event", "result", "once", "detail", "serviceCapabilities", "serviceDependencies", "base58_exports", "__export", "base58btc", "base58flickr", "empty", "equals", "aa", "bb", "ii", "coerce", "o", "fromString", "str", "toString", "b", "base", "ALPHABET", "name", "BASE_MAP", "j", "i", "x", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "Encoder", "name", "prefix", "baseEncode", "bytes", "Decoder", "baseDecode", "prefixCodePoint", "text", "decoder", "or", "ComposedDecoder", "decoders", "input", "left", "right", "Codec", "from", "encode", "decode", "baseX", "alphabet", "base_x_default", "coerce", "string", "alphabetIdx", "bitsPerChar", "end", "out", "bits", "buffer", "written", "i", "value", "data", "pad", "mask", "createAlphabetIdx", "rfc4648", "base58btc", "baseX", "base58flickr", "base32_exports", "__export", "base32", "base32hex", "base32hexpad", "base32hexpadupper", "base32hexupper", "base32pad", "base32padupper", "base32upper", "base32z", "base32", "rfc4648", "base32upper", "base32pad", "base32padupper", "base32hex", "base32hexupper", "base32hexpad", "base32hexpadupper", "base32z", "base36_exports", "__export", "base36", "base36upper", "base36", "baseX", "base36upper", "digest_exports", "__export", "Digest", "create", "decode", "equals", "hasCode", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "decode", "read", "MSB$1", "REST$1", "buf", "res", "shift", "counter", "b", "l", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "value", "varint", "_brrp_varint", "varint_default", "decode", "data", "offset", "varint_default", "encodeTo", "int", "target", "encodingLength", "create", "code", "digest", "size", "sizeOffset", "encodingLength", "digestOffset", "bytes", "encodeTo", "Digest", "decode", "multihash", "coerce", "equals", "a", "b", "data", "hasCode", "format", "link", "base", "bytes", "version", "toStringV0", "baseCache", "base58btc", "toStringV1", "base32", "cache", "baseCache", "cid", "CID", "_CID", "version", "code", "multihash", "bytes", "DAG_PB_CODE", "SHA_256_CODE", "digest", "create", "other", "self", "unknown", "equals", "base", "format", "input", "value", "encodeCID", "cidSymbol", "decode", "remainder", "specs", "prefixSize", "multihashBytes", "coerce", "digestBytes", "Digest", "initialBytes", "offset", "next", "i", "length", "codec", "multihashCode", "digestSize", "size", "multihashSize", "source", "prefix", "parseCIDtoBytes", "decoder", "base58btc", "base32", "base36", "toStringV0", "toStringV1", "codeOffset", "encodingLength", "hashOffset", "encodeTo", "identity_exports", "__export", "identity", "code", "name", "encode", "coerce", "digest", "input", "options", "create", "identity", "equals", "a", "b", "i", "alloc", "size", "allocUnsafe", "concat", "arrays", "length", "acc", "curr", "output", "allocUnsafe", "offset", "arr", "symbol", "findBufAndOffset", "bufs", "index", "offset", "buf", "bufEnd", "isUint8ArrayList", "value", "Uint8ArrayList", "_Uint8ArrayList", "data", "length", "res", "i", "bytes", "beginInclusive", "endExclusive", "concat", "list", "bufStart", "sliceStartInBuf", "sliceEndsInBuf", "start", "search", "needle", "M", "radix", "rightmostPositions", "c", "j", "right", "lastIndex", "lastPatIndex", "skip", "char", "byteOffset", "allocUnsafe", "littleEndian", "alloc", "other", "equals", "acc", "curr", "base10_exports", "__export", "base10", "base10", "baseX", "base16_exports", "__export", "base16", "base16upper", "base16", "rfc4648", "base16upper", "base2_exports", "__export", "base2", "base2", "rfc4648", "base256emoji_exports", "__export", "base256emoji", "alphabet", "alphabetBytesToChars", "p", "c", "i", "alphabetCharsToBytes", "codePoint", "encode", "data", "decode", "str", "byts", "char", "byt", "base256emoji", "from", "base64_exports", "__export", "base64", "base64pad", "base64url", "base64urlpad", "base64", "rfc4648", "base64pad", "base64url", "base64urlpad", "base8_exports", "__export", "base8", "base8", "rfc4648", "identity_exports", "__export", "identity", "identity", "from", "buf", "toString", "str", "fromString", "textEncoder", "textDecoder", "sha2_browser_exports", "__export", "sha256", "sha512", "DEFAULT_MIN_DIGEST_LENGTH", "from", "name", "code", "encode", "minDigestLength", "maxDigestLength", "Hasher", "input", "options", "result", "createDigest", "digest", "truncate", "create", "sha", "name", "data", "sha256", "from", "sha512", "bases", "identity_exports", "base2_exports", "base8_exports", "base10_exports", "base16_exports", "base32_exports", "base36_exports", "base58_exports", "base64_exports", "base256emoji_exports", "hashes", "sha2_browser_exports", "createCodec", "name", "prefix", "encode", "decode", "string", "buf", "str", "ascii", "i", "allocUnsafe", "BASES", "bases", "bases_default", "fromString", "string", "encoding", "base", "bases_default", "toString", "array", "encoding", "base", "bases_default", "TAG_MASK", "LONG_LENGTH_MASK", "LONG_LENGTH_BYTES_MASK", "decoders", "readSequence", "readInteger", "readBitString", "readOctetString", "readNull", "readObjectIdentifier", "decodeDer", "buf", "context", "tag", "readLength", "length", "count", "str", "entries", "result", "start", "end", "vals", "i", "finalOffset", "byte", "val1", "val2", "oid", "num", "val", "unusedBits", "bytes", "encodeNumber", "value", "number", "array", "Uint8ArrayList", "encodeLength", "encodeInteger", "contents", "mask", "encodeBitString", "encodeOctetString", "encodeSequence", "values", "output", "generateECDSAKey", "curve", "keyPair", "hashAndSign", "key", "msg", "options", "privateKey", "signature", "hashAndVerify", "sig", "publicKey", "result", "OID_256", "OID_384", "OID_521", "P_256_KEY_JWK", "P_384_KEY_JWK", "P_521_KEY_JWK", "P_256_KEY_LENGTH", "P_384_KEY_LENGTH", "P_521_KEY_LENGTH", "unmarshalECDSAPublicKey", "bytes", "message", "decodeDer", "pkiMessageToECDSAPublicKey", "coordinates", "offset", "x", "y", "P_256_KEY_LENGTH", "toString", "ECDSAPublicKey", "P_256_KEY_JWK", "P_384_KEY_LENGTH", "P_384_KEY_JWK", "P_521_KEY_LENGTH", "P_521_KEY_JWK", "InvalidParametersError", "privateKeyToPKIMessage", "privateKey", "encodeSequence", "encodeInteger", "encodeOctetString", "fromString", "getOID", "encodeBitString", "Uint8ArrayList", "publicKeyToPKIMessage", "publicKey", "curve", "OID_256", "OID_384", "OID_521", "generateECDSAKeyPair", "key", "generateECDSAKey", "ECDSAPrivateKey", "ECDSAPublicKey", "jwk", "publicKeyToPKIMessage", "identity", "publicKeyToProtobuf", "CID", "base58btc", "key", "equals", "data", "sig", "options", "hashAndVerify", "ECDSAPrivateKey", "privateKeyToPKIMessage", "message", "hashAndSign", "isBytes", "a", "anumber", "n", "title", "prefix", "abytes", "value", "length", "bytes", "len", "needsLen", "ofLen", "got", "ahash", "h", "aexists", "instance", "checkFinished", "aoutput", "out", "min", "clean", "arrays", "i", "createView", "arr", "rotr", "word", "shift", "hasHexBuiltin", "hexes", "_", "i", "bytesToHex", "bytes", "abytes", "hex", "asciis", "asciiToBase16", "ch", "hexToBytes", "hl", "al", "array", "ai", "hi", "n1", "n2", "char", "concatBytes", "arrays", "sum", "i", "a", "abytes", "res", "pad", "createHasher", "hashCons", "info", "hashC", "msg", "opts", "tmp", "randomBytes", "bytesLength", "cr", "oidNist", "suffix", "Chi", "a", "b", "c", "Maj", "HashMD", "blockLen", "outputLen", "padOffset", "isLE", "createView", "data", "aexists", "abytes", "view", "buffer", "len", "pos", "take", "dataView", "out", "aoutput", "clean", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "SHA256_IV", "SHA512_IV", "U32_MASK64", "_32n", "fromBig", "n", "le", "split", "lst", "len", "Ah", "Al", "h", "l", "shrSH", "h", "_l", "s", "shrSL", "l", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "add", "Ah", "Al", "Bh", "Bl", "l", "add3L", "Cl", "add3H", "low", "Ch", "add4L", "Dl", "add4H", "Dh", "add5L", "El", "add5H", "Eh", "SHA256_K", "SHA256_W", "SHA2_32B", "HashMD", "outputLen", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "Chi", "T2", "Maj", "clean", "_SHA256", "SHA256_IV", "K512", "split", "n", "SHA512_Kh", "SHA512_Kl", "SHA512_W_H", "SHA512_W_L", "SHA2_64B", "HashMD", "outputLen", "Ah", "Al", "Bh", "Bl", "Ch", "Cl", "Dh", "Dl", "Eh", "El", "Fh", "Fl", "Gh", "Gl", "Hh", "Hl", "view", "offset", "i", "W15h", "W15l", "s0h", "rotrSH", "shrSH", "s0l", "rotrSL", "shrSL", "W2h", "W2l", "s1h", "rotrBH", "s1l", "rotrBL", "SUMl", "add4L", "SUMh", "add4H", "sigma1h", "sigma1l", "CHIh", "CHIl", "T1ll", "add5L", "T1h", "add5H", "T1l", "sigma0h", "sigma0l", "MAJh", "MAJl", "add", "All", "add3L", "add3H", "clean", "_SHA512", "SHA512_IV", "sha256", "createHasher", "_SHA256", "oidNist", "sha512", "createHasher", "_SHA512", "oidNist", "_0n", "_1n", "abool", "value", "title", "prefix", "abignumber", "n", "isPosBig", "anumber", "numberToHexUnpadded", "num", "hex", "abignumber", "hexToNumber", "_0n", "bytesToNumberBE", "bytes", "bytesToHex", "bytesToNumberLE", "copyBytes", "abytes", "numberToBytesBE", "n", "len", "anumber", "res", "hexToBytes", "numberToBytesLE", "copyBytes", "bytes", "isPosBig", "n", "_0n", "inRange", "min", "max", "aInRange", "title", "bitLen", "len", "_1n", "bitMask", "n", "_1n", "createHmacDrbg", "hashLen", "qByteLen", "hmacFn", "anumber", "u8n", "len", "NULL", "byte0", "byte1", "_maxDrbgIters", "v", "k", "i", "reset", "h", "msgs", "concatBytes", "reseed", "seed", "gen", "out", "sl", "pred", "res", "validateObject", "object", "fields", "optFields", "checkField", "fieldName", "expectedType", "isOpt", "val", "current", "iter", "f", "memoized", "fn", "map", "arg", "args", "val", "computed", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_7n", "_8n", "_9n", "_16n", "mod", "a", "b", "result", "pow2", "x", "power", "modulo", "res", "_0n", "invert", "number", "a", "mod", "b", "y", "_1n", "u", "v", "q", "r", "m", "n", "assertIsSquare", "Fp", "root", "sqrt3mod4", "p1div4", "_4n", "sqrt5mod8", "p5div8", "_5n", "_8n", "n2", "_2n", "nv", "i", "sqrt9mod16", "P", "Fp_", "Field", "tn", "tonelliShanks", "c1", "c2", "c3", "c4", "_7n", "_16n", "tv1", "tv2", "tv3", "tv4", "e1", "e2", "e3", "_3n", "Q", "S", "Z", "_Fp", "FpLegendre", "cc", "Q1div2", "M", "c", "t", "R", "t_tmp", "exponent", "FpSqrt", "_9n", "isNegativeLE", "num", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "validateObject", "FpPow", "p", "d", "FpInvertBatch", "nums", "passZero", "inverted", "multipliedAcc", "acc", "invertedAcc", "FpLegendre", "Fp", "n", "p1mod2", "_1n", "_2n", "powered", "yes", "zero", "no", "nLength", "n", "nBitLength", "anumber", "_nBitLength", "nByteLength", "_Field", "_0n", "_1n", "ORDER", "opts", "_nbitLength", "num", "mod", "lhs", "rhs", "power", "FpPow", "invert", "FpSqrt", "numberToBytesLE", "numberToBytesBE", "bytes", "skipValidation", "abytes", "allowedLengths", "BYTES", "isLE", "modFromBytes", "padded", "scalar", "bytesToNumberLE", "bytesToNumberBE", "lst", "FpInvertBatch", "a", "b", "condition", "Field", "getFieldBytesLength", "fieldOrder", "bitLength", "getMinHashLength", "length", "mapHashToField", "key", "isLE", "abytes", "len", "fieldLen", "minLen", "num", "bytesToNumberLE", "bytesToNumberBE", "reduced", "mod", "_1n", "numberToBytesLE", "numberToBytesBE", "_0n", "_1n", "negateCt", "condition", "item", "neg", "normalizeZ", "c", "points", "invertedZs", "FpInvertBatch", "p", "i", "validateW", "W", "bits", "calcWOpts", "scalarBits", "windows", "windowSize", "maxNumber", "mask", "bitMask", "shiftBy", "calcOffsets", "n", "window", "wOpts", "wbits", "nextN", "offsetStart", "offset", "isZero", "isNeg", "isNegF", "pointPrecomputes", "pointWindowSizes", "getW", "P", "assert0", "n", "_0n", "wNAF", "Point", "bits", "elm", "p", "d", "_1n", "point", "W", "windows", "windowSize", "calcWOpts", "points", "base", "window", "i", "precomputes", "f", "wo", "nextN", "offset", "isZero", "isNeg", "isNegF", "offsetF", "calcOffsets", "negateCt", "acc", "item", "transform", "comp", "scalar", "prev", "validateW", "mulEndoUnsafe", "k1", "k2", "p1", "p2", "createField", "order", "field", "isLE", "validateField", "Field", "createCurveFields", "type", "CURVE", "curveOpts", "FpFnLE", "p", "val", "_0n", "Fp", "Fn", "params", "createKeygen", "randomSecretKey", "getPublicKey", "seed", "secretKey", "_0n", "_1n", "_2n", "_8n", "isEdValidXY", "Fp", "CURVE", "x", "y", "x2", "y2", "left", "right", "edwards", "params", "extraOpts", "validated", "createCurveFields", "Fn", "cofactor", "validateObject", "MASK", "modP", "n", "uvRatio", "u", "v", "acoord", "title", "banZero", "min", "aInRange", "aedpoint", "other", "Point", "toAffineMemo", "memoized", "p", "iz", "X", "Y", "Z", "is0", "zz", "assertValidMemo", "a", "d", "T", "X2", "Y2", "Z2", "Z4", "aX2", "XY", "ZT", "bytes", "zip215", "len", "copyBytes", "abytes", "abool", "normed", "lastByte", "bytesToNumberLE", "max", "isValid", "isXOdd", "isLastByteOdd", "hex", "hexToBytes", "windowSize", "isLazy", "wnaf", "X1", "Y1", "Z1", "X1Z2", "X2Z1", "Y1Z2", "Y2Z1", "A", "B", "C", "D", "x1y1", "E", "G", "F", "H", "X3", "Y3", "T3", "Z3", "T1", "T2", "scalar", "f", "normalizeZ", "acc", "invertedZ", "bytesToHex", "wNAF", "eddsa", "Point", "cHash", "eddsaOpts", "validateObject", "prehash", "BASE", "Fp", "Fn", "randomBytes", "adjustScalarBytes", "bytes", "domain", "data", "ctx", "phflag", "abool", "modN_LE", "hash", "bytesToNumberLE", "getPrivateScalar", "key", "len", "lengths", "abytes", "hashed", "head", "prefix", "scalar", "getExtendedPublicKey", "secretKey", "point", "pointBytes", "getPublicKey", "hashDomainToScalar", "context", "msgs", "msg", "concatBytes", "sign", "options", "r", "R", "k", "s", "rs", "verifyOpts", "verify", "sig", "publicKey", "zip215", "mid", "A", "SB", "_size", "randomSecretKey", "seed", "isValidSecretKey", "isBytes", "isValidPublicKey", "utils", "y", "size", "is25519", "u", "_1n", "createKeygen", "_0n", "_1n", "_2n", "validateOpts", "curve", "validateObject", "montgomery", "curveDef", "CURVE", "P", "type", "adjustScalarBytes", "powPminus2", "rand", "is25519", "randomBytes_", "randomBytes", "montgomeryBits", "fieldLen", "Gu", "a24", "minScalar", "maxAdded", "maxScalar", "modP", "n", "mod", "GuBytes", "encodeU", "u", "numberToBytesLE", "decodeU", "_u", "copyBytes", "abytes", "bytesToNumberLE", "decodeScalar", "scalar", "scalarMult", "pu", "montgomeryLadder", "scalarMultBase", "getPublicKey", "getSharedSecret", "cswap", "swap", "x_2", "x_3", "dummy", "aInRange", "k", "x_1", "z_2", "z_3", "t", "k_t", "A", "AA", "B", "BB", "E", "C", "D", "DA", "CB", "dacb", "da_cb", "z2", "lengths", "randomSecretKey", "seed", "utils", "createKeygen", "_1n", "_2n", "_3n", "_5n", "_8n", "ed25519_CURVE_p", "ed25519_CURVE", "ed25519_pow_2_252_3", "x", "_10n", "_20n", "_40n", "_80n", "P", "b2", "b4", "pow2", "b5", "b10", "b20", "b40", "b80", "b160", "b240", "b250", "adjustScalarBytes", "bytes", "ED25519_SQRT_M1", "uvRatio", "u", "v", "v3", "mod", "v7", "pow", "vx2", "root1", "root2", "useRoot1", "useRoot2", "noRoot", "isNegativeLE", "ed25519_Point", "edwards", "ed", "opts", "eddsa", "ed25519_Point", "sha512", "adjustScalarBytes", "ed25519", "x25519", "P", "ed25519_CURVE_p", "montgomery", "x", "pow_p_5_8", "b2", "ed25519_pow_2_252_3", "mod", "pow2", "_3n", "adjustScalarBytes", "SigningError", "message", "VerificationError", "WebCryptoMissingError", "webcrypto_browser_default", "win", "nativeCrypto", "WebCryptoMissingError", "webcrypto_default", "webcrypto_browser_default", "PUBLIC_KEY_BYTE_LENGTH", "PRIVATE_KEY_BYTE_LENGTH", "KEYS_BYTE_LENGTH", "ed25519Supported", "webCryptoEd25519SupportedPromise", "webcrypto_default", "generateKey", "privateKeyRaw", "ed25519", "publicKey", "concatKeys", "hashAndSignWebCrypto", "privateKey", "msg", "privateKeyRaw", "PRIVATE_KEY_BYTE_LENGTH", "jwk", "toString", "key", "webcrypto_default", "sig", "hashAndSignNoble", "KEYS_BYTE_LENGTH", "ed25519", "hashAndSign", "ed25519Supported", "webCryptoEd25519SupportedPromise", "hashAndVerifyWebCrypto", "publicKey", "hashAndVerifyNoble", "hashAndVerify", "concatKeys", "i", "isPromise", "thing", "Ed25519PublicKey", "key", "ensureEd25519Key", "PUBLIC_KEY_BYTE_LENGTH", "identity", "publicKeyToProtobuf", "CID", "base58btc", "equals", "data", "sig", "options", "result", "hashAndVerify", "isPromise", "res", "Ed25519PrivateKey", "publicKey", "PRIVATE_KEY_BYTE_LENGTH", "message", "hashAndSign", "unmarshalEd25519PublicKey", "bytes", "ensureEd25519Key", "PUBLIC_KEY_BYTE_LENGTH", "Ed25519PublicKey", "generateEd25519KeyPair", "privateKey", "publicKey", "generateKey", "Ed25519PrivateKey", "ensureEd25519Key", "key", "length", "InvalidParametersError", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "MSB", "REST", "encodingLength", "value", "encodeUint8Array", "buf", "offset", "encodeUint8ArrayList", "decodeUint8Array", "b", "res", "decodeUint8ArrayList", "encode", "allocUnsafe", "decode", "f32", "f8b", "writeFloatLE", "val", "buf", "pos", "readFloatLE", "buf", "pos", "f8b", "f32", "f64", "d8b", "writeDoubleLE", "val", "buf", "pos", "readDoubleLE", "buf", "pos", "d8b", "f64", "MAX_SAFE_NUMBER_INTEGER", "MIN_SAFE_NUMBER_INTEGER", "LongBits", "_LongBits", "lo", "hi", "unsigned", "mask", "part0", "part1", "part2", "value", "zero", "negative", "TWO_32", "sign", "length", "string", "len", "c", "i", "read", "buffer", "start", "end", "parts", "chunk", "t", "write", "offset", "c1", "c2", "indexOutOfRange", "reader", "writeLength", "readFixed32End", "buf", "end", "Uint8ArrayReader", "buffer", "value", "readFloatLE", "readDoubleLE", "length", "start", "bytes", "read", "wireType", "bits", "LongBits", "i", "lo", "hi", "decodeUint8Array", "encodingLength", "createReader", "decodeMessage", "buf", "codec", "opts", "reader", "createReader", "pool", "size", "SIZE", "MAX", "slab", "offset", "allocUnsafe", "buf", "Op", "fn", "len", "val", "noop", "State", "writer", "bufferPool", "pool", "alloc", "size", "allocUnsafe", "Uint8ArrayWriter", "value", "VarintOp", "writeVarint64", "LongBits", "bits", "encodeUint8Array", "encodingLength", "writeByte", "writeFixed32", "writeFloatLE", "writeDoubleLE", "writeBytes", "length", "write", "head", "tail", "buf", "pos", "writeVarint32", "writeBytesBuffer", "writeStringBuffer", "fromString", "createWriter", "encodeMessage", "message", "codec", "w", "createWriter", "CODEC_TYPES", "createCodec", "name", "type", "encode", "decode", "enumeration", "v", "findValue", "val", "encode", "writer", "enumValue", "decode", "reader", "createCodec", "CODEC_TYPES", "message", "encode", "decode", "createCodec", "CODEC_TYPES", "MaxLengthError", "KeyType", "__KeyTypeValues", "enumeration", "PublicKey", "_codec", "message", "obj", "w", "opts", "reader", "length", "end", "tag", "encodeMessage", "buf", "decodeMessage", "PrivateKey", "utils_exports", "__export", "MAX_RSA_KEY_SIZE", "generateRSAKeyPair", "jwkToJWKKeyPair", "jwkToPkcs1", "jwkToPkix", "jwkToRSAPrivateKey", "pkcs1MessageToJwk", "pkcs1MessageToRSAPrivateKey", "pkcs1ToJwk", "pkcs1ToRSAPrivateKey", "pkixMessageToJwk", "pkixMessageToRSAPublicKey", "pkixToJwk", "pkixToRSAPublicKey", "RSAPublicKey", "jwk", "digest", "utils_exports", "CID", "base58btc", "key", "equals", "data", "sig", "options", "hashAndVerify", "RSAPrivateKey", "publicKey", "message", "hashAndSign", "MAX_RSA_KEY_SIZE", "SHA2_256_CODE", "MAX_RSA_JWK_SIZE", "RSA_ALGORITHM_IDENTIFIER", "pkcs1ToJwk", "bytes", "message", "decodeDer", "pkcs1MessageToJwk", "toString", "jwkToPkcs1", "jwk", "InvalidParametersError", "encodeSequence", "encodeInteger", "fromString", "pkixToJwk", "pkixMessageToJwk", "keys", "jwkToPkix", "encodeBitString", "pkcs1ToRSAPrivateKey", "pkcs1MessageToRSAPrivateKey", "jwkToRSAPrivateKey", "pkixToRSAPublicKey", "digest", "InvalidPublicKeyError", "pkixMessageToRSAPublicKey", "hash", "sha256", "PublicKey", "KeyType", "create", "RSAPublicKey", "rsaKeySize", "jwkToJWKKeyPair", "RSAPrivateKey", "generateRSAKeyPair", "bits", "generateRSAKey", "key", "generateRSAKey", "bits", "options", "pair", "webcrypto_default", "keys", "exportKey", "hashAndSign", "key", "msg", "options", "privateKey", "webcrypto_default", "sig", "hashAndVerify", "publicKey", "result", "exportKey", "pair", "InvalidParametersError", "rsaKeySize", "jwk", "fromString", "_HMAC", "hash", "key", "ahash", "abytes", "blockLen", "pad", "clean", "buf", "aexists", "out", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "divNearest", "num", "den", "_2n", "_splitEndoScalar", "k", "basis", "n", "a1", "b1", "a2", "b2", "c1", "c2", "k1", "k2", "k1neg", "_0n", "k2neg", "MAX_NUM", "bitMask", "bitLen", "_1n", "validateSigFormat", "format", "validateSigOpts", "opts", "def", "optsn", "optName", "abool", "DERErr", "m", "DER", "tag", "data", "E", "dataLen", "len", "numberToHexUnpadded", "lenLen", "pos", "first", "isLong", "length", "lengthBytes", "b", "v", "hex", "bytesToNumberBE", "bytes", "int", "tlv", "abytes", "seqBytes", "seqLeftBytes", "rBytes", "rLeftBytes", "sBytes", "sLeftBytes", "sig", "rs", "ss", "seq", "_3n", "_4n", "weierstrass", "params", "extraOpts", "validated", "createCurveFields", "Fp", "Fn", "CURVE", "cofactor", "CURVE_ORDER", "validateObject", "endo", "lengths", "getWLengths", "assertCompressionIsSupported", "pointToBytes", "_c", "point", "isCompressed", "x", "y", "bx", "hasEvenY", "concatBytes", "pprefix", "pointFromBytes", "comp", "uncomp", "head", "tail", "y2", "weierstrassEquation", "sqrtError", "err", "evenY", "isValidXY", "encodePoint", "decodePoint", "x2", "x3", "left", "right", "_4a3", "_27b2", "acoord", "title", "banZero", "aprjpoint", "other", "Point", "splitEndoScalarN", "toAffineMemo", "memoized", "p", "iz", "X", "Y", "Z", "is0", "zz", "assertValidMemo", "finishEndo", "endoBeta", "k1p", "k2p", "negateCt", "P", "hexToBytes", "windowSize", "isLazy", "wnaf", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "a", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "scalar", "fake", "mul", "normalizeZ", "k1f", "k2f", "f", "sc", "p1", "p2", "mulEndoUnsafe", "invertedZ", "isTorsionFree", "clearCofactor", "bytesToHex", "bits", "wNAF", "getWLengths", "Fp", "Fn", "ecdh", "Point", "ecdhOpts", "randomBytes_", "randomBytes", "lengths", "getMinHashLength", "isValidSecretKey", "secretKey", "num", "isValidPublicKey", "publicKey", "isCompressed", "comp", "publicKeyUncompressed", "l", "randomSecretKey", "seed", "mapHashToField", "abytes", "getPublicKey", "isProbPub", "item", "isBytes", "getSharedSecret", "secretKeyA", "publicKeyB", "s", "utils", "keygen", "createKeygen", "ecdsa", "hash", "ecdsaOpts", "ahash", "validateObject", "hmac", "key", "msg", "CURVE_ORDER", "fnBits", "defaultSigOpts", "hasLargeCofactor", "_2n", "isBiggerThanHalfOrder", "number", "HALF", "_1n", "validateRS", "title", "assertSmallCofactor", "validateSigLength", "bytes", "format", "validateSigFormat", "size", "sizer", "Signature", "r", "recovery", "recid", "DER", "hex", "hexToBytes", "messageHash", "radj", "x", "R", "concatBytes", "pprefix", "ir", "h", "bits2int_modN", "u1", "u2", "Q", "rb", "sb", "bytesToHex", "bits2int", "bytesToNumberBE", "delta", "ORDER_MASK", "bitMask", "int2octets", "aInRange", "_0n", "validateMsgAndHash", "message", "prehash", "prepSig", "opts", "lowS", "extraEntropy", "validateSigOpts", "h1int", "d", "seedArgs", "e", "m", "k2sig", "kBytes", "k", "ik", "q", "normS", "sign", "createHmacDrbg", "verify", "signature", "end", "sig", "P", "is", "recoverPublicKey", "secp256k1_CURVE", "secp256k1_ENDO", "_2n", "sqrtMod", "y", "P", "secp256k1_CURVE", "_3n", "_6n", "_11n", "_22n", "_23n", "_44n", "_88n", "b2", "b3", "b6", "pow2", "b9", "b11", "b22", "b44", "b88", "b176", "b220", "b223", "t1", "t2", "root", "Fpk1", "Field", "Pointk1", "weierstrass", "secp256k1_ENDO", "secp256k1", "ecdsa", "sha256", "hashAndSign", "key", "msg", "options", "p", "sha256", "isPromise", "digest", "secp256k1", "err", "SigningError", "hashAndVerify", "sig", "VerificationError", "Secp256k1PublicKey", "key", "validateSecp256k1PublicKey", "compressSecp256k1PublicKey", "identity", "publicKeyToProtobuf", "CID", "base58btc", "equals", "data", "sig", "options", "hashAndVerify", "Secp256k1PrivateKey", "publicKey", "validateSecp256k1PrivateKey", "computeSecp256k1PublicKey", "message", "hashAndSign", "unmarshalSecp256k1PublicKey", "bytes", "Secp256k1PublicKey", "generateSecp256k1KeyPair", "privateKeyBytes", "generateSecp256k1PrivateKey", "Secp256k1PrivateKey", "compressSecp256k1PublicKey", "key", "secp256k1", "validateSecp256k1PrivateKey", "key", "secp256k1", "err", "InvalidPrivateKeyError", "validateSecp256k1PublicKey", "InvalidPublicKeyError", "computeSecp256k1PublicKey", "privateKey", "generateSecp256k1PrivateKey", "generateKeyPair", "type", "bits", "generateEd25519KeyPair", "generateSecp256k1KeyPair", "generateRSAKeyPair", "toBits", "generateECDSAKeyPair", "toCurve", "UnsupportedKeyTypeError", "publicKeyFromProtobuf", "buf", "digest", "Type", "Data", "PublicKey", "data", "KeyType", "pkixToRSAPublicKey", "unmarshalEd25519PublicKey", "unmarshalSecp256k1PublicKey", "unmarshalECDSAPublicKey", "UnsupportedKeyTypeError", "publicKeyFromMultihash", "digest", "Type", "Data", "PublicKey", "data", "KeyType", "unmarshalEd25519PublicKey", "unmarshalSecp256k1PublicKey", "unmarshalECDSAPublicKey", "UnsupportedKeyTypeError", "publicKeyToProtobuf", "key", "toBits", "bits", "toCurve", "curve", "InvalidParametersError", "privateKeyToCryptoKeyPair", "privateKey", "inspect", "LIBP2P_KEY_CODE", "PeerIdImpl", "init", "peerIdSymbol", "base58btc", "CID", "id", "equals", "RSAPeerId", "Ed25519PeerId", "Secp256k1PeerId", "TRANSPORT_IPFS_GATEWAY_HTTP_CODE", "URLPeerId", "url", "identity", "fromString", "other", "toString", "LIBP2P_KEY_CODE", "TRANSPORT_IPFS_GATEWAY_HTTP_CODE", "peerIdFromString", "str", "decoder", "multihash", "decode", "base58btc", "peerIdFromCID", "CID", "InvalidParametersError", "peerIdFromMultihash", "peerIdFromPublicKey", "publicKey", "Ed25519PeerId", "Secp256k1PeerId", "RSAPeerId", "UnsupportedKeyTypeError", "peerIdFromMultihash", "multihash", "isSha256Multihash", "RSAPeerId", "isIdentityMultihash", "publicKey", "publicKeyFromMultihash", "Ed25519PeerId", "Secp256k1PeerId", "url", "toString", "URLPeerId", "InvalidMultihashError", "peerIdFromCID", "cid", "LIBP2P_KEY_CODE", "TRANSPORT_IPFS_GATEWAY_HTTP_CODE", "InvalidCIDError", "identity", "sha256", "InvalidMultiaddrError", "ValidationError", "InvalidParametersError", "UnknownProtocolError", "Parser", "input", "fn", "index", "result", "target", "char", "sep", "inner", "radix", "maxDigits", "allowZeroPrefix", "maxBytes", "digitCount", "leadingChar", "hasLeadingZero", "maxValue", "digit", "num", "out", "i", "ix", "readGroups", "groups", "ipv4", "group", "head", "headSize", "headIp4", "tail", "limit", "tailSize", "MAX_IPV6_LENGTH", "MAX_IPV4_LENGTH", "parser", "Parser", "parseIPv4", "input", "parseIPv6", "input", "MAX_IPV6_LENGTH", "parser", "isIPv4", "input", "parseIPv4", "isIPv6", "parseIPv6", "bytesToString", "base", "buf", "toString", "stringToBytes", "fromString", "bytes2port", "port2bytes", "port", "onion2bytes", "str", "addr", "portBuf", "concat", "onion32bytes", "base32", "bytes2onion", "addrBytes", "portBytes", "ip4ToBytes", "ip", "bytes", "byte", "index", "value", "InvalidMultiaddrError", "ip6ToBytes", "offset", "sections", "i", "isv4", "isIPv4", "v4Buffer", "argv", "word", "ip4ToString", "result", "ip6ToString", "byte1", "byte2", "tuple", "url", "ip6StringToValue", "decoders", "bases", "c", "anybaseDecoder", "acc", "d", "mb2bytes", "mbstr", "bytes2mb", "integer", "value", "ValidationError", "positive", "maxValue", "max", "validate", "funcs", "fn", "validatePort", "V", "Registry", "key", "codec", "UnknownProtocolError", "alias", "code", "registry", "codecs", "ip4ToBytes", "ip4ToString", "value", "isIPv4", "ValidationError", "port2bytes", "bytes2port", "validatePort", "ip6ToBytes", "ip6ToString", "ip6StringToValue", "isIPv6", "bytesToString", "stringToBytes", "str", "val", "CID", "bytes2onion", "onion2bytes", "onion32bytes", "bytes2mb", "base64url", "mb2bytes", "bytesToComponents", "bytes", "components", "i", "code", "decode", "codec", "registry", "codeLength", "encodingLength", "size", "sizeForAddr", "sizeLength", "V", "componentLength", "component", "valueOffset", "valueBytes", "toString", "componentsToBytes", "length", "codecLength", "valueLength", "valueLengthLength", "fromString", "offset", "encodeUint8Array", "concat", "stringToComponents", "string", "InvalidMultiaddrError", "collecting", "value", "protocol", "char", "ended", "componentsToString", "inspect", "symbol", "toComponents", "addr", "isMultiaddr", "bytesToComponents", "stringToComponents", "InvalidMultiaddrError", "Multiaddr", "_Multiaddr", "#components", "#string", "#bytes", "options", "validate", "componentsToBytes", "componentsToString", "c", "ma", "addrString", "s", "i", "InvalidParametersError", "code", "index", "equals", "component", "codec", "registry", "isMultiaddr", "value", "symbol", "multiaddr", "addr", "Multiaddr", "code", "vals", "component", "value", "not", "matcher", "optional", "result", "or", "matchers", "matches", "and", "fmt", "match", "ma", "parts", "exactMatch", "_PEER_ID", "value", "PEER_ID", "fmt", "_DNS4", "_DNS6", "_DNSADDR", "_DNS", "DNS4", "optional", "DNS6", "DNSADDR", "DNS", "or", "_IP4", "and", "_IP6", "_IP", "_IP_OR_DOMAIN", "IP_OR_DOMAIN", "IP4", "IP6", "IP", "_TCP", "_UDP", "TCP", "UDP", "_QUIC", "code", "_QUIC_V1", "QUIC_V0_OR_V1", "QUIC", "QUIC_V1", "_WEB", "_WebSockets", "WebSockets", "_WebSocketsSecure", "WebSocketsSecure", "_WebRTCDirect", "WebRTCDirect", "_WebTransport", "WebTransport", "_P2P", "P2P", "_Circuit", "not", "Circuit", "_WebRTC", "WebRTC", "_HTTP", "HTTP", "_HTTPS", "HTTPS", "_Memory", "Memory", "_Unix", "Unix", "Message", "Flag", "__FlagValues", "enumeration", "_codec", "message", "obj", "w", "opts", "reader", "length", "end", "tag", "encodeMessage", "buf", "decodeMessage", "DEFAULT_ICE_SERVERS", "UFRAG_ALPHABET", "UFRAG_PREFIX", "MAX_BUFFERED_AMOUNT", "MAX_MESSAGE_SIZE", "calculateProtobufOverhead", "maxMessageSize", "messageLength", "encodingLength", "flagField", "Message", "messageFieldIdType", "available", "messageFieldLengthLength", "PROTOBUF_OVERHEAD", "DEFAULT_FIN_ACK_TIMEOUT", "MUXER_PROTOCOL", "SIGNALING_PROTOCOL", "DEFAULT_CERTIFICATE_DATASTORE_KEY", "DEFAULT_CERTIFICATE_PRIVATE_KEY_NAME", "DEFAULT_CERTIFICATE_LIFESPAN", "DEFAULT_CERTIFICATE_RENEWAL_THRESHOLD", "getNetConfig", "ma", "components", "config", "index", "InvalidParametersError", "pDefer", "deferred", "resolve", "reject", "FixedFIFO", "hwm", "data", "last", "FIFO", "options", "obj", "val", "prev", "next", "AbortError", "message", "code", "pushable", "options", "_pushable", "buffer", "next", "_pushable", "getNext", "options", "onEnd", "buffer", "FIFO", "pushable", "onNext", "ended", "drain", "pDefer", "waitNext", "resolve", "reject", "next", "err", "bufferNext", "bufferError", "push", "value", "end", "_return", "_throw", "signal", "cancel", "listener", "AbortError", "opts", "TimeoutError", "message", "AbortError", "getDOMException", "errorMessage", "getAbortedReason", "signal", "reason", "pTimeout", "promise", "options", "milliseconds", "fallback", "customTimers", "timer", "abortHandler", "cancelablePromise", "resolve", "reject", "timeoutError", "error", "normalizeEmitter", "emitter", "addListener", "removeListener", "pEventMultiple", "event", "options", "cancel", "returnValue", "resolve", "reject", "events", "items", "onItem", "arguments_", "value", "error", "rejectHandler", "rejectionEvent", "timeout", "pTimeout", "pEvent", "arrayPromise", "promise", "array", "UnexpectedEOFError", "MaxEarlyStreamsError", "StreamClosedError", "defaultTranslate", "signal", "raceSignal", "promise", "opts", "translateError", "listener", "resolve", "reject", "DEFAULT_MAX_READ_BUFFER_LENGTH", "AbstractMessageStream", "TypedEventEmitter", "init", "Uint8ArrayList", "continueSendingOnDrain", "rejectOnDrainOnClose", "evt", "StreamClosedError", "options", "raceSignal", "output", "pushable", "streamAsyncIterableOnMessageListener", "streamAsyncIterableOnCloseListener", "streamAsyncIterableOnRemoteCloseWriteListener", "data", "StreamStateError", "err", "StreamAbortEvent", "args", "StreamResetError", "StreamResetEvent", "StreamCloseEvent", "canSendMore", "totalBytes", "sentBytes", "end", "toSend", "willSend", "sendResult", "buf", "StreamMessageEvent", "StreamBufferError", "AbstractMultiaddrConnection", "AbstractMessageStream", "init", "evt", "options", "pEvent", "isPromise", "thing", "AbstractStreamMuxer", "TypedEventEmitter", "maConn", "init", "muxerMaConnOnMessage", "evt", "err", "muxerMaConnOnDrain", "stream", "muxerOnMaConnClose", "data", "result", "options", "raceSignal", "s", "MuxerClosedError", "isPromise", "MaxEarlyStreamsError", "muxerOnStreamEnd", "index", "args", "AbstractStream", "AbstractMessageStream", "init", "options", "pEvent", "DEFAULT_MAX_BUFFER_SIZE", "UnwrappedError", "InvalidMessageLengthError", "InvalidDataLengthError", "InvalidDataLengthLengthError", "isStream", "obj", "isMultiaddrConnection", "isEOF", "isValid", "byteStream", "stream", "opts", "maxBufferSize", "readBuffer", "Uint8ArrayList", "hasBytes", "unwrapped", "InvalidParametersError", "byteStreamOnMessageListener", "evt", "readBufferSize", "byteStreamOnCloseListener", "byteStreamOnRemoteCloseWrite", "options", "UnexpectedEOFError", "bytesToRead", "raceSignal", "toRead", "output", "data", "pEvent", "lpStream", "bytes", "encodingLength", "decodeLength", "decode", "encodeLength", "encode", "dataLength", "lengthBuffer", "buf", "err", "list", "pbStream", "lp", "proto", "value", "message", "messages", "d", "DEFAULT_MAX_BUFFER_SIZE", "DEFAULT_MAX_DATA_LENGTH", "LengthPrefixedDecoder", "init", "Uint8ArrayList", "decode", "encodingLength", "buf", "InvalidParametersError", "dataLength", "err", "InvalidMessageLengthError", "lengthLength", "chunkLength", "InvalidMessageLengthError", "InvalidDataLengthError", "InvalidDataLengthLengthError", "UnexpectedEOFError", "isAsyncIterable", "thing", "validateMaxDataLength", "chunk", "maxDataLength", "InvalidDataLengthError", "defaultEncoder", "length", "lengthLength", "encodingLength", "lengthBuf", "allocUnsafe", "encode", "source", "options", "encodeLength", "maybeYield", "isAsyncIterable", "Uint8ArrayList", "ReadMode", "defaultDecoder", "buf", "length", "decode", "encodingLength", "source", "options", "buffer", "Uint8ArrayList", "mode", "dataLength", "lengthDecoder", "maxLengthLength", "maxDataLength", "maybeYield", "InvalidMessageLengthError", "InvalidDataLengthError", "dataLengthLength", "err", "InvalidDataLengthLengthError", "data", "isAsyncIterable", "UnexpectedEOFError", "reader", "byteLength", "varByteSource", "done", "value", "l", "__spreadArray", "to", "from", "pack", "i", "l", "ar", "BrowserInfo", "name", "version", "os", "NodeInfo", "version", "SearchBotDeviceInfo", "name", "version", "os", "bot", "BotInfo", "ReactNativeInfo", "SEARCHBOX_UA_REGEX", "SEARCHBOT_OS_REGEX", "REQUIRED_VERSION_PARTS", "userAgentRules", "operatingSystemRules", "detect", "userAgent", "parseUserAgent", "ReactNativeInfo", "getNodeVersion", "matchUserAgent", "ua", "matched", "_a", "browser", "regex", "uaMatch", "parseUserAgent", "ua", "matchedRule", "matchUserAgent", "name", "match", "BotInfo", "versionParts", "REQUIRED_VERSION_PARTS", "__spreadArray", "createVersionParts", "version", "os", "detectOS", "searchBotMatch", "SEARCHBOT_OS_REGEX", "SearchBotDeviceInfo", "BrowserInfo", "ii", "count", "operatingSystemRules", "_a", "regex", "getNodeVersion", "isNode", "NodeInfo", "output", "browser", "detect", "isFirefox", "getRtcConfiguration", "config", "DEFAULT_ICE_SERVERS", "url", "genUfrag", "len", "UFRAG_PREFIX", "UFRAG_ALPHABET", "WebRTCStream", "AbstractStream", "init", "MAX_MESSAGE_SIZE", "PROTOBUF_OVERHEAD", "pushable", "MAX_BUFFERED_AMOUNT", "DEFAULT_FIN_ACK_TIMEOUT", "evt", "err", "event", "data", "buf", "decode", "cleanUpDatachannelOnClose", "pEvent", "StreamStateError", "isFirefox", "encode", "Message", "options", "signal", "eventPromises", "raceSignal", "p", "buffer", "message", "Uint8ArrayList", "StreamResetError", "flag", "messageBuf", "prefixedBuf", "createStream", "channel", "direction", "isHandshake", "DataChannelMuxerFactory", "init", "MUXER_PROTOCOL", "evt", "maConn", "DataChannelMuxer", "AbstractStreamMuxer", "channel", "stream", "createStream", "options", "RTCPeerConnectionMultiaddrConnection", "AbstractMultiaddrConnection", "init", "initialState", "data", "options", "toMultiaddrConnection", "RTCPeerConnection", "RTCSessionDescription", "RTCIceCandidate", "CustomProgressEvent", "type", "detail", "WebRTCTransportError", "msg", "SDPHandshakeFailedError", "message", "InvalidFingerprintError", "WebRTCTransportError", "fingerprint", "source", "UnimplementedError", "WebRTCTransportError", "methodName", "UnsupportedHashAlgorithmError", "algo", "Message", "Type", "__TypeValues", "enumeration", "_codec", "message", "obj", "w", "opts", "reader", "length", "end", "tag", "encodeMessage", "buf", "decodeMessage", "readCandidatesUntilConnected", "pc", "stream", "options", "connectedPromise", "resolveOnConnected", "message", "Message", "InvalidMessageError", "candidateInit", "CustomProgressEvent", "candidate", "RTCIceCandidate", "err", "promise", "_", "ConnectionFailedError", "getRemotePeer", "ma", "remotePeer", "component", "peerIdFromString", "InvalidMultiaddrError", "initiateConnection", "rtcConfiguration", "dataChannel", "signal", "metrics", "ma", "connectionManager", "transportManager", "log", "logger", "onProgress", "circuitAddress", "targetPeer", "splitAddr", "connections", "connection", "CustomProgressEvent", "stream", "SIGNALING_PROTOCOL", "messageStream", "pbStream", "Message", "peerConnection", "RTCPeerConnection", "muxerFactory", "DataChannelMuxerFactory", "channel", "candidate", "data", "err", "event", "offerSdp", "SDPHandshakeFailedError", "answerMessage", "answerSdp", "RTCSessionDescription", "readCandidatesUntilConnected", "pEvent", "Circuit", "fmt", "P2P", "code", "WebRTCPeerListener", "_WebRTCPeerListener", "TypedEventEmitter", "components", "init", "event", "ma", "l", "handleIncomingStream", "stream", "connection", "peerConnection", "signal", "log", "messageStream", "pbStream", "Message", "candidate", "data", "err", "pbOffer", "SDPHandshakeFailedError", "offer", "RTCSessionDescription", "answer", "readCandidatesUntilConnected", "remotePeer", "getRemotePeer", "remoteAddress", "multiaddr", "WebRTCTransport", "components", "init", "transportSymbol", "serviceCapabilities", "serviceDependencies", "SIGNALING_PROTOCOL", "stream", "connection", "signal", "err", "options", "WebRTCPeerListener", "multiaddrs", "WebRTC", "ma", "remoteAddress", "peerConnection", "muxerFactory", "initiateConnection", "getRtcConfiguration", "webRTCConn", "toMultiaddrConnection", "getRemotePeer", "RTCPeerConnection", "DataChannelMuxerFactory", "remotePeer", "handleIncomingStream", "pc", "shutDownListener", "splitAddr", "target", "name", "value", "InvalidParametersError", "multiaddr", "peerIdFromString", "import_reflect_metadata", "index_es_exports", "__export", "Any", "BaseBlock", "BaseStringBlock", "BitString", "BmpString", "Boolean", "CharacterString", "Choice", "Constructed", "DATE", "DateTime", "Duration", "EndOfContent", "Enumerated", "GeneralString", "GeneralizedTime", "GraphicString", "HexBlock", "IA5String", "Integer", "Null", "NumericString", "ObjectIdentifier", "OctetString", "Primitive", "PrintableString", "RawData", "RelativeObjectIdentifier", "Repeated", "Sequence", "Set", "TIME", "TeletexString", "TimeOfDay", "UTCTime", "UniversalString", "Utf8String", "ValueBlock", "VideotexString", "ViewWriter", "VisibleString", "compareSchema", "fromBER", "verifySchema", "pvtsutils", "utilFromBase", "inputBuffer", "inputBase", "result", "i", "utilToBase", "value", "base", "reserved", "internalReserved", "internalValue", "biggest", "retBuf", "retView", "j", "basis", "utilConcatView", "views", "outputLength", "prevLength", "view", "retBuf", "retView", "utilDecodeTC", "buf", "condition1", "condition2", "bigIntBuffer", "bigIntView", "i", "bigInt", "utilFromBase", "smallIntBuffer", "smallIntView", "j", "utilEncodeTC", "value", "modValue", "smallInt", "utilToBase", "tempBuf", "tempView", "k", "isEqualBuffer", "inputBuffer1", "inputBuffer2", "view1", "view2", "padNumber", "inputNumber", "fullLength", "str", "dif", "padding", "log2", "assertBigInt", "concat", "buffers", "outputLength", "prevLength", "i", "buffer", "retView", "checkBufferParams", "baseBlock", "inputBuffer", "inputOffset", "inputLength", "ViewWriter", "buf", "powers2", "digitsString", "NAME", "VALUE_HEX_VIEW", "IS_HEX_ONLY", "ID_BLOCK", "TAG_CLASS", "TAG_NUMBER", "IS_CONSTRUCTED", "FROM_BER", "TO_BER", "LOCAL", "EMPTY_STRING", "EMPTY_BUFFER", "EMPTY_VIEW", "END_OF_CONTENT_NAME", "OCTET_STRING_NAME", "BIT_STRING_NAME", "HexBlock", "BaseClass", "_a", "value", "args", "_b", "params", "view", "endLength", "sizeOnly", "LocalBaseBlock", "blockLength", "error", "warnings", "valueBeforeDecode", "ValueBlock", "_inputBuffer", "_inputOffset", "_inputLength", "_sizeOnly", "_writer", "LocalIdentificationBlock", "idBlock", "_c", "_d", "firstOctet", "number", "encodedBuf", "utilToBase", "encodedView", "size", "curView", "inputView", "intBuffer", "tagNumberMask", "count", "intTagNumberBuffer", "tagNumberBufferMaxLength", "tempBufferView", "utilFromBase", "LocalLengthBlock", "lenBlock", "lenOffset", "lengthBufferView", "retBuf", "typeStore", "BaseBlock", "name", "optional", "primitiveSchema", "parameters", "valueBlockType", "resultOffset", "writer", "prepareIndefiniteForm", "idBlockBuf", "valueBlockBuf", "lenBlockBuf", "object", "encoding", "other", "thisRaw", "otherRaw", "isEqualBuffer", "BaseStringBlock", "stringValueBlockType", "LocalPrimitiveValueBlock", "isHexOnly", "_a$w", "Primitive", "localChangeType", "inputObject", "newType", "newObject", "localFromBER", "incomingOffset", "returnObject", "newASN1Type", "fromBER", "result", "checkLen", "indefiniteLength", "length", "LocalConstructedValueBlock", "isIndefiniteForm", "currentOffset", "_a$v", "Constructed", "values", "blockName", "LocalEndOfContentValueBlock", "_a$u", "EndOfContent", "_a$t", "Null", "LocalBooleanValueBlock", "octet", "utilDecodeTC", "_a$s", "Boolean", "LocalOctetStringValueBlock", "isConstructed", "currentBlockName", "_a$r", "OctetString", "asn", "array", "content", "LocalBitStringValueBlock", "unusedBits", "valueBlock", "_a$q", "BitString", "bits", "valueHex", "byte", "bitsStr", "_a$p", "viewAdd", "first", "second", "c", "firstView", "secondView", "firstViewCopy", "firstViewCopyLength", "secondViewCopy", "secondViewCopyLength", "max", "counter", "utilConcatView", "power2", "n", "p", "digits", "newValue", "viewSub", "b", "LocalIntegerValueBlock", "v", "utilEncodeTC", "expectedLength", "offset", "updatedView", "firstBit", "bitNumber", "currentByte", "asn1View", "flag", "byteNumber", "_a$o", "Integer", "bigIntValue", "hex", "secondInt", "integer", "_a$n", "Enumerated", "LocalSidValueBlock", "valueDec", "isFirstSid", "tempView", "bytes", "len", "sidValue", "LocalObjectIdentifierValueBlock", "sidBlock", "retBuffers", "valueBuf", "string", "pos1", "pos2", "sid", "plus", "parsedSID", "sidStr", "_a$m", "ObjectIdentifier", "LocalRelativeSidValueBlock", "LocalRelativeObjectIdentifierValueBlock", "_a$l", "RelativeObjectIdentifier", "_a$k", "Sequence", "_a$j", "Set", "LocalStringValueBlock", "LocalSimpleStringValueBlock", "LocalSimpleStringBlock", "inputString", "strLen", "LocalUtf8StringValueBlock", "ex", "_a$i", "Utf8String", "LocalBmpStringValueBlock", "_a$h", "BmpString", "LocalUniversalStringValueBlock", "copyBuffer", "valueView", "strLength", "valueHexView", "codeBuf", "codeView", "dif", "j", "_a$g", "UniversalString", "_a$f", "NumericString", "_a$e", "PrintableString", "_a$d", "TeletexString", "_a$c", "VideotexString", "_a$b", "IA5String", "_a$a", "GraphicString", "_a$9", "VisibleString", "_a$8", "GeneralString", "_a$7", "CharacterString", "_a$6", "UTCTime", "valueDate", "str", "inputDate", "parserArray", "year", "outputArray", "padNumber", "_a$5", "GeneralizedTime", "utcDate", "isUTC", "timeString", "dateTimeString", "fractionPart", "parser", "hourDifference", "minuteDifference", "multiplier", "differencePosition", "differenceString", "fractionPointPosition", "fractionPartCheck", "fractionResult", "tempDate", "_a$4", "DATE", "_a$3", "TimeOfDay", "_a$2", "DateTime", "_a$1", "Duration", "TIME", "Any", "Choice", "Repeated", "local", "RawData", "data", "compareSchema", "root", "inputData", "inputSchema", "element", "_result", "encodedId", "schemaView", "admission", "maxLength", "_optional", "arrayRoot", "asn1", "verifySchema", "AsnTypeTypes", "AsnPropTypes", "import_pvtsutils", "BitString", "params", "unusedBits", "asn", "name", "res", "uintArray", "octet", "value", "bits", "octetSize", "octets", "index", "import_pvtsutils", "OctetString", "param", "asn", "name", "AsnAnyConverter", "value", "Null", "schema", "fromBER", "AsnIntegerConverter", "Integer", "AsnEnumeratedConverter", "Enumerated", "AsnIntegerArrayBufferConverter", "AsnBitStringConverter", "value", "BitString", "AsnObjectIdentifierConverter", "ObjectIdentifier", "AsnBooleanConverter", "Boolean", "AsnOctetStringConverter", "OctetString", "AsnConstructedOctetStringConverter", "createStringConverter", "Asn1Type", "AsnUtf8StringConverter", "Utf8String", "AsnBmpStringConverter", "BmpString", "AsnUniversalStringConverter", "UniversalString", "AsnNumericStringConverter", "NumericString", "AsnPrintableStringConverter", "PrintableString", "AsnTeletexStringConverter", "TeletexString", "AsnVideotexStringConverter", "VideotexString", "AsnIA5StringConverter", "IA5String", "AsnGraphicStringConverter", "GraphicString", "AsnVisibleStringConverter", "VisibleString", "AsnGeneralStringConverter", "GeneralString", "AsnCharacterStringConverter", "CharacterString", "AsnUTCTimeConverter", "UTCTime", "AsnGeneralizedTimeConverter", "GeneralizedTime", "AsnNullConverter", "Null", "defaultConverter", "type", "AsnPropTypes", "AsnAnyConverter", "AsnEnumeratedConverter", "AsnIntegerConverter", "isConvertible", "target", "isTypeOfArray", "_a", "proto", "isArrayEqual", "bytes1", "bytes2", "b1", "b2", "i", "AsnSchemaStorage", "target", "checkSchema", "schema", "AsnTypeTypes", "parentSchema", "useNames", "asn1Value", "key", "item", "name", "asn1Item", "Asn1TypeName", "AsnPropTypes", "Asn1Type", "index_es_exports", "isConvertible", "Any", "optional", "Container", "Set", "Sequence", "Repeated", "Constructed", "Primitive", "isRepeated", "value", "Choice", "parent", "schemaStorage", "AsnSchemaStorage", "AsnType", "options", "target", "schema", "schemaStorage", "AsnProp", "options", "target", "propertyKey", "schema", "schemaStorage", "copyOptions", "defaultConverter", "AsnSchemaValidationError", "AsnParser", "data", "target", "asn1Parsed", "fromBER", "asn1Schema", "isConvertible", "schema", "schemaStorage", "targetSchema", "choiceResult", "sequenceResult", "asn1ComparedSchema", "res", "isTypeOfArray", "error", "AsnSchemaValidationError", "Constructed", "AsnTypeTypes", "key", "schemaItem", "fieldSchema", "newSeq", "Sequence", "fieldValue", "newTargetSchema", "item", "compareSchema", "asn1Elements", "schemaKeys", "asn1Index", "i", "result", "elementsToProcess", "seq", "converter", "defaultConverter", "el", "v", "asn1Element", "err", "itemType", "element", "asn1SchemaValue", "schemaItemType", "parsedValue", "_a", "Container", "Set", "newItem", "newItemAsn", "value", "Asn1TypeName", "AsnPropTypes", "Asn1Type", "index_es_exports", "valueToProcess", "newSet", "AsnSerializer", "_AsnSerializer", "obj", "BaseBlock", "isConvertible", "target", "schema", "schemaStorage", "asn1Value", "converter", "defaultConverter", "o", "key", "schemaItem", "objProp", "isArrayEqual", "asn1Item", "value", "Null", "Primitive", "Constructed", "asnSchema", "AsnTypeTypes", "Sequence", "Set", "AsnPropTypes", "items", "element", "Container", "AsnArray", "items", "item", "import_pvtsutils", "AsnConvert", "_AsnConvert", "obj", "AsnSerializer", "data", "target", "AsnParser", "buf", "asn", "fromBER", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "import_pvtsutils", "IpConverter", "ip", "parts", "part", "num", "bytes", "left", "right", "missing", "i", "longestZeroStart", "longestZeroLength", "currentZeroStart", "currentZeroLength", "before", "after", "text", "addr", "prefixStr", "prefix", "value", "mask", "a", "k", "match", "buf", "uint8", "half", "addrBytes", "maskBytes", "byte", "prefixLen", "b", "bitsLeft", "out", "import_pvtsutils", "RelativeDistinguishedName_1", "RDNSequence_1", "Name_1", "DirectoryString", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "AttributeValue", "DirectoryString", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "AttributeTypeAndValue", "params", "AttributeValue", "__decorate", "AsnProp", "AsnPropTypes", "RelativeDistinguishedName", "RelativeDistinguishedName_1", "AsnArray", "items", "AsnType", "AsnTypeTypes", "RDNSequence", "RDNSequence_1", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "RelativeDistinguishedName", "Name", "Name_1", "RDNSequence", "items", "__decorate", "AsnType", "AsnTypeTypes", "AsnIpConverter", "value", "IpConverter", "AsnOctetStringConverter", "OtherName", "params", "__decorate", "AsnProp", "AsnPropTypes", "EDIPartyName", "DirectoryString", "GeneralName", "Name", "AsnType", "AsnTypeTypes", "id_pkix", "id_pe", "id_qt", "id_kp", "id_ad", "id_qt_csp", "id_qt_unotice", "id_ad_ocsp", "id_ad_caIssuers", "id_ad_timeStamping", "id_ad_caRepository", "id_ce", "AuthorityInfoAccessSyntax_1", "id_pe_authorityInfoAccess", "id_pe", "AccessDescription", "params", "GeneralName", "__decorate", "AsnProp", "AsnPropTypes", "AuthorityInfoAccessSyntax", "AsnArray", "items", "AsnType", "AsnTypeTypes", "id_ce_authorityKeyIdentifier", "id_ce", "KeyIdentifier", "OctetString", "AuthorityKeyIdentifier", "params", "__decorate", "AsnProp", "GeneralName", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "id_ce_basicConstraints", "id_ce", "BasicConstraints", "params", "__decorate", "AsnProp", "AsnPropTypes", "GeneralNames_1", "GeneralNames", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "GeneralName", "CertificateIssuer_1", "id_ce_certificateIssuer", "id_ce", "CertificateIssuer", "GeneralNames", "items", "__decorate", "AsnType", "AsnTypeTypes", "CertificatePolicies_1", "id_ce_certificatePolicies", "id_ce", "id_ce_certificatePolicies_anyPolicy", "DisplayText", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "NoticeReference", "params", "DisplayText", "__decorate", "AsnProp", "AsnPropTypes", "UserNotice", "Qualifier", "AsnType", "AsnTypeTypes", "PolicyQualifierInfo", "params", "__decorate", "AsnProp", "AsnPropTypes", "PolicyInformation", "CertificatePolicies", "CertificatePolicies_1", "AsnArray", "items", "AsnType", "AsnTypeTypes", "id_ce_cRLNumber", "id_ce", "CRLNumber", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "id_ce_deltaCRLIndicator", "id_ce", "BaseCRLNumber", "CRLNumber", "__decorate", "AsnType", "AsnTypeTypes", "CRLDistributionPoints_1", "id_ce_cRLDistributionPoints", "id_ce", "ReasonFlags", "Reason", "BitString", "res", "flags", "DistributionPointName", "params", "__decorate", "AsnProp", "GeneralName", "RelativeDistinguishedName", "AsnType", "AsnTypeTypes", "DistributionPoint", "params", "__decorate", "AsnProp", "DistributionPointName", "Reason", "GeneralName", "CRLDistributionPoints", "CRLDistributionPoints_1", "AsnArray", "items", "AsnType", "AsnTypeTypes", "FreshestCRL_1", "id_ce_freshestCRL", "id_ce", "FreshestCRL", "CRLDistributionPoints", "items", "__decorate", "AsnType", "AsnTypeTypes", "DistributionPoint", "id_ce_issuingDistributionPoint", "id_ce", "IssuingDistributionPoint", "_IssuingDistributionPoint", "params", "__decorate", "AsnProp", "DistributionPointName", "AsnPropTypes", "Reason", "id_ce_cRLReasons", "id_ce", "CRLReasons", "CRLReason", "reason", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "ExtendedKeyUsage_1", "id_ce_extKeyUsage", "id_ce", "ExtendedKeyUsage", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "AsnPropTypes", "anyExtendedKeyUsage", "id_ce_extKeyUsage", "id_kp_serverAuth", "id_kp", "id_kp_clientAuth", "id_kp_codeSigning", "id_kp_emailProtection", "id_kp_timeStamping", "id_kp_OCSPSigning", "id_ce_inhibitAnyPolicy", "id_ce", "InhibitAnyPolicy", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "AsnType", "AsnTypeTypes", "id_ce_invalidityDate", "id_ce", "InvalidityDate", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "IssueAlternativeName_1", "id_ce_issuerAltName", "id_ce", "IssueAlternativeName", "GeneralNames", "items", "__decorate", "AsnType", "AsnTypeTypes", "id_ce_keyUsage", "id_ce", "KeyUsageFlags", "KeyUsage", "BitString", "flag", "res", "GeneralSubtrees_1", "id_ce_nameConstraints", "id_ce", "GeneralSubtree", "params", "GeneralName", "__decorate", "AsnProp", "AsnPropTypes", "GeneralSubtrees", "AsnArray", "items", "AsnType", "AsnTypeTypes", "NameConstraints", "params", "__decorate", "AsnProp", "GeneralSubtrees", "id_ce_policyConstraints", "id_ce", "PolicyConstraints", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "PolicyMappings_1", "id_ce_policyMappings", "id_ce", "PolicyMapping", "params", "__decorate", "AsnProp", "AsnPropTypes", "PolicyMappings", "AsnArray", "items", "AsnType", "AsnTypeTypes", "SubjectAlternativeName_1", "id_ce_subjectAltName", "id_ce", "SubjectAlternativeName", "GeneralNames", "items", "__decorate", "AsnType", "AsnTypeTypes", "Attribute", "params", "__decorate", "AsnProp", "AsnPropTypes", "SubjectDirectoryAttributes_1", "id_ce_subjectDirectoryAttributes", "id_ce", "SubjectDirectoryAttributes", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "Attribute", "id_ce_subjectKeyIdentifier", "id_ce", "SubjectKeyIdentifier", "KeyIdentifier", "id_ce_privateKeyUsagePeriod", "id_ce", "PrivateKeyUsagePeriod", "params", "__decorate", "AsnProp", "AsnPropTypes", "EntrustInfoFlags", "EntrustInfo", "BitString", "res", "flags", "EntrustVersionInfo", "params", "__decorate", "AsnProp", "AsnPropTypes", "SubjectInfoAccessSyntax_1", "id_pe_subjectInfoAccess", "id_pe", "SubjectInfoAccessSyntax", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "AccessDescription", "pvtsutils", "AlgorithmIdentifier", "_AlgorithmIdentifier", "params", "data", "__decorate", "AsnProp", "AsnPropTypes", "SubjectPublicKeyInfo", "params", "AlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "Time", "time", "date", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "Validity", "params", "Time", "__decorate", "AsnProp", "Extensions_1", "Extension", "_Extension", "params", "OctetString", "__decorate", "AsnProp", "AsnPropTypes", "Extensions", "AsnArray", "items", "AsnType", "AsnTypeTypes", "Version", "TBSCertificate", "params", "Version", "AlgorithmIdentifier", "Name", "Validity", "SubjectPublicKeyInfo", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "Extensions", "Certificate", "params", "TBSCertificate", "AlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "RevokedCertificate", "params", "Time", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "Extension", "TBSCertList", "AlgorithmIdentifier", "Name", "CertificateList", "params", "TBSCertList", "AlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "import_pvtsutils", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "__classPrivateFieldGet", "receiver", "state", "kind", "f", "__classPrivateFieldSet", "value", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "IssuerAndSerialNumber", "params", "Name", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "SignerIdentifier", "params", "__decorate", "AsnProp", "SubjectKeyIdentifier", "IssuerAndSerialNumber", "AsnType", "AsnTypeTypes", "CMSVersion", "DigestAlgorithmIdentifier", "AlgorithmIdentifier", "__decorate", "AsnType", "AsnTypeTypes", "SignatureAlgorithmIdentifier", "AlgorithmIdentifier", "__decorate", "AsnType", "AsnTypeTypes", "KeyEncryptionAlgorithmIdentifier", "AlgorithmIdentifier", "__decorate", "AsnType", "AsnTypeTypes", "ContentEncryptionAlgorithmIdentifier", "AlgorithmIdentifier", "__decorate", "AsnType", "AsnTypeTypes", "MessageAuthenticationCodeAlgorithm", "AlgorithmIdentifier", "__decorate", "AsnType", "AsnTypeTypes", "KeyDerivationAlgorithmIdentifier", "AlgorithmIdentifier", "__decorate", "AsnType", "AsnTypeTypes", "Attribute", "params", "__decorate", "AsnProp", "AsnPropTypes", "SignerInfos_1", "SignerInfo", "params", "CMSVersion", "SignerIdentifier", "DigestAlgorithmIdentifier", "SignatureAlgorithmIdentifier", "OctetString", "__decorate", "AsnProp", "AsnPropTypes", "Attribute", "SignerInfos", "AsnArray", "items", "AsnType", "AsnTypeTypes", "SigningTime", "Time", "__decorate", "AsnType", "AsnTypeTypes", "CounterSignature", "SignerInfo", "__decorate", "AsnType", "AsnTypeTypes", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "ACClearAttrs", "params", "GeneralName", "__decorate", "AsnProp", "AsnPropTypes", "Attribute", "AttrSpec_1", "AttrSpec", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "AsnPropTypes", "AAControls", "params", "__decorate", "AsnProp", "AsnPropTypes", "AttrSpec", "IssuerSerial", "params", "GeneralNames", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "DigestedObjectType", "ObjectDigestInfo", "params", "AlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "V2Form", "params", "__decorate", "AsnProp", "GeneralNames", "IssuerSerial", "ObjectDigestInfo", "AttCertIssuer", "params", "__decorate", "AsnProp", "GeneralName", "V2Form", "AsnType", "AsnTypeTypes", "AttCertValidityPeriod", "params", "__decorate", "AsnProp", "AsnPropTypes", "Holder", "params", "__decorate", "AsnProp", "IssuerSerial", "GeneralNames", "ObjectDigestInfo", "AttCertVersion", "AttributeCertificateInfo", "params", "Holder", "AttCertIssuer", "AlgorithmIdentifier", "AttCertValidityPeriod", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "Attribute", "Extensions", "AttributeCertificate", "params", "AttributeCertificateInfo", "AlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "ClassListFlags", "ClassList", "BitString", "SecurityCategory", "params", "__decorate", "AsnProp", "AsnPropTypes", "Clearance", "params", "ClassList", "ClassListFlags", "__decorate", "AsnProp", "AsnPropTypes", "SecurityCategory", "IetfAttrSyntaxValueChoices", "params", "__decorate", "AsnProp", "OctetString", "AsnPropTypes", "IetfAttrSyntax", "GeneralNames", "id_pe_ac_auditIdentity", "id_pe", "id_pe_aaControls", "id_pe_ac_proxying", "id_ce_targetInformation", "id_ce", "id_aca", "id_pkix", "id_aca_authenticationInfo", "id_aca_accessIdentity", "id_aca_chargingIdentity", "id_aca_group", "id_aca_encAttrs", "id_at", "id_at_role", "Targets_1", "TargetCert", "params", "IssuerSerial", "__decorate", "AsnProp", "GeneralName", "ObjectDigestInfo", "Target", "AsnType", "AsnTypeTypes", "Targets", "Targets_1", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "Target", "ProxyInfo_1", "ProxyInfo", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "Targets", "RoleSyntax", "params", "__decorate", "AsnProp", "GeneralNames", "GeneralName", "SvceAuthInfo", "params", "GeneralName", "__decorate", "AsnProp", "OctetString", "CertificateSet_1", "OtherCertificateFormat", "params", "__decorate", "AsnProp", "AsnPropTypes", "CertificateChoices", "Certificate", "AttributeCertificate", "AsnType", "AsnTypeTypes", "CertificateSet", "CertificateSet_1", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "CertificateChoices", "ContentInfo", "params", "__decorate", "AsnProp", "AsnPropTypes", "EncapsulatedContent", "params", "__decorate", "AsnProp", "OctetString", "AsnPropTypes", "AsnType", "AsnTypeTypes", "EncapsulatedContentInfo", "params", "__decorate", "AsnProp", "AsnPropTypes", "EncapsulatedContent", "EncryptedContent", "params", "__decorate", "AsnProp", "OctetString", "AsnConstructedOctetStringConverter", "AsnType", "AsnTypeTypes", "EncryptedContentInfo", "params", "ContentEncryptionAlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "EncryptedContent", "OtherKeyAttribute", "params", "__decorate", "AsnProp", "AsnPropTypes", "RecipientEncryptedKeys_1", "RecipientKeyIdentifier", "params", "SubjectKeyIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "OtherKeyAttribute", "KeyAgreeRecipientIdentifier", "IssuerAndSerialNumber", "AsnType", "AsnTypeTypes", "RecipientEncryptedKey", "params", "KeyAgreeRecipientIdentifier", "OctetString", "__decorate", "AsnProp", "RecipientEncryptedKeys", "RecipientEncryptedKeys_1", "AsnArray", "items", "AsnType", "AsnTypeTypes", "OriginatorPublicKey", "params", "AlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "OriginatorIdentifierOrKey", "SubjectKeyIdentifier", "IssuerAndSerialNumber", "AsnType", "AsnTypeTypes", "KeyAgreeRecipientInfo", "params", "CMSVersion", "OriginatorIdentifierOrKey", "KeyEncryptionAlgorithmIdentifier", "RecipientEncryptedKeys", "__decorate", "AsnProp", "AsnPropTypes", "OctetString", "RecipientIdentifier", "params", "__decorate", "AsnProp", "SubjectKeyIdentifier", "IssuerAndSerialNumber", "AsnType", "AsnTypeTypes", "KeyTransRecipientInfo", "params", "CMSVersion", "RecipientIdentifier", "KeyEncryptionAlgorithmIdentifier", "OctetString", "__decorate", "AsnProp", "AsnPropTypes", "KEKIdentifier", "params", "OctetString", "__decorate", "AsnProp", "AsnPropTypes", "OtherKeyAttribute", "KEKRecipientInfo", "CMSVersion", "KeyEncryptionAlgorithmIdentifier", "PasswordRecipientInfo", "params", "CMSVersion", "KeyEncryptionAlgorithmIdentifier", "OctetString", "__decorate", "AsnProp", "AsnPropTypes", "KeyDerivationAlgorithmIdentifier", "OtherRecipientInfo", "params", "__decorate", "AsnProp", "AsnPropTypes", "RecipientInfo", "KeyTransRecipientInfo", "KeyAgreeRecipientInfo", "KEKRecipientInfo", "PasswordRecipientInfo", "AsnType", "AsnTypeTypes", "RecipientInfos_1", "RecipientInfos", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "RecipientInfo", "RevocationInfoChoices_1", "id_ri", "id_pkix", "id_ri_ocsp_response", "id_ri_scvp", "OtherRevocationInfoFormat", "params", "__decorate", "AsnProp", "AsnPropTypes", "RevocationInfoChoice", "AsnType", "AsnTypeTypes", "RevocationInfoChoices", "RevocationInfoChoices_1", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "RevocationInfoChoice", "OriginatorInfo", "params", "__decorate", "AsnProp", "CertificateSet", "RevocationInfoChoices", "UnprotectedAttributes_1", "UnprotectedAttributes", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "Attribute", "EnvelopedData", "params", "CMSVersion", "RecipientInfos", "EncryptedContentInfo", "__decorate", "AsnProp", "AsnPropTypes", "OriginatorInfo", "UnprotectedAttributes", "id_signedData", "DigestAlgorithmIdentifiers_1", "DigestAlgorithmIdentifiers", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "DigestAlgorithmIdentifier", "SignedData", "params", "CMSVersion", "DigestAlgorithmIdentifiers", "EncapsulatedContentInfo", "SignerInfos", "__decorate", "AsnProp", "AsnPropTypes", "CertificateSet", "RevocationInfoChoices", "id_ecPublicKey", "id_ecdsaWithSHA1", "id_ecdsaWithSHA224", "id_ecdsaWithSHA256", "id_ecdsaWithSHA384", "id_ecdsaWithSHA512", "id_secp256r1", "id_secp384r1", "id_secp521r1", "create", "algorithm", "AlgorithmIdentifier", "ecdsaWithSHA1", "id_ecdsaWithSHA1", "ecdsaWithSHA224", "id_ecdsaWithSHA224", "ecdsaWithSHA256", "id_ecdsaWithSHA256", "ecdsaWithSHA384", "id_ecdsaWithSHA384", "ecdsaWithSHA512", "id_ecdsaWithSHA512", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "FieldID", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "ECPoint", "OctetString", "Curve", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "ECPVer", "SpecifiedECDomain", "params", "__decorate", "AsnProp", "AsnPropTypes", "FieldID", "Curve", "ECPoint", "AsnIntegerArrayBufferConverter", "AsnType", "AsnTypeTypes", "ECParameters", "params", "__decorate", "AsnProp", "AsnPropTypes", "SpecifiedECDomain", "AsnType", "AsnTypeTypes", "ECPrivateKey", "params", "OctetString", "__decorate", "AsnProp", "AsnPropTypes", "ECParameters", "ECDSASigValue", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "id_pkcs_1", "id_rsaEncryption", "id_RSAES_OAEP", "id_pSpecified", "id_RSASSA_PSS", "id_md2WithRSAEncryption", "id_md5WithRSAEncryption", "id_sha1WithRSAEncryption", "id_sha224WithRSAEncryption", "id_sha256WithRSAEncryption", "id_pkcs_1", "id_sha384WithRSAEncryption", "id_sha512WithRSAEncryption", "id_sha512_224WithRSAEncryption", "id_sha512_256WithRSAEncryption", "id_sha1", "id_sha224", "id_sha256", "id_sha384", "id_sha512", "id_sha512_224", "id_sha512_256", "id_md2", "id_md5", "id_mgf1", "create", "algorithm", "AlgorithmIdentifier", "md2", "id_md2", "md4", "id_md5", "sha1", "id_sha1", "sha224", "id_sha224", "sha256", "id_sha256", "sha384", "id_sha384", "sha512", "id_sha512", "sha512_224", "id_sha512_224", "sha512_256", "id_sha512_256", "mgf1SHA1", "id_mgf1", "AsnConvert", "pSpecifiedEmpty", "id_pSpecified", "AsnOctetStringConverter", "rsaEncryption", "id_rsaEncryption", "md2WithRSAEncryption", "id_md2WithRSAEncryption", "md5WithRSAEncryption", "id_md5WithRSAEncryption", "sha1WithRSAEncryption", "id_sha1WithRSAEncryption", "sha224WithRSAEncryption", "id_sha512_224WithRSAEncryption", "sha256WithRSAEncryption", "id_sha512_256WithRSAEncryption", "sha384WithRSAEncryption", "id_sha384WithRSAEncryption", "sha512WithRSAEncryption", "id_sha512WithRSAEncryption", "sha512_224WithRSAEncryption", "sha512_256WithRSAEncryption", "RsaEsOaepParams", "params", "AlgorithmIdentifier", "sha1", "id_mgf1", "AsnConvert", "pSpecifiedEmpty", "__decorate", "AsnProp", "mgf1SHA1", "RSAES_OAEP", "id_RSAES_OAEP", "RsaSaPssParams", "params", "AlgorithmIdentifier", "sha1", "id_mgf1", "AsnConvert", "__decorate", "AsnProp", "mgf1SHA1", "AsnPropTypes", "RSASSA_PSS", "id_RSASSA_PSS", "DigestInfo", "params", "AlgorithmIdentifier", "OctetString", "__decorate", "AsnProp", "OtherPrimeInfos_1", "OtherPrimeInfo", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "OtherPrimeInfos", "AsnArray", "items", "AsnType", "AsnTypeTypes", "RSAPrivateKey", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "OtherPrimeInfos", "RSAPublicKey", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnIntegerArrayBufferConverter", "Lifecycle", "lifecycle_default", "import_tslib", "__extends", "__assign", "__rest", "__decorate", "__param", "__metadata", "__awaiter", "__generator", "__exportStar", "__createBinding", "__values", "__read", "__spread", "__spreadArrays", "__await", "__asyncGenerator", "__asyncDelegator", "__asyncValues", "__makeTemplateObject", "__importStar", "__importDefault", "__classPrivateFieldGet", "__classPrivateFieldSet", "tslib", "INJECTION_TOKEN_METADATA_KEY", "getParamInfo", "target", "params", "injectionTokens", "key", "isClassProvider", "provider", "isFactoryProvider", "provider", "DelayedConstructor", "wrap", "createObject", "_this", "target", "init", "value", "delayedObject", "handler", "install", "name", "args", "_i", "method", "__spread", "isNormalToken", "token", "isTokenDescriptor", "descriptor", "isTransformDescriptor", "isConstructorToken", "DelayedConstructor", "isTokenProvider", "provider", "isValueProvider", "provider", "isProvider", "provider", "isClassProvider", "isValueProvider", "isTokenProvider", "isFactoryProvider", "RegistryBase", "key", "value", "registry_base_default", "Registry", "_super", "__extends", "registry_base_default", "registry_default", "ResolutionContext", "resolution_context_default", "formatDependency", "params", "idx", "argName", "composeErrorMessage", "msg", "indent", "__spread", "l", "formatErrorCtor", "ctor", "paramIdx", "error", "_a", "__read", "_b", "dep", "isDisposable", "value", "disposeFun", "PreResolutionInterceptors", "_super", "__extends", "registry_base_default", "PostResolutionInterceptors", "_super", "__extends", "registry_base_default", "Interceptors", "PreResolutionInterceptors", "PostResolutionInterceptors", "interceptors_default", "typeInfo", "InternalDependencyContainer", "parent", "registry_default", "interceptors_default", "token", "providerOrConstructor", "options", "lifecycle_default", "provider", "isProvider", "isTokenProvider", "path", "tokenProvider", "currentToken", "__spread", "registration", "isValueProvider", "isFactoryProvider", "from", "to", "isNormalToken", "instance", "useClass", "context", "isOptional", "resolution_context_default", "result", "isConstructorToken", "resolutionType", "e_1", "_a", "remainingInterceptors", "_b", "__values", "_c", "interceptor", "e_1_1", "e_2", "e_2_1", "isSingleton", "isContainerScoped", "returnInstance", "resolved", "isClassProvider", "_this", "registrations", "result_1", "item", "recursive", "e_3", "_d", "__read", "e_3_1", "e_4", "childContainer", "e_4_1", "callback", "__awaiter", "promises", "__generator", "disposable", "maybePromise", "ctor", "DelayedConstructor", "target", "paramInfo", "params", "isDisposable", "param", "idx", "isTokenDescriptor", "isTransformDescriptor", "e", "formatErrorCtor", "injectable", "options", "target", "typeInfo", "getParamInfo", "token", "instance", "injectable_default", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "PKCS12AttrSet_1", "PKCS12Attribute", "params", "__decorate", "AsnProp", "AsnPropTypes", "PKCS12AttrSet", "AsnArray", "items", "AsnType", "AsnTypeTypes", "AuthenticatedSafe_1", "AuthenticatedSafe", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "ContentInfo", "id_rsadsi", "id_pkcs", "id_pkcs_12", "id_pkcs_12PbeIds", "id_pbeWithSHAAnd128BitRC4", "id_pbeWithSHAAnd40BitRC4", "id_pbeWithSHAAnd3_KeyTripleDES_CBC", "id_pbeWithSHAAnd2_KeyTripleDES_CBC", "id_pbeWithSHAAnd128BitRC2_CBC", "id_pbewithSHAAnd40BitRC2_CBC", "id_bagtypes", "id_keyBag", "id_bagtypes", "id_pkcs8ShroudedKeyBag", "id_certBag", "id_CRLBag", "id_SecretBag", "id_SafeContents", "id_pkcs_9", "CertBag", "params", "__decorate", "AsnProp", "AsnPropTypes", "id_certTypes", "id_pkcs_9", "id_x509Certificate", "id_sdsiCertificate", "CRLBag", "params", "__decorate", "AsnProp", "AsnPropTypes", "id_crlTypes", "id_pkcs_9", "id_x509CRL", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "EncryptedData", "OctetString", "EncryptedPrivateKeyInfo", "params", "AlgorithmIdentifier", "__decorate", "AsnProp", "Attributes_1", "Version", "PrivateKey", "OctetString", "Attributes", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "Attribute", "PrivateKeyInfo", "params", "Version", "AlgorithmIdentifier", "PrivateKey", "__decorate", "AsnProp", "AsnPropTypes", "Attributes", "KeyBag", "PrivateKeyInfo", "__decorate", "AsnType", "AsnTypeTypes", "PKCS8ShroudedKeyBag", "EncryptedPrivateKeyInfo", "__decorate", "AsnType", "AsnTypeTypes", "SecretBag", "params", "__decorate", "AsnProp", "AsnPropTypes", "MacData", "params", "DigestInfo", "OctetString", "__decorate", "AsnProp", "AsnPropTypes", "PFX", "params", "ContentInfo", "MacData", "__decorate", "AsnProp", "AsnPropTypes", "SafeContents_1", "SafeBag", "params", "__decorate", "AsnProp", "AsnPropTypes", "PKCS12Attribute", "SafeContents", "AsnArray", "items", "AsnType", "AsnTypeTypes", "ExtensionRequest_1", "ExtendedCertificateAttributes_1", "SMIMECapabilities_1", "id_pkcs9", "id_pkcs9_mo", "id_pkcs9_oc", "id_pkcs9_at", "id_pkcs9_sx", "id_pkcs9_mr", "id_pkcs9_oc_pkcsEntity", "id_pkcs9_oc_naturalPerson", "id_pkcs9_at_emailAddress", "id_pkcs9_at_unstructuredName", "id_pkcs9_at_contentType", "id_pkcs9_at_messageDigest", "id_pkcs9_at_signingTime", "id_pkcs9_at_counterSignature", "id_pkcs9_at_challengePassword", "id_pkcs9_at_unstructuredAddress", "id_pkcs9_at_extendedCertificateAttributes", "id_pkcs9_at_signingDescription", "id_pkcs9_at_extensionRequest", "id_pkcs9_at_smimeCapabilities", "id_pkcs9_at_friendlyName", "id_pkcs9_at_localKeyId", "id_pkcs9_at_pkcs15Token", "id_pkcs9_at", "id_pkcs9_at_encryptedPrivateKeyInfo", "id_pkcs9_at_randomNonce", "id_pkcs9_at_sequenceNumber", "id_pkcs9_at_pkcs7PDU", "id_ietf_at", "id_pkcs9_at_dateOfBirth", "id_pkcs9_at_placeOfBirth", "id_pkcs9_at_gender", "id_pkcs9_at_countryOfCitizenship", "id_pkcs9_at_countryOfResidence", "id_pkcs9_sx_pkcs9String", "id_pkcs9_sx", "id_pkcs9_sx_signingTime", "id_pkcs9_mr_caseIgnoreMatch", "id_pkcs9_mr", "id_pkcs9_mr_signingTimeMatch", "id_smime", "id_pkcs9", "id_certTypes", "crlTypes", "id_at_pseudonym", "id_at", "PKCS9String", "DirectoryString", "params", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "Pkcs7PDU", "ContentInfo", "__decorate", "AsnType", "AsnTypeTypes", "UserPKCS12", "PFX", "__decorate", "AsnType", "AsnTypeTypes", "EncryptedPrivateKeyInfo", "__decorate", "AsnType", "AsnTypeTypes", "EmailAddress", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "UnstructuredName", "PKCS9String", "__decorate", "AsnType", "AsnTypeTypes", "UnstructuredAddress", "DirectoryString", "__decorate", "AsnType", "AsnTypeTypes", "DateOfBirth", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "PlaceOfBirth", "DirectoryString", "__decorate", "AsnType", "AsnTypeTypes", "Gender", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "CountryOfCitizenship", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "CountryOfResidence", "CountryOfCitizenship", "__decorate", "AsnType", "AsnTypeTypes", "Pseudonym", "DirectoryString", "__decorate", "AsnType", "AsnTypeTypes", "ContentType", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "SigningTime", "Time", "__decorate", "AsnType", "AsnTypeTypes", "SequenceNumber", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "CounterSignature", "SignerInfo", "__decorate", "AsnType", "AsnTypeTypes", "ChallengePassword", "DirectoryString", "__decorate", "AsnType", "AsnTypeTypes", "ExtensionRequest", "ExtensionRequest_1", "Extensions", "items", "__decorate", "AsnType", "AsnTypeTypes", "ExtendedCertificateAttributes", "ExtendedCertificateAttributes_1", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "Attribute", "FriendlyName", "value", "__decorate", "AsnProp", "AsnPropTypes", "AsnType", "AsnTypeTypes", "SMIMECapability", "AlgorithmIdentifier", "__decorate", "AsnType", "AsnTypeTypes", "SMIMECapabilities", "SMIMECapabilities_1", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "SMIMECapability", "__decorate", "decorators", "target", "key", "desc", "c", "r", "d", "i", "Attributes_1", "Attributes", "AsnArray", "items", "__decorate", "AsnType", "AsnTypeTypes", "Attribute", "CertificationRequestInfo", "params", "Name", "SubjectPublicKeyInfo", "Attributes", "__decorate", "AsnProp", "AsnPropTypes", "CertificationRequest", "params", "CertificationRequestInfo", "AlgorithmIdentifier", "__decorate", "AsnProp", "AsnPropTypes", "diAlgorithm", "AlgorithmProvider", "instance", "alg", "algorithm", "res", "AlgorithmIdentifier", "unknown", "diAlgorithmProvider", "EcAlgorithm_1", "idVersionOne", "idBrainpoolP160r1", "idBrainpoolP160t1", "idBrainpoolP192r1", "idBrainpoolP192t1", "idBrainpoolP224r1", "idBrainpoolP224t1", "idBrainpoolP256r1", "idBrainpoolP256t1", "idBrainpoolP320r1", "idBrainpoolP320t1", "idBrainpoolP384r1", "idBrainpoolP384t1", "idBrainpoolP512r1", "idBrainpoolP512t1", "brainpoolP160r1", "brainpoolP160t1", "brainpoolP192r1", "brainpoolP192t1", "brainpoolP224r1", "brainpoolP224t1", "brainpoolP256r1", "brainpoolP256t1", "brainpoolP320r1", "brainpoolP320t1", "brainpoolP384r1", "brainpoolP384t1", "brainpoolP512r1", "brainpoolP512t1", "ECDSA", "EcAlgorithm", "ecdsaWithSHA1", "ecdsaWithSHA256", "ecdsaWithSHA384", "ecdsaWithSHA512", "parameters", "id_secp256r1", "id_secp384r1", "id_secp521r1", "id_ecPublicKey", "AsnConvert", "ECParameters", "id_ecdsaWithSHA1", "id_ecdsaWithSHA256", "id_ecdsaWithSHA384", "id_ecdsaWithSHA512", "__decorate", "injectable_default", "NAME", "VALUE", "TextObject", "name", "items", "value", "key", "DefaultAlgorithmSerializer", "obj", "OidSerializer", "ecAlg", "oid", "id_sha1", "id_sha224", "id_sha256", "id_sha384", "id_sha512", "id_rsaEncryption", "id_sha1WithRSAEncryption", "id_sha224WithRSAEncryption", "id_sha256WithRSAEncryption", "id_sha384WithRSAEncryption", "id_sha512WithRSAEncryption", "id_ecdsaWithSHA224", "id_kp_serverAuth", "id_kp_clientAuth", "id_kp_codeSigning", "id_kp_emailProtection", "id_kp_timeStamping", "id_kp_OCSPSigning", "id_signedData", "TextConverter", "deep", "pad", "objValue", "keyValue", "buffer", "view", "i", "row", "j", "hex", "_AsnData_rawData", "AsnData", "_AsnData", "__classPrivateFieldGet", "__classPrivateFieldSet", "args", "data", "format", "Extension", "_Extension", "raw", "OctetString", "asn", "_a", "CryptoProvider", "_CryptoProvider", "callbackfn", "thisArg", "crypto", "cryptoProvider", "OID_REGEX", "isOID", "id", "NameIdentifier", "names", "idOrName", "replaceUnknownCharacter", "text", "char", "escape", "Name", "_Name", "extraNames", "rdn", "o", "type", "json", "jsonItem", "attr", "regex", "matches", "level", "lastChar", "next", "RelativeDistinguishedName", "item", "asnRdn", "typeId", "values", "asnAttr", "AttributeTypeAndValue", "processedValue", "quotedMatches", "ERR_GN_CONSTRUCTOR", "ERR_GN_STRING_FORMAT", "ERR_GUID", "GUID_REGEX", "id_GUID", "id_UPN", "DNS", "DN", "EMAIL", "IP", "URL", "GUID", "UPN", "REGISTERED_ID", "GeneralName", "derName", "asnName", "OtherName", "AsnUtf8StringConverter", "guid", "DirectoryString", "GeneralNames", "params", "nameObj", "field", "rPaddingTag", "rEolChars", "rNameTag", "rBeginTag", "rEndTag", "rEolGroup", "rHeaderKey", "rHeaderValue", "rBase64Chars", "rBase64", "rPem", "PemConverter", "pem", "pattern", "base64", "pemStruct", "headersString", "headers", "lastHeader", "header", "rawData", "tag", "raws", "element", "upperCaseType", "sliced", "offset", "rows", "PemData", "_PemData", "stringRaw", "PublicKey", "_PublicKey", "spki", "param", "SubjectPublicKeyInfo", "keyUsages", "asnSpki", "id_RSASSA_PSS", "convertSpkiToRsaPkcs1", "algProv", "rsaPublicKey", "RSAPublicKey", "modulus", "AuthorityKeyIdentifierExtension", "_AuthorityKeyIdentifierExtension", "critical", "AuthorityKeyIdentifier", "KeyIdentifier", "id_ce_authorityKeyIdentifier", "certId", "certIdName", "aki", "BasicConstraintsExtension", "BasicConstraints", "id_ce_basicConstraints", "ExtendedKeyUsage", "ExtendedKeyUsageExtension", "id_ce_extKeyUsage", "KeyUsageFlags", "KeyUsagesExtension", "KeyUsage", "id_ce_keyUsage", "SubjectKeyIdentifierExtension", "_SubjectKeyIdentifierExtension", "publicKey", "SubjectKeyIdentifier", "identifier", "id_ce_subjectKeyIdentifier", "SubjectAlternativeNameExtension", "id_ce_subjectAltName", "SubjectAlternativeName", "namesObj", "ExtensionFactory", "extension", "Type", "CertificatePolicyExtension", "asnPolicies", "CertificatePolicies", "policies", "PolicyInformation", "id_ce_certificatePolicies", "CRLDistributionPointsExtension", "dps", "url", "DistributionPoint", "DistributionPointName", "CRLDistributionPoints", "id_ce_cRLDistributionPoints", "crlExt", "dp", "dpObj", "issuer", "AuthorityInfoAccessExtension", "_b", "_c", "_d", "AuthorityInfoAccessSyntax", "id_pe_authorityInfoAccess", "addAccessDescriptions", "id_ad_ocsp", "id_ad_caIssuers", "id_ad_timeStamping", "id_ad_caRepository", "accessDescription", "addUrlsToObject", "urls", "index", "indexedKey", "method", "AccessDescription", "IssuerAlternativeNameExtension", "id_ce_issuerAltName", "Attribute", "_Attribute", "ChallengePasswordAttribute", "ChallengePassword", "id_pkcs9_at_challengePassword", "ExtensionsAttribute", "extensions", "Extensions", "id_pkcs9_at_extensionRequest", "AttributeFactory", "attribute", "diAsnSignatureFormatter", "AsnDefaultSignatureFormatter", "signature", "RsaAlgorithm_1", "RsaAlgorithm", "hash", "saltLength", "hashAlgorithm", "RsaSaPssParams", "id_mgf1", "pssParams", "ShaAlgorithm", "AsnEcSignatureFormatter", "_AsnEcSignatureFormatter", "pointSize", "bytes", "positive", "result", "namedCurve", "ecSignature", "ECDSASigValue", "uint8Signature", "ecSigValue", "r", "s", "idX25519", "idX448", "idEd25519", "idEd448", "EdAlgorithm", "_Pkcs10CertificateRequest_tbs", "_Pkcs10CertificateRequest_subjectName", "_Pkcs10CertificateRequest_subject", "_Pkcs10CertificateRequest_signatureAlgorithm", "_Pkcs10CertificateRequest_signature", "_Pkcs10CertificateRequest_publicKey", "_Pkcs10CertificateRequest_attributes", "_Pkcs10CertificateRequest_extensions", "Pkcs10CertificateRequest", "CertificationRequest", "_asn", "ext", "signatureFormatters", "signatureFormatter", "req", "tbs", "Version", "attrs", "attrObj", "_X509Certificate_tbs", "_X509Certificate_serialNumber", "_X509Certificate_subjectName", "_X509Certificate_subject", "_X509Certificate_issuerName", "_X509Certificate_issuer", "_X509Certificate_notBefore", "_X509Certificate_notAfter", "_X509Certificate_signatureAlgorithm", "_X509Certificate_signature", "_X509Certificate_extensions", "_X509Certificate_publicKey", "X509Certificate", "PemData", "__classPrivateFieldGet", "__classPrivateFieldSet", "PublicKey", "tbs", "serialNumberBytes", "Name", "notBefore", "notAfter", "algProv", "instance", "diAlgorithmProvider", "o", "ExtensionFactory", "AsnConvert", "param", "args", "Certificate", "PemConverter", "_asn", "type", "ext", "params", "crypto", "cryptoProvider", "keyAlgorithm", "publicKey", "paramsKey", "key", "signatureFormatters", "diAsnSignatureFormatter", "signature", "signatureFormatter", "ok", "time", "algorithm", "obj", "cert", "data", "TextObject", "Version", "TextConverter", "extensions", "extObj", "generateCertificateSerialNumber", "input", "crypto", "cryptoProvider", "inputView", "serialNumber", "o", "firstNonZero", "newSerialNumber", "X509CertificateGenerator", "params", "_a", "spki", "PublicKey", "notBefore", "notAfter", "asnX509", "Certificate", "TBSCertificate", "Version", "Validity", "Extensions", "AsnConvert", "Extension", "SubjectPublicKeyInfo", "name", "Name", "defaultSigningAlgorithm", "signatureAlgorithm", "algProv", "instance", "diAlgorithmProvider", "tbs", "signatureValue", "signatureFormatters", "diAsnSignatureFormatter", "asnSignature", "signatureFormatter", "X509Certificate", "_X509CrlEntry_serialNumber", "_X509CrlEntry_revocationDate", "_X509CrlEntry_reason", "_X509CrlEntry_invalidity", "_X509CrlEntry_extensions", "X509CrlReason", "_X509CrlEntry_serialNumber", "_X509CrlEntry_revocationDate", "_X509CrlEntry_reason", "_X509CrlEntry_invalidity", "_X509CrlEntry_extensions", "_X509Crl_tbs", "_X509Crl_signatureAlgorithm", "_X509Crl_issuerName", "_X509Crl_thisUpdate", "_X509Crl_nextUpdate", "_X509Crl_entries", "_X509Crl_extensions", "_X509Crl_tbs", "_X509Crl_signatureAlgorithm", "_X509Crl_issuerName", "_X509Crl_thisUpdate", "_X509Crl_nextUpdate", "_X509Crl_entries", "_X509Crl_extensions", "ExtensionFactory", "id_ce_basicConstraints", "BasicConstraintsExtension", "id_ce_extKeyUsage", "ExtendedKeyUsageExtension", "id_ce_keyUsage", "KeyUsagesExtension", "id_ce_subjectKeyIdentifier", "SubjectKeyIdentifierExtension", "id_ce_authorityKeyIdentifier", "AuthorityKeyIdentifierExtension", "id_ce_subjectAltName", "SubjectAlternativeNameExtension", "id_ce_cRLDistributionPoints", "CRLDistributionPointsExtension", "id_pe_authorityInfoAccess", "AuthorityInfoAccessExtension", "id_ce_issuerAltName", "IssuerAlternativeNameExtension", "AttributeFactory", "id_pkcs9_at_challengePassword", "ChallengePasswordAttribute", "id_pkcs9_at_extensionRequest", "ExtensionsAttribute", "instance", "diAsnSignatureFormatter", "AsnDefaultSignatureFormatter", "AsnEcSignatureFormatter", "pathSepS", "pathSepB", "pathSep", "Key", "_Key", "s", "clean", "fromString", "encoding", "toString", "list", "other", "bytes", "key", "list1", "list2", "i", "c1", "c2", "ns", "namespaceType", "namespaceValue", "p", "keys", "flatten", "parts", "arr", "WebRTCDirectListener", "TypedEventEmitter", "UnimplementedError", "DUMP_SESSION_KEYS", "CHACHA_TAG_LENGTH", "isBytes", "a", "abool", "b", "anumber", "n", "abytes", "value", "length", "title", "bytes", "len", "needsLen", "prefix", "ofLen", "got", "aexists", "instance", "checkFinished", "aoutput", "out", "min", "u32", "arr", "clean", "arrays", "i", "createView", "isLE", "checkOpts", "defaults", "opts", "equalBytes", "a", "b", "diff", "i", "wrapCipher", "params", "constructor", "wrappedCipher", "key", "args", "abytes", "isLE", "nonce", "tagl", "cipher", "checkOutput", "fnLength", "output", "called", "data", "getOutput", "expectedLength", "out", "onlyAligned", "isAligned32", "u64Lengths", "dataLength", "aadLength", "abool", "num", "view", "createView", "bytes", "copyBytes", "encodeStr", "str", "c", "sigma16", "sigma32", "sigma16_32", "u32", "sigma32_32", "rotl", "a", "b", "isAligned32", "BLOCK_LEN", "BLOCK_LEN32", "MAX_COUNTER", "U32_EMPTY", "runCipher", "core", "sigma", "key", "nonce", "data", "output", "counter", "rounds", "len", "block", "b32", "isAligned", "d32", "o32", "pos", "take", "pos32", "j", "posj", "createCipher", "opts", "allowShortKeys", "extendNonceFn", "counterLength", "counterRight", "checkOpts", "anumber", "abool", "abytes", "toClean", "l", "k", "copyBytes", "k32", "nonceNcLen", "nc", "n32", "clean", "u8to16", "a", "i", "Poly1305", "key", "copyBytes", "abytes", "t0", "u8to16", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "i", "data", "offset", "isLast", "hibit", "h", "r", "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "c", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "pad", "g", "mask", "f", "clean", "aexists", "buffer", "blockLen", "len", "pos", "take", "out", "aoutput", "opos", "outputLen", "res", "wrapConstructorWithKey", "hashCons", "hashC", "msg", "tmp", "poly1305", "chachaCore", "s", "k", "n", "out", "cnt", "rounds", "y00", "y01", "y02", "y03", "y04", "y05", "y06", "y07", "y08", "y09", "y10", "y11", "y12", "y13", "y14", "y15", "x00", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x08", "x09", "x10", "x11", "x12", "x13", "x14", "x15", "r", "rotl", "oi", "hchacha", "i", "chacha20", "createCipher", "chachaCore", "xchacha20", "hchacha", "ZEROS16", "updatePadded", "h", "msg", "leftover", "ZEROS32", "computeTag", "fn", "key", "nonce", "ciphertext", "AAD", "abytes", "authKey", "lengths", "u64Lengths", "poly1305", "res", "clean", "_poly1305_aead", "xorStream", "plaintext", "output", "plength", "getOutput", "oPlain", "tag", "data", "passedTag", "equalBytes", "chacha20poly1305", "wrapCipher", "chacha20", "xchacha20poly1305", "xchacha20", "extract", "hash", "ikm", "salt", "ahash", "hmac", "HKDF_COUNTER", "EMPTY_BUFFER", "expand", "prk", "info", "length", "anumber", "olen", "blocks", "abytes", "okm", "HMAC", "HMACTmp", "T", "counter", "clean", "pureJsCrypto", "data", "sha256", "ck", "ikm", "prk", "extract", "okm", "expand", "k1", "k2", "k3", "secretKey", "x25519", "seed", "privateKey", "publicKey", "plaintext", "nonce", "ad", "k", "chacha20poly1305", "ciphertext", "dst", "defaultCrypto", "pureJsCrypto", "wrapCrypto", "crypto", "keypair", "publicKey", "uint16BEEncode", "value", "target", "allocUnsafe", "uint16BEDecode", "data", "registerMetrics", "metrics", "logLocalStaticKeys", "s", "keyLogger", "DUMP_SESSION_KEYS", "toString", "logLocalEphemeralKeys", "e", "logRemoteStaticKey", "rs", "logRemoteEphemeralKey", "re", "logCipherState", "cs1", "cs2", "InvalidCryptoExchangeError", "_InvalidCryptoExchangeError", "message", "MIN_NONCE", "MAX_NONCE", "ERR_MAX_NONCE", "Nonce", "n", "alloc", "ZEROLEN", "alloc", "CipherState", "crypto", "k", "Nonce", "ad", "plaintext", "e", "ciphertext", "dst", "SymmetricState", "protocolName", "protocolNameBytes", "fromString", "hashProtocolName", "ikm", "ck", "tempK", "data", "Uint8ArrayList", "tempK1", "tempK2", "AbstractHandshakeState", "init", "prologue", "initiator", "rs", "re", "message", "offset", "cipherLength", "temp", "XXHandshakeState", "payload", "encS", "InvalidCryptoExchangeError", "consumed", "h", "NoiseExtensions", "_codec", "message", "obj", "w", "opts", "value", "reader", "length", "end", "tag", "MaxLengthError", "encodeMessage", "buf", "decodeMessage", "NoiseHandshakePayload", "alloc", "createHandshakePayload", "privateKey", "staticPublicKey", "extensions", "identitySig", "getSignaturePayload", "NoiseHandshakePayload", "publicKeyToProtobuf", "decodeHandshakePayload", "payloadBytes", "remoteStaticKey", "remoteIdentityKey", "payload", "publicKey", "publicKeyFromProtobuf", "signaturePayload", "e", "UnexpectedPeerError", "prefix", "fromString", "concat", "EncryptedMessageStream", "AbstractMessageStream", "stream", "handshake", "metrics", "LengthPrefixedDecoder", "uint16BEDecode", "noiseOnMessageDecrypt", "evt", "buf", "err", "noiseOnClose", "noiseOnDrain", "noiseOnRemoteCloseWrite", "chunk", "output", "Uint8ArrayList", "i", "end", "data", "uint16BEEncode", "CHACHA_TAG_LENGTH", "encrypted", "dst", "plaintext", "options", "toMessageStream", "connection", "performHandshakeInitiator", "init", "options", "log", "connection", "crypto", "privateKey", "prologue", "s", "remoteIdentityKey", "extensions", "payload", "createHandshakePayload", "xx", "XXHandshakeState", "logLocalStaticKeys", "ZEROLEN", "logLocalEphemeralKeys", "plaintext", "logRemoteEphemeralKey", "logRemoteStaticKey", "receivedPayload", "decodeHandshakePayload", "cs1", "cs2", "logCipherState", "ciphertext", "dst", "performHandshakeResponder", "Noise", "components", "init", "staticNoiseKey", "extensions", "crypto", "prologueBytes", "metrics", "_crypto", "defaultCrypto", "wrapCrypto", "registerMetrics", "alloc", "serviceCapabilities", "connection", "options", "log", "wrappedConnection", "lpStream", "uint16BEEncode", "uint16BEDecode", "handshake", "publicKey", "publicKeyFromProtobuf", "toMessageStream", "peerIdFromPublicKey", "protocols", "streamMuxers", "protocol", "streamMuxer", "InvalidCryptoExchangeError", "privateKey", "remoteIdentityKey", "result", "performHandshakeInitiator", "e", "performHandshakeResponder", "noise", "init", "components", "Noise", "multibaseDecoder", "bases", "b", "d", "fingerprintRegex", "getFingerprintFromSdp", "sdp", "certhash", "ma", "c", "InvalidParametersError", "decodeCerthash", "digest_exports", "ma2Fingerprint", "ma", "multihashDecoded", "decodeCerthash", "certhash", "prefix", "toSupportedHashFunction", "fingerprint", "str", "byte", "sdp", "InvalidFingerprintError", "fingerprint2Ma", "output", "encoded", "digest", "create", "sha256", "multiaddr", "base64url", "code", "UnsupportedHashAlgorithmError", "serverAnswerFromMultiaddr", "ufrag", "host", "port", "type", "getNetConfig", "InvalidParametersError", "MAX_MESSAGE_SIZE", "clientOfferFromMultiAddr", "munge", "desc", "lineBreak", "PREFIX", "fromString", "generateNoisePrologue", "localFingerprint", "remoteAddr", "role", "localFpString", "localFpArray", "local", "create", "sha256", "remote", "multibaseDecoder", "certhash", "byteLength", "concat", "CONNECTION_STATE_CHANGE_EVENT", "isFirefox", "isServer", "options", "peerConnection", "connect", "muxerFactory", "ufrag", "handshakeDataChannel", "offerSdp", "mungedOfferSdp", "munge", "answerSdp", "serverAnswerFromMultiaddr", "clientOfferFromMultiAddr", "mungedAnswerSdp", "pEvent", "remoteFingerprint", "fingerprint2Ma", "localFingerprint", "getFingerprintFromSdp", "WebRTCTransportError", "noisePrologue", "generateNoisePrologue", "connectionEncrypter", "noise", "handshakeStream", "createStream", "maConn", "toMultiaddrConnection", "err", "result", "createDialerRTCPeerConnection", "role", "ufrag", "options", "certificate", "rtcConfig", "peerConnection", "muxerFactory", "DataChannelMuxerFactory", "formatAsPem", "privateKey", "keyPair", "privateKeyToCryptoKeyPair", "exported", "toString", "WebRTCDirectTransport", "components", "init", "TypedEventEmitter", "InvalidParametersError", "transportSymbol", "serviceCapabilities", "ma", "options", "theirPeerId", "remotePeerString", "peerIdFromString", "ufrag", "genUfrag", "peerConnection", "muxerFactory", "createDialerRTCPeerConnection", "connect", "err", "NotStartedError", "WebRTCDirectListener", "multiaddrs", "WebRTCDirect", "forceRenew", "isTransportCertificate", "privateKey", "pem", "certhash", "formatAsPem", "keychainName", "DEFAULT_CERTIFICATE_PRIVATE_KEY_NAME", "keychain", "NotFoundError", "generateKeyPair", "cert", "dsKey", "Key", "DEFAULT_CERTIFICATE_DATASTORE_KEY", "keyPair", "privateKeyToCryptoKeyPair", "renewTime", "DEFAULT_CERTIFICATE_RENEWAL_THRESHOLD", "base64url", "sha256", "buf", "X509Certificate", "expiryTime", "exportedCertKey", "rawCertKey", "rawKeyPairKey", "equals", "notBefore", "notAfter", "DEFAULT_CERTIFICATE_LIFESPAN", "X509CertificateGenerator", "BasicConstraintsExtension", "fromString", "obj", "webRTCDirect", "init", "components", "WebRTCDirectTransport", "webRTC", "WebRTCTransport"]
}
