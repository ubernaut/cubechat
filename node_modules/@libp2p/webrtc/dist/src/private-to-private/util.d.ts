import { Message } from './pb/message.js';
import type { WebRTCDialEvents } from './transport.js';
import type { RTCPeerConnection } from '../webrtc/index.js';
import type { AbortOptions, LoggerOptions, PeerId, Stream } from '@libp2p/interface';
import type { Multiaddr } from '@multiformats/multiaddr';
import type { MessageStream } from 'it-protobuf-stream';
import type { ProgressOptions } from 'progress-events';
export interface ReadCandidatesOptions extends AbortOptions, LoggerOptions, ProgressOptions<WebRTCDialEvents> {
    direction: string;
}
export declare const readCandidatesUntilConnected: (pc: RTCPeerConnection, stream: MessageStream<Message, Stream>, options: ReadCandidatesOptions) => Promise<void>;
export declare function getRemotePeer(ma: Multiaddr): PeerId;
//# sourceMappingURL=util.d.ts.map