import { peerIdFromMultihash } from '@libp2p/peer-id';
import { base58btc } from 'multiformats/bases/base58';
import * as Digest from 'multiformats/hashes/digest';
/**
 * Calls the passed map function on every entry of the passed iterable iterator
 */
export function mapIterable(iter, map) {
    const iterator = {
        [Symbol.iterator]: () => {
            return iterator;
        },
        next: () => {
            const next = iter.next();
            const val = next.value;
            if (next.done === true || val == null) {
                const result = {
                    done: true,
                    value: undefined
                };
                return result;
            }
            return {
                done: false,
                value: map(val)
            };
        }
    };
    return iterator;
}
export function peerIdFromString(str) {
    const multihash = Digest.decode(base58btc.decode(`z${str}`));
    return peerIdFromMultihash(multihash);
}
//# sourceMappingURL=util.js.map