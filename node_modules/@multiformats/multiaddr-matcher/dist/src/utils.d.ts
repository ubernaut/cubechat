import type { Matcher, MultiaddrMatcher } from './index.js';
/**
 * Matches a multiaddr component with the specified code but no value
 */
export declare const code: (code: number) => Matcher;
/**
 * Matches a multiaddr component with the specified code and value. If the value
 * is omitted any non-undefined value is matched.
 */
export declare const value: (code: number, value?: string) => Matcher;
/**
 * Matches a multiaddr component with the specified code and value. If the value
 * is omitted any non-undefined value is matched.
 */
export declare const not: (matcher: Matcher) => Matcher;
/**
 * An optional matcher
 */
export declare const optional: (matcher: Matcher) => Matcher;
/**
 * Matches any one of the passed matches
 */
export declare const or: (...matchers: Matcher[]) => Matcher;
/**
 * Matches all of the passed matchers
 */
export declare const and: (...matchers: Matcher[]) => Matcher;
/**
 * Create a multiaddr matcher from the passed component matchers
 */
export declare function fmt(...matchers: Matcher[]): MultiaddrMatcher;
//# sourceMappingURL=utils.d.ts.map